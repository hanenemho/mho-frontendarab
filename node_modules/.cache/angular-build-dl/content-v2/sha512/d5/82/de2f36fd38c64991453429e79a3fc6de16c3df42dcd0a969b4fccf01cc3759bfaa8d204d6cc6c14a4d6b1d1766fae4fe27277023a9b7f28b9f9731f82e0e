{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/models/detailsfacture.ts","./src/app/models/groupetaxation.ts","./src/app/models/paramProduit.ts","./src/app/models/pointvente.ts","./src/app/models/searchFacture.ts","./src/app/models/subTotauxFacture.ts","./src/app/services/authentification.service.ts","./src/app/services/client.service.ts","./src/app/services/contribuable.service.ts","./src/app/services/facture.service.ts","./src/app/services/grpTaxation.service.ts","./src/app/services/paramPays.service.ts","./src/app/services/paramProduit.service.ts","./src/app/util/AuthGaurdService.ts","./src/app/util/AuthInterceptorService.ts","./src/app/util/token-storage.service.ts","./src/app/views/changement-password/changement-password.component.ts","./src/app/views/changement-password/changement-password.component.html","./src/app/views/client/client.component.ts","./src/app/views/client/client.component.html","./src/app/views/contribuable/contribuable.component.ts","./src/app/views/contribuable/contribuable.component.html","./src/app/views/dashboard/dashboard-overview/dashboard-overview.component.ts","./src/app/views/facture-consultation/facture-consultation.component.ts","./src/app/views/facture-consultation/facture-consultation.component.html","./src/app/views/facture/facture.component.ts","./src/app/views/facture/facture.component.html","./src/app/views/general-page-router/authentification.users.ts","./src/app/views/general-page-router/authentification.users.html","./src/app/views/group-taxation/group-taxation.component.ts","./src/app/views/group-taxation/group-taxation.component.html","./src/app/views/layout/footer/footer.component.ts","./src/app/views/layout/footer/footer.component.html","./src/app/views/layout/header/header.component.ts","./src/app/views/layout/header/header.component.html","./src/app/views/layout/maincontent/maincontent.component.ts","./src/app/views/layout/maincontent/maincontent.component.html","./src/app/views/layout/menu/menu.component.ts","./src/app/views/layout/menu/menu.component.html","./src/app/views/login/login.component.ts","./src/app/views/login/login.component.html","./src/app/views/param-pays/param-pays.component.ts","./src/app/views/param-pays/param-pays.component.html","./src/app/views/param-produit/param-produit.component.ts","./src/app/views/param-produit/param-produit.component.html","./src/app/views/password-oublie/password-oublie.component.ts","./src/app/views/password-oublie/password-oublie.component.html","./src/app/views/register/register.component.ts","./src/app/views/register/register.component.html","./src/app/views/settings/settings.component.ts","./src/app/views/settings/settings.component.html","./src/app/views/statistics/statistics.component.ts","./src/app/views/statistics/statistics.component.html","./src/app/views/user-verification/user-verification.component.ts","./src/app/views/user-verification/user-verification.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardOverviewComponent } from './views/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { authentificationUsers } from './views/general-page-router/authentification.users';\r\nimport { MaincontentComponent } from './views/layout/maincontent/maincontent.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { FactureComponent } from './views/facture/facture.component';\r\nimport { FactureConsultationComponent } from './views/facture-consultation/facture-consultation.component';\r\nimport { ParamPaysComponent } from './views/param-pays/param-pays.component';\r\nimport { GroupTaxationComponent } from './views/group-taxation/group-taxation.component';\r\nimport { ContribuableComponent } from './views/contribuable/contribuable.component';\r\nimport { AuthGaurdService } from './util/AuthGaurdService';\r\nimport { UserVerificationComponent } from './views/user-verification/user-verification.component';\r\nimport { ParamProduitComponent } from './views/param-produit/param-produit.component';\r\nimport { ChangementPasswordComponent } from './views/changement-password/changement-password.component';\r\nimport { PasswordOublieComponent } from './views/password-oublie/password-oublie.component';\r\nimport { SettingsComponent } from './views/settings/settings.component';\r\nimport { ClientComponent } from './views/client/client.component';\r\nimport { StatisticsComponent } from './views/statistics/statistics.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',redirectTo:'user/login',pathMatch:'full'},\r\n  {\r\n    path: 'user', component: authentificationUsers,\r\n    children: [\r\n      { path: 'login', component: LoginComponent },\r\n      { path:'register',component: RegisterComponent },\r\n      { path:'verification',component: UserVerificationComponent },\r\n      { path:'register',component: RegisterComponent },\r\n      { path:'changePwd',component: ChangementPasswordComponent },\r\n      { path:'forgetsPwd',component: PasswordOublieComponent }\r\n\r\n      \r\n    ]\r\n  },\r\n  {\r\n    path: 'dashboard', component:MaincontentComponent,canActivate:[AuthGaurdService] ,\r\n    children:[\r\n      { path:'facture',component: FactureComponent ,canActivate:[AuthGaurdService] },\r\n      { path:'historiqueFacture',component: FactureConsultationComponent ,},\r\n      { path:'contribuable',component: ContribuableComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'grpTaxation',component: GroupTaxationComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'parampays',component: ParamPaysComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'paramproduit',component: ParamProduitComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'settings',component: SettingsComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'client',component: ClientComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'statistics',component: StatisticsComponent ,canActivate:[AuthGaurdService]}\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'FACTURATION-FRONT';\r\n\r\n  constructor(private translate: TranslateService){\r\n    this.translate.addLangs(['fr']);\r\n    this.translate.setDefaultLang('fr');\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport LocaleFr from '@angular/common/locales/fr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport {ContextMenuModule} from 'primeng/contextmenu';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ToolbarModule} from 'primeng/toolbar';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2ImgMaxModule } from 'ng2-img-max';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport {NgxImageCompressService} from 'ngx-image-compress';\r\nimport { AuthInterceptor } from './util/AuthInterceptorService';\r\nimport { FooterComponent } from './views/layout/footer/footer.component';\r\nimport { HeaderComponent } from './views/layout/header/header.component';\r\nimport { MaincontentComponent } from './views/layout/maincontent/maincontent.component';\r\nimport { MenuComponent } from './views/layout/menu/menu.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { authentificationUsers } from './views/general-page-router/authentification.users';\r\nimport { DashboardOverviewComponent } from './views/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { FactureComponent } from './views/facture/facture.component';\r\nimport { FactureConsultationComponent } from './views/facture-consultation/facture-consultation.component';\r\nimport { ContribuableComponent } from './views/contribuable/contribuable.component';\r\nimport { ParamPaysComponent } from './views/param-pays/param-pays.component';\r\nimport { GroupTaxationComponent } from './views/group-taxation/group-taxation.component';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {FieldsetModule} from 'primeng/fieldset';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport { UserVerificationComponent } from './views/user-verification/user-verification.component';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { ChangementPasswordComponent } from './views/changement-password/changement-password.component';\r\nimport { BlockUIModule } from 'primeng/blockui';\r\nimport { ParamProduitComponent } from './views/param-produit/param-produit.component';\r\nimport { PasswordOublieComponent } from './views/password-oublie/password-oublie.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { SettingsComponent } from './views/settings/settings.component';\r\nimport { RecaptchaModule } from 'ng-recaptcha';\r\nimport { AvatarModule } from 'ngx-avatar';\r\nimport { ClientComponent } from './views/client/client.component';\r\nimport { StatisticsComponent } from './views/statistics/statistics.component';\r\nconst avatarColors = [\"2c3e50\",\"95a5a6\",\"#f39c12\",\"#1abc9c\"];\r\nregisterLocaleData(LocaleFr, 'fr');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MaincontentComponent,\r\n    MenuComponent,\r\n    LoginComponent,\r\n    authentificationUsers,\r\n    DashboardOverviewComponent,\r\n    RegisterComponent,\r\n    FactureComponent,\r\n    FactureConsultationComponent,\r\n    ContribuableComponent,\r\n    ParamPaysComponent,\r\n    GroupTaxationComponent,\r\n    UserVerificationComponent ,\r\n    ParamProduitComponent  ,\r\n    UserVerificationComponent ,\r\n    ChangementPasswordComponent,\r\n    PasswordOublieComponent,\r\n    SettingsComponent,\r\n    ClientComponent,\r\n    StatisticsComponent  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    TableModule,\r\n    CalendarModule,\r\n\t\tSliderModule,\r\n\t\tDialogModule,\r\n\t\tMultiSelectModule,\r\n\t\tContextMenuModule,\r\n\t\tDropdownModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n\t\tToastModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    FormsModule,\r\n    FileUploadModule,\r\n    ConfirmDialogModule,\r\n    Ng2ImgMaxModule,\r\n    NgxWebstorageModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      progressBar: true\r\n    }),\r\n    ReactiveFormsModule,\r\n    TooltipModule,\r\n    InputNumberModule,\r\n    InputMaskModule,\r\n    InputSwitchModule,\r\n    ChartsModule,\r\n    ChartModule,\r\n    ScrollPanelModule,\r\n    PanelModule,\r\n    AccordionModule,\r\n    CheckboxModule,\r\n    FieldsetModule,\r\n    PasswordModule,\r\n    ProgressSpinnerModule,\r\n    BlockUIModule,\r\n    NgxSpinnerModule,\r\n    ToggleButtonModule,\r\n    MenuModule,\r\n    RecaptchaModule,\r\n    AvatarModule.forRoot({\r\n      colors : avatarColors\r\n    }),\r\n    AutoCompleteModule,\r\n    TabViewModule\r\n    \r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [ \r\n    MessageService,\r\n    NgxImageCompressService,\r\n    ConfirmationService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: LOCALE_ID, useValue: \"fr-FR\" }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function httpTranslateLoader(http: HttpClient){\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n","import { Groupetaxation } from './groupetaxation';\nimport { ParamProduit } from './paramProduit';\n\nexport class Detailsfacture {\n       constructor(){\n\n         this.groupeTaxation=new Groupetaxation();\n             this.paramProduit=new ParamProduit();\n       }\n   \n   orderProduit?:string ;\n   libProduit ?:string ;\n   refProduit?:string ;\n   quantite?:string ;\n   prixUnit ?:string ;\n   taxSpec ?:string ;\n   groupeTaxation?:Groupetaxation;\n   groupeTaxationLib?:string;\n   paramProduit?:ParamProduit;\n   paramProduitLib?:string;\n   montantHT?:number;\n   montantTTC?:number;\n   id?:Number\n    \n}\n","import { Parampays } from './parampays';\n\nexport class Groupetaxation {\n\n\tid ?:Number;\n    codeGrpTax ?:string;\n\tlibGrp ?:string ;\t\n\ttaxTva ?:string;\n\tparamPays?:Parampays;\n\tidgt?:string;\n}\n","import { Contribuable } from './contribuable';\r\nimport { Groupetaxation } from './groupetaxation';\r\n\r\nexport class ParamProduit {\r\n    id?:Number;\r\n    codeProduit?:string;\r\n    libProduit?:string;\r\n    prixUnitaire?:string\r\n    contribuable?:Contribuable;\r\n    groupeTaxation?:Groupetaxation\r\n}","export class Pointvente {\n\n\t email?:string ;\n     codeAgent?:string ;\n\t nomAgent?:string ;\t\n\t libellePoint?:string ;\n\t actif?:boolean ;\n\t id_list?:string;\n\t motPasse?:string;\n\t\n}\n","export class SearchFacture {\r\n    numFact ?:string;\r\n\ttypFact ?:string ;\t\r\n\tetat ?:any;\r\n\tminDate?:string;\r\n\tmaxDate?:string;\r\n}\r\n","export class subTotauxFacture{\r\n    \r\n    codeGrp?:string ;\t\r\n\ttotalHt ?:string;\t\r\n\ttotalTax ?:string;\r\n\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Pointvente } from '../models/pointvente';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class authentificationService {\r\n     \r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getPointVentes= (matricule_fiscale:string): Observable<Pointvente[]> => {\r\n\r\n        return this.http.get<Pointvente[]>(API_URL + 'PointVentes/getPointVente/'+matricule_fiscale);\r\n    }\r\n    \r\n\r\n    authentification(username:string,password:string)   {\r\n        console.log(username)\r\n        console.log(password)\r\n        return this.http.post<any>(API_URL + 'Contribuable/login', {username,password},{}).pipe(\r\n           map(userData =>{\r\n               console.log(userData)\r\n                 sessionStorage.setItem(\"username\",username);\r\n                 let tokenStr=\"Bearer \"+userData.jwt.jwttoken;\r\n                 sessionStorage.setItem(\"token\",tokenStr);\r\n                 return userData;\r\n                 \r\n           })\r\n        );\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n\r\n        let user =sessionStorage.getItem(\"username\");\r\n\r\n        return !(user===null)\r\n    }\r\n    \r\n    sendPwdChangeCode= (pointVente:Pointvente): Observable<any> => {\r\n\r\n        return this.http.post<Pointvente>(API_URL + 'Contribuable/sendPwdChangeCode/',pointVente);\r\n    }\r\n\r\n    updatePassword= (code:string,newPwd:string,codePoint:string): Observable<any> => {\r\n\r\n        return this.http.post<any>(API_URL + 'Contribuable/updatePassword',{code,newPwd,codePoint});\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Client } from '../models/client';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class clientService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getClient = (matFC:string): Observable<Client> => {\r\n        return this.http.get<Client>(API_URL + 'Client/getClient/'+matFC);\r\n    }\r\n\r\n    getMyClients = (idc:Number): Observable<Client[]> => {\r\n     \r\n        return this.http.get<Client[]>(API_URL + 'Client/getAllClientsByCont/'+idc);\r\n    }\r\n\r\n    postClient = (matFC: Client): Observable<any> => {\r\n        return this.http.post<Client>(API_URL + 'Client/addClient', matFC);\r\n    }\r\n    \r\n    updateClient =  (id:Number, client: Client): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'Client/updateClient/' + id, client);\r\n    }\r\n\r\n    deleteClient = (id:Number): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'Client/deleteClient/' + id);\r\n    }\r\n    \r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Contribuable } from '../models/contribuable';\r\nimport { Pointvente } from '../models/pointvente';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class contribuableService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    postContribuable = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/addContribuable', contribuable);\r\n    }\r\n    validateContribuable = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/validateContribuable', contribuable);\r\n    }\r\n    ChangeState = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.put<Contribuable>(API_URL + 'Contribuable/changeState', contribuable);\r\n    }\r\n    userVerification = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/validateContribuable' ,contribuable)\r\n    }\r\n    getAll = (): Observable<Contribuable[]> => {\r\n        return this.http.get<Contribuable[]>(API_URL + 'Contribuable/getall');\r\n    }\r\n    getAllContribuables = (matF:string): Observable<Contribuable> => {\r\n        return this.http.get<Contribuable>(API_URL + 'Contribuable/getContribuableList/'+matF);\r\n    }\r\n    updateContribuable = (id:Number, contribuable: Contribuable): Observable<any> => {\r\n        return this.http.put<any>(API_URL + 'Contribuable/updateContribuable/'+id, contribuable);\r\n    }\r\n    updatePointvente = (id:Number, pv: Pointvente): Observable<any> => {\r\n        return this.http.put<any>(API_URL + 'PointVentes/updatePointvente/'+id, pv);\r\n    }\r\n}","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Contribuable } from '../models/contribuable';\r\nimport { Facture } from '../models/facture';\r\nimport { Pointvente } from '../models/pointvente';\r\nimport { SearchFacture } from '../models/searchFacture';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class factureService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getFactures = (codeAgent:String): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<Facture[]>(API_URL + 'Facture/getFactureByCodeAgent/'+codeAgent);\r\n    }\r\n    getAllFactures = (codeAgent:String): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<Facture[]>(API_URL + 'Facture/getAllFactureByCodeAgent/'+codeAgent);\r\n    }\r\n    getFactureByNumFact = (numFact:String): Observable<Facture> => {\r\n     \r\n        return this.http.get<Facture>(API_URL + 'Facture/getFactureByNumFact/'+numFact);\r\n    }\r\n    addFacture = (facture: Facture): Observable<any> => {\r\n        return this.http.post<Facture>(API_URL + 'Facture/addFacture', facture);\r\n    }\r\n    validateFacture = (numFact: string): Observable<any> => {\r\n        return this.http.post<any>(API_URL + 'Facture/validateFacture/'+numFact,null);\r\n    }\r\n    deleteFacture = (id: Number): Observable<any> => {\r\n        return this.http.delete<any>(API_URL + 'Facture/deleteFacture/'+id);\r\n    }\r\n    rechercheFactures = (searchFact:SearchFacture): Observable<Facture[]> => {\r\n     \r\n        return this.http.post<Facture[]>(API_URL + 'Facture/rechercheFacture', searchFact);\r\n    }\r\n    getFactByMonth = (): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<any>(API_URL + 'Facture/countbymonth');\r\n    }\r\n/* \r\n    rechercheFactures = (numFact:string, typFact:string): Observable<Facture[]> => {\r\n     let params = new HttpParams()\r\n        params = params.append('numFact', numFact)\r\n        params = params.append('typFact',typFact)\r\n\r\n        return this.http.get<Facture[]>(API_URL + 'Facture/rechercheFacture',{params});\r\n    }\r\n */\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Groupetaxation } from '../models/groupetaxation';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class grpTaxationService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getGrpTaxations = (): Observable<Groupetaxation[]> => {\r\n\r\n        return this.http.get<Groupetaxation[]>(API_URL + 'GrpTax/getGrpTaxation');\r\n    }\r\n\r\n    postGrpTaxation = (Groupetaxation: Groupetaxation): Observable<any> => {\r\n        return this.http.post<Groupetaxation>(API_URL + 'GrpTax/addGrpTaxation', Groupetaxation);\r\n    }\r\n\r\n    updateGrpTax = (id:Number, Groupetaxation: Groupetaxation): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'GrpTax/updateGrpTaxation/' + id, Groupetaxation);\r\n    }\r\n\r\n    deletetgrpTax = (id:Number): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'GrpTax/deleteGrp/' + id);\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Parampays } from '../models/parampays';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class paramPaysService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getParamPays = (): Observable<Parampays[]> => {\r\n\r\n        return this.http.get<Parampays[]>(API_URL + 'ParamPay/getParamPays');\r\n    }\r\n    \r\n    postParamPays = (parampays: Parampays): Observable<any> => {\r\n        return this.http.post<Parampays>(API_URL + 'ParamPay/addParamPays', parampays);\r\n    }\r\n\r\n    deletetParam = (code:string): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'ParamPay/deletePrmPays/' + code);\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Groupetaxation } from '../models/groupetaxation';\r\nimport { ParamProduit } from '../models/paramProduit';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class paramProduitService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getparamProduits = (): Observable<ParamProduit[]> => {\r\n\r\n        return this.http.get<ParamProduit[]>(API_URL + 'ParamProduits/getParamProduit');\r\n    }\r\n    postParamProduit = (paramproduit: ParamProduit): Observable<any> => {\r\n        return this.http.post<ParamProduit>(API_URL + 'ParamProduits/addParamProduit', paramproduit);\r\n    }\r\n\r\n    updateParam = (id:Number,paramproduit: ParamProduit): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'ParamProduits/updateParamProduit/' + id,paramproduit);\r\n    }\r\n\r\n    deletetParam = (code:string): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'ParamProduits/deleteParamProduit/' + code);\r\n    }\r\n\r\n    getMyProduits = (id:Number): Observable<ParamProduit[]> => {\r\n\r\n        return this.http.get<ParamProduit[]>(API_URL + 'ParamProduits/getmyproduits/'+id);\r\n    }\r\n\r\n   \r\n}","import { Injectable } from '@angular/core';\r\n import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { authentificationService } from '../services/authentification.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGaurdService implements CanActivate {\r\n\r\n    constructor(private router : Router,private aithService:authentificationService) {\r\n    }\r\n    canActivate (route:ActivatedRouteSnapshot,state:RouterStateSnapshot) {\r\n\r\n       if(this.aithService.isUserLoggedIn())\r\n        return true;\r\n        this.router.navigate(['user/login'])\r\n        return false;\r\n    }\r\n    \r\n\r\n   \r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\nconst CONTENT_TYPE_KEY = 'Content-Type';\r\nconst ACCEPT_KEY = 'Accept';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  \r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n  //  const token = this.token.getToken();\r\n    if (sessionStorage.getItem('token') != null && sessionStorage.getItem('username')!=null) {\r\n     req = req.clone({\r\n        setHeaders: {\r\n         // 'Content-Type' : 'application/json; charset=utf-8',\r\n          'Accept'       : 'application/json',\r\n          'Authorization':  sessionStorage.getItem('token')\r\n          //'Access-Control-Allow-Origin': '*'\r\n        },\r\n      });\r\n      /*\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n      authReq = req.clone({ headers: req.headers.set(CONTENT_TYPE_KEY, 'application/json') });\r\n      authReq = req.clone({ headers: req.headers.set(ACCEPT_KEY, 'application/json') });\r\n      */\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { authentificationService } from 'src/app/services/authentification.service';\nimport { MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-changement-password',\n  templateUrl: './changement-password.component.html',\n  styleUrls: ['./changement-password.component.scss']\n})\nexport class ChangementPasswordComponent implements OnInit {\n  loginForm: FormGroup;\n  contribuable :Contribuable;\n  showBack: boolean = true;\n  attribute: any;\n  pointVenteList :Array<Pointvente>=[]\n  submitted:boolean=false;\n  selectedPointVente :Pointvente\n  constructor(private formBuilder: FormBuilder,\n    private storage: LocalStorageService,\n    private router: Router,\n    private messageService: MessageService,\n    private serviceToken:TokenStorageService,\n    private authentificationService:authentificationService,\n    private toastreService: ToastrService,\n    private local:LocalStorageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.selectedPointVente = history.state;\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      code: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  \n\n  updatepwd(){\n    this.submitted=true\n    if (this.loginForm.invalid)\n    return ;\n    let pv:string;\n    pv='fhfh'\n    this.authentificationService.\n             updatePassword(this.loginForm.controls['code'].value,this.loginForm.controls['password'].value ,this.selectedPointVente.codeAgent).\n             subscribe((data)=>{\n              this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Mot de passe réinitialiser avec succes', life: 3000 });\n              this.router.navigate(['/user/login']).then(()=>{\n                this.toastreService.success(\"Mot de passe réinitialiser avec succes!\");\n              });\n             },error=>{\n              this.toastreService.error(error.error.message);\n\n             })\n      \n\n     \n\n  }\n  cancelUpdates(){\n\n    this.router.navigate(['/user/login']); \n  }\n\n  onPasswordChanges(){\n     if (this.loginForm.controls['password'].value == this.loginForm.controls['confirmPassword'].value){\n       this.loginForm.controls['confirmPassword'].setErrors(null)\n     }else{\n      this.loginForm.controls['confirmPassword'].setErrors({mismatch:true})\n     }\n\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n  \n}\n","<div class=\"wrapped-div\">\n    <div class=\"tab-header\">\n      <h2>Réinitialiser votre mot de passe </h2>\n    </div>\n  \n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">  \n      <div class=\"login-logo\">\n        <i class=\"fa fa-lock fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n      </div>   \n      <form [formGroup]=\"loginForm\" class=\"mb-6\" autocomplete=\"off\" (ngSubmit)=\"updatepwd()\">\n      \n        <div class=\"form-group \">\n          <input type=\"text\" class=\"form-control\"  required     placeholder=\"Code de récuperation\" formControlName=\"code\">\n          <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['code'].errors.required\">Le code de récuperation est\n            obligatoire.\n          </span>\n        </div>\n        <div class=\"form-group \">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Nouveau Mot de passe\"\n             formControlName=\"password\" (change)=\"onPasswordChanges()\">\n             <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['password'].errors.required\">Le nouveau mot de passe est\n              obligatoire.</span>\n          </div>\n          <div class=\"form-group \">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Confirmation Mot de passe\" \n            formControlName=\"confirmPassword\" (change)=\"onPasswordChanges()\">  \n            <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['confirmPassword'].errors.required\">La confirmations de mot de passe est\n              obligatoire.</span>        \n            <span class=\"p-error\" *ngIf=\"this.loginForm.controls['confirmPassword'].hasError('mismatch')\">les mots de passe ne sont pas\n              conforme.</span>\n          </div>\n          \n        <div   style=\"text-align: center; margin-bottom: 20px;\"> \n          <button (click)=\"cancelUpdates()\" Style =\"margin-left:20px ;\" class=\"btn\"  >Annuler</button>\n          <button   class=\"btn\" style=\"margin-left: 100px;\"  type=\"submit\" >Valider</button>          \n            </div>\n          \n            \n      </form>\n      </div>\n      </div>\n      \n  \n  </div>\n  <p-toast></p-toast>","import { Component, OnInit } from '@angular/core';\nimport { clientService } from 'src/app/services/client.service';\nimport { Client } from 'src/app/models/client';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { error } from 'protractor';\n\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n\n  client:Client;\n  clientList : Array<Client>=[]\n  matriculeFiscaleClient:string;\n  id:Number;\n  cont:any;\n  \n  grpTaxDialog:boolean\n  updateDialog :boolean\n  submitted :boolean = false;\n\n  clientDialog :boolean;\n\n\n\n  constructor(private clientService:clientService,private storage:LocalStorageService,\n    private spinner: NgxSpinnerService,private toastreService: ToastrService,private messageService: MessageService,private confirmationService: ConfirmationService) { }\n\n  ngOnInit(): void {\n    this.cont=this.storage.retrieve((\"userConnect\"));\n    console.log(this.cont)\n    this.refresh();\n  }\n\n  getClient(){    \n    \n    this.clientService.getClient(this.matriculeFiscaleClient).subscribe((data:Client)=>{  \n      if(data != null){\n      this.clientList=[]\n    this.clientList.push(data)\n  }\n },error =>{ this.refresh() })\n  \n}\n\n\nsaveClient(){\n  this.submitted = true\n  if (!this.client.matriculeFiscaleClient||\n    !this.client.nom ||\n   !this.client.email ||\n   !this.client.addresse ||\n   !this.client.numTel\n  \n ) {\n   return;\n }\n\n  this.clientService.postClient(this.client).subscribe(()=>this.refresh());\n  this.toastreService.success(\"Client est ajouter!\");\n\n  this.clientDialog = false;\n  this.client = {};\n\n}\nrefresh(){\n  this.spinner.show();\n    this.clientService.getMyClients(this.cont.contribuable.id).subscribe((data:Client[])=>{     \n      this.clientList=data\n      this.spinner.hide();\n   });\n}\nopenAddClient(){\n\n  this.clientDialog=true\n  this.client={}\n}\nopenUpdateClient(cli:Client){\n\n  this.updateDialog=true\n  this.client=cli\n}\nhideAddDialog() {\n  this.clientDialog = false;\n  this.submitted = false;\n}\nhideUpdateDialog() {\n  this.updateDialog = false;\n  this.submitted = false;\n}\n\nupdateClient(cl:Client){\n \n  this.client=cl\n  this.clientService.updateClient(cl.id, cl).subscribe(()=>this.refresh());\n  this.messageService.add({severity:'success', summary: 'Succés', detail: 'Client changer', life: 3000});    \n  this.updateDialog=false\n\n}\n\ndeleteClient(cl:Client){\n  this.confirmationService.confirm({\n    message: 'Etes-vous sûr de vouloir supprimer ' + cl.nom + '?',\n    acceptLabel:'Oui',\n    rejectLabel:'Non',\n    header: 'Confirmation',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n        this.clientService.deleteClient(cl.id).subscribe(()=>this.refresh());\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Client supprimer', life: 3000});\n       \n      }\n});\n}\n\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card m-9\">\n\n    <div class=\"card-body\">\n\n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h5 class=\"p-m-0\">Liste des clients</h5>\n\n            </ng-template>\n\n        </p-toolbar>\n\n        <p-table #dt [value]=\"clientList\" [rows]=\"5\" [paginator]=\"true\" styleClass=\"p-datatable-sm\"\n            responsiveLayout=\"scroll\" [rowHover]=\"true\" dataKey=\"id\" [resizableColumns]=\"true\"\n            currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n            styleClass=\"p-datatable-sm\" [showCurrentPageReport]=\"true\">\n            <ng-template pTemplate=\"caption\">\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\n                    <span class=\"p-input-icon-left\">\n\n                       \n                    </span>\n                    <input pInputText type=\"text\" [(ngModel)]=\"matriculeFiscaleClient\" placeholder=\"MF...\" />\n                        <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" style=\"float: right;\" \n                        (click)=\"openAddClient()\"></button>   \n                    <button pButton pRipple label=\"Rechercher\" style=\"float: right;\" icon=\"pi pi-search\"\n                        class=\"p-button-success p-mr-2\" (click)=\"getClient()\"></button>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th>Matricule fiscale</th>\n                    <th>nom </th>\n                    <th>Email </th>\n                    <th>N°telephone</th>\n                    <th>Adresse</th>\n                    <th>Action</th>\n\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-cli>\n                <tr>\n\n                    <td>{{cli.matriculeFiscaleClient}}</td>\n                    <td>{{cli.nom}}</td>\n                    <td>{{cli.email}}</td>\n                    <td>{{cli.numTel}}</td>\n                    <td>{{cli.addresse}}</td>\n                    <td>\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"openUpdateClient(cli)\"  ></button>\n                        <button pButton pRipple icon=\"pi pi-trash\" \n                           (click)=\"deleteClient(cli)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n                    </td>\n\n\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-cli>\n                <tr>\n                    <td colspan=\"5\" style=\"text-align: center;\">\n                    \n                         <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                         <br>\n                         Aucun enregistrement trouvé!\n                        \n                    </td>\n                </tr>\n            </ng-template>\n\n        </p-table>\n    </div>\n\n\n\n</div>\n<p-dialog [(visible)]=\"clientDialog\" [style]=\"{width: '450px'}\" header=\"Client\" [modal]=\"true\"\n    styleClass=\"p-fluid\">\n    <ng-template pTemplate=\"content\">\n        <hr>\n        \n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.matriculeFiscaleClient\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">matricule Fiscale Client </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.matriculeFiscaleClient\">matricule Client est obligatoire.</small>\n               \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.nom\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Nom Client </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Nom Client est obligatoire.</small>\n                \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.addresse\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Adresse </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n                \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" pInputText id=\"name\" [(ngModel)]=\"client.email\" style=\"width: 100%;\" required\n                        autofocus   size=\"30\"/>\n                    <label for=\"name\">E-mail </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.email\">E-mail est obligatoire.</small>\n                \n            </div>\n\n\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.numTel\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Télephone </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Telephone est obligatoire.</small>\n                \n            </div>\n\n        \n\n\n\n        <hr class=\"solid\">\n        <div class=\"row\" style=\"float: right;\">\n            <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                (click)=\"hideAddDialog()\"></button>&nbsp;\n            <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                (click)=\"saveClient()\"></button>\n        </div>\n\n    </ng-template>\n\n</p-dialog>\n<p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"mise a jour de groupe de taxations\" [modal]=\"true\"\nstyleClass=\"p-fluid\">\n<ng-template pTemplate=\"content\">\n    <hr>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"matriculeFiscaleClient\" [(ngModel)]=\"client.matriculeFiscaleClient\" required autofocus/>\n            <label for=\"matriculeFiscaleClient\">Matricule FiscaleClient Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.matriculeFiscaleClient\">Le matricule fiscale client est obligatoire.</small>\n    </div>\n   <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"nom\" [(ngModel)]=\"client.nom\" required  />\n            <label for=\"libgt\">Nom Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Le Nom client est obligatoire.</small>\n    </div>\n    <br>\n    <div class=\"form-group \">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.addresse\" style=\"width: 100%;\" required\n                autofocus />\n            <label for=\"name\">Adresse </label>\n        </span>\n            <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n        \n    </div>\n    <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"email\" pInputText id=\"email\" [(ngModel)]=\"client.email\" required  />\n            <label for=\"tax\">Email Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.email\">Le email est obligatoire.</small>\n    </div>\n    <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"numTel\" [(ngModel)]=\"client.numTel\" required  />\n            <label for=\"tax\">Numero </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Le numrero est obligatoire.</small>\n    </div>\n    <hr>\n    <div class=\"row\" style=\"float: right;\">\n        <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideUpdateDialog()\"\n        ></button>&nbsp;\n     <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateClient(client)\"></button>\n \n    </div>\n</ng-template>\n\n</p-dialog>\n\n\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { MessageService } from 'primeng/api';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-contribuable',\n  templateUrl: './contribuable.component.html',\n  styleUrls: ['./contribuable.component.scss']\n})\nexport class ContribuableComponent implements OnInit {\n\n     contribuableList : Array<Contribuable>=[]\n     contribuable :  Contribuable\n     matriculeFiscale : string;\n     activDialog :boolean;\n\n\n  constructor(private contribuableService:contribuableService,\n    private messageService: MessageService) { }\n\n  ngOnInit(): void {\n     this.refresh()\n  }\n\n  refresh(){\n    this.contribuableService.getAll().subscribe((data:Contribuable[])=>{\n      this.contribuableList=data;\n    })\n  }\n\n\n  activerContribuables(contr:Contribuable){\n    this.contribuable=contr\n  }\n\n  getContribuables(){    \n    this.contribuableService.getAllContribuables(this.matriculeFiscale).subscribe((data:Contribuable)=>{\n      if(data != null){  \n      this.contribuableList=[]\n    this.contribuableList.push(data)\n      }\n },error=>{this.refresh()})\n  }\n\n  hideDialog(){\n    this.activDialog=false\n  }\n  \n  activate(cont:Contribuable,event:any){\n      this.contribuableService.ChangeState(cont).subscribe((data)=>{\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Contribuable activer', life: 3000});\n      }); \n  }\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n            <div class=\"card m-9\">\n               \n                <div class=\"card-body\">\n                    <p-toolbar styleClass=\"p-mb-4\">\n                        <ng-template pTemplate=\"left\">\n                           <h5 class=\"p-m-0\">Liste des contribuables</h5>   \n                        </ng-template> \n                    </p-toolbar>\n                <p-table #dt [value]=\"contribuableList\" [rows]=\"5\" [paginator]=\"true\"\n                styleClass=\"p-datatable-sm\" responsiveLayout=\"scroll\"\n                 [rowHover]=\"true\" dataKey=\"id\" [resizableColumns]=\"true\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    styleClass=\"p-datatable-sm\"     [showCurrentPageReport]=\"true\" >\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"p-d-flex p-ai-center p-jc-between\">\n                            <span class=\"p-input-icon-left\">\n                              \n                                <input pInputText type=\"text\"  [(ngModel)]=\"matriculeFiscale\"\n                                    placeholder=\"MF...\" />\n                       \n                            </span>\n                            <button pButton pRipple label=\"Rechercher\" style=\"float: right;\"\n                            icon=\"pi pi-search\" class=\"p-button-success p-mr-2\" (click)=\"getContribuables()\"></button>\n                    \n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 8rem;\">MF</th> \n                            <th style=\"width: 8rem;\">Raison social </th> \n                            <th >Email </th> \n                            <th >N°telephone</th> \n                            <th style=\"width: 8rem;\">Action</th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\"  let-cont>\n                        <tr >\n   \n                            <td>{{cont.matriculeFiscale}}</td>\n                            <td>{{cont.raisonSocial}}</td>\n                            <td>{{cont.email}}</td>\n                            <td>{{cont.numtel}}</td>\n                            \n                            <td>\n                                \n                            <p-toggleButton [(ngModel)]=\"cont.actif\" (onChange)=\"activate(cont,$event)\" onLabel=\"activé\" offLabel=\"blocké\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" ></p-toggleButton>\n                                                                 \n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-cont>\n                        <tr>\n                            <td colspan=\"5\" style=\"text-align: center;\">\n                            \n                                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                                 <br>\n                                 Aucun enregistrement trouvé!\n                                \n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        \n       \n       \n</div>\n \n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-overview',\r\n  templateUrl: './dashboard-overview.component.html',\r\n  styleUrls: ['./dashboard-overview.component.scss']\r\n})\r\nexport class DashboardOverviewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Facture } from 'src/app/models/facture';\nimport { factureService } from 'src/app/services/facture.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { StaticList } from 'src/app/models/staticList';\nimport { FactureStateList } from 'src/app/models/factureStateList';\nimport { SearchFacture } from 'src/app/models/searchFacture';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-facture-consultation',\n  templateUrl: './facture-consultation.component.html',\n  styleUrls: ['./facture-consultation.component.scss']\n})\nexport class FactureConsultationComponent implements OnInit {\n  pv:any;\n  factstate:any;\n  factureList:Array<Facture>=[]\n  fctDialog:boolean\n  facture:Facture\n  staticList: StaticList[]\n  selectedStaticList: StaticList\n  stateList: FactureStateList[]\n  selectedStateList: FactureStateList\n  maxDate: Date;\n  searchFact: SearchFacture;\n  numeroFacture:string\n  dateRange:string\n  constructor(private factureService:factureService, private storage:LocalStorageService, \n    private spinner: NgxSpinnerService, private confirmationService: ConfirmationService,\n    private messageService: MessageService) {\n    this.staticList = [\n        { id: '0', code: 'Tout' },\n        { id: '1', code: 'Vente' },\n        { id: '2', code: 'Avoir' }, \n        { id: '3', code: 'Acompte'}\n    ]\n \n    this.stateList = [\n      {id: '0', etat: 'Tout'},\n      {id: '1', etat: 'ENREGISTRER'},\n      {id: '2', etat: 'VALIDER'},\n      {id: '3', etat: 'EN_ATTENTE'},\n      {id: '4', etat: 'ENVOYER'}\n    ]\n     }\n  ngOnInit(): void {\n    this.spinner.show();\n    this.pv=this.storage.retrieve((\"userConnect\"));\n    this.factureService.getFactures(this.pv.codeAgent).subscribe((data:Facture[])=>{     \n       this.factureList=data\n       this.spinner.hide();\n      \n    },error =>{ setTimeout(() => {\n      this.spinner.hide();\n     },4000);})\n    this.searchFact={}\n    let today = new Date();\n    this.maxDate = new Date();\n    this.maxDate.setDate(today.getDate());\n\n    this.selectedStateList = {}\n    this.selectedStaticList = {}\n\n    this.dateRange=null\n  }\n \n  deleteFacture(fct:Facture){\n    this.confirmationService.confirm({\n      message: 'voulez vous supprimer ' + fct.numFact + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.factureService.deleteFacture(fct.id).subscribe(()=>this.ngOnInit());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Facture supprimer', life: 3000});\n        }\n  });\n  }\n  validerFacture(fct:Facture){\n    this.confirmationService.confirm({\n      message: 'voulez vous valider ' + fct.numFact + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.factureService.validateFacture(fct.numFact).subscribe(()=>this.ngOnInit());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Facture valider', life: 3000});\n          this.fctDialog = false;\n        }\n  });\n  }\n  consultFct(fct:Facture){\n     this.fctDialog=true\n     this.facture=fct\n     console.log(fct);\n  }\n\n  hideDialog() {\n    this.fctDialog = false;\n  }\n\n  factureSearch(){\n    this.searchFact = new SearchFacture()   \n    if(this.selectedStateList.id == '0' ){\n      this.selectedStateList.etat = null\n    }\n    if(this.selectedStaticList.id == '0' ){\n      this.selectedStaticList.code =null\n    }\n    this.searchFact.etat = this.selectedStateList.etat\n    this.searchFact.typFact = this.selectedStaticList.code\n    this.searchFact.numFact = this.numeroFacture\n    if(this.dateRange != null){\n    this.searchFact.minDate = this.dateRange[0]\n    this.searchFact.maxDate = this.dateRange[1]\n  }\n    this.factureService.rechercheFactures(this.searchFact).subscribe((data)=>{\n      console.log(data)\n      this.factureList = data\n    });     \n  }\n  \n  clearSearch(){\n    this.numeroFacture = \"\"\n    this.selectedStateList = {}\n    this.selectedStaticList = {}\n    this.dateRange = \"\"\n  }\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card m-9\">\n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Recherche facture</h5>   \n        </ng-template>\n    </p-toolbar>\n\n\n    <div class=\"row \">\n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <input  class=\"p-inputtext-lg\"  style=\"width: 100%;\" [(ngModel)]=\"numeroFacture\"\n                required  id=\"nf\"  type=\"text\" pInputText >  \n                <label for=\"nf\">N° Facture </label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-dropdown id=\"tf\" [options]=\"staticList\"  class=\"p-inputtext-sm\"  [(ngModel)]=\"selectedStaticList\" optionLabel=\"code\" inputId=\"tf\" \n                 [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                 <label for=\"tf\">Type facture </label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-dropdown id=\"fs\" [options]=\"stateList\"  class=\"p-inputtext-sm\"  [(ngModel)]=\"selectedStateList\" optionLabel=\"etat\" inputId=\"state\" \n                 [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                 <label for=\"fs\">Etat facture</label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-calendar  inputId=\"calendar\" [(ngModel)]=\"dateRange\" selectionMode=\"range\"  dateFormat=\"dd/mm/yy\" showIcon=\"true\" [maxDate]=\"maxDate\"\n                 [style]=\"{'width':'100%', 'height':'40px'}\"> </p-calendar> \n                <label for=\"calendar\">Intervalle de date facture </label>\n            </span> \n        </div>                               \n        </div>\n    \n\n    <div style=\"float: right;\">\n    <button pButton pRipple label=\"Intialiser\" icon=\"pi pi-times\"\n        class=\"p-button-secondary p-button-sm p-mr-2\" (click)=\"clearSearch()\"></button>\n    <button pButton pRipple label=\"Rechercher\" icon=\"pi pi-search\"\n        class=\"p-button-success p-button-sm p-mr-2\" (click)=\"factureSearch()\"></button>\n    </div>\n</div>    \n</div>\n\n<div class=\"card m-9\">\n   \n            \n\n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Historique de mes factures</h5>   \n        </ng-template>\n        <ng-template pTemplate=\"right\">\n            <input pInputText type=\"text\" style=\"float: right;\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Filtrer...\"/>\n         &nbsp;\n        </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"factureList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n    styleClass=\"p-datatable-sm\" currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['numFact','typFact']\">\n    <ng-template pTemplate=\"caption\">\n        <div class=\"p-d-flex p-ai-center p-jc-between\">\n            \n\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"numFact\">N° Facture  <p-sortIcon field=\"numFact\"></p-sortIcon>\n            </th> \n            <th pSortableColumn=\"typFact\">Type Facture <p-sortIcon field=\"typFact\"></p-sortIcon>\n            </th> \n            <th pSortableColumn=\"dateFact\">Date Facture <p-sortIcon field=\"dateFact\"></p-sortIcon>\n            </th>    \n            <th pSortableColumn=\"state\">Etat<p-sortIcon field=\"state\"></p-sortIcon>\n            </th>         \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-fct>\n        <tr>\n            <td>{{fct.numFact}}</td>\n            <td>{{fct.typFact}}</td>\n            <td>{{fct.datFactInit | date :'short'}}</td>\n            <td><span  [class]=\"{'enregister':fct.state === 'ENREGISTRER', 'valider':fct.state === 'VALIDER'}\" > &nbsp;&nbsp;{{fct.state}}&nbsp;&nbsp;</span>\n            </td>\n            <td>\n                <button pButton pRipple icon=\"pi pi-eye\" class=\"p-2 p-button-rounded p-button-info p-mr-2\"\n                        (click)=\"consultFct(fct)\" ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" class=\"p-2 p-button-rounded p-button-danger p-mr-2\"\n                        (click)=\"deleteFacture(fct)\" ></button>\n                <button *ngIf=\"fct.state ==='ENREGISTRER'\" pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"consultFct(fct)\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-fct>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    </div>\n   \n</div>\n    \n    \n    <p-dialog [(visible)]=\"fctDialog\" [style]=\"{width: '650px'}\" header=\"Détails de facture\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <div class=\"row\">    \n                    <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">N°Facture :</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.numFact\" required autofocus />\n                </div>\n               \n                <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">Type Facture:</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.typFact\" required autofocus />\n                </div>\n                \n                <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">Date Facture :</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.dateFact\" required autofocus />\n                </div>\n               </div>\n <p-accordion [style]=\"{'height':'100%','width':'100%','margin-top':'20px'}\"> \n    <p-accordionTab header=\"Détails Facture\" [selected]=\"true\" >\n    <p-table #dt [value]=\"facture.detailsFacture\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n  \n    [showCurrentPageReport]=\"true\" >\n   \n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Order</th> \n            <th>Produit </th> \n            <th >Groupe de taxation </th> \n            <th >Quantite </th> \n            <th >Prix unitaires   </th> \n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-det>\n        <tr>\n            <td>{{det.orderProduit}}</td>\n            <td>{{det.libProduit}}</td>\n            <td>{{det.groupeTaxation.libGrp}}</td>\n            <td>{{det.quantite}}</td>\n            <td>{{det.prixUnit}}</td>\n        </tr>\n    </ng-template>\n    \n    </p-table> \n     </p-accordionTab>\n    </p-accordion>          \n               \n            </ng-template>\n        \n            <ng-template pTemplate=\"footer\">\n                <button pButton pRipple label=\"Annuler\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"\n                   ></button>\n                   <button *ngIf=\"facture.state ==='ENREGISTRER'\" pButton pRipple label=\"valider\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"validerFacture(facture)\"\n                   ></button>\n               \n            </ng-template>\n        </p-dialog>\n    \n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    <!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Facture } from 'src/app/models/facture';\nimport { factureService } from 'src/app/services/facture.service';\nimport { StaticList } from 'src/app/models/staticList';\nimport * as moment from 'moment';\nimport { Detailsfacture } from 'src/app/models/detailsfacture';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { Router } from '@angular/router';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ParamProduit } from 'src/app/models/paramProduit';\nimport { subTotauxFacture } from 'src/app/models/subTotauxFacture';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { SubTotauxResponse } from 'src/app/models/subTotauxResponse';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Parampays } from 'src/app/models/parampays';\nimport { Client } from 'src/app/models/client';\nimport { clientService } from 'src/app/services/client.service';\nimport { ParamProduitComponent } from '../param-produit/param-produit.component';\n\n@Component({\n  selector: 'app-facture',\n  templateUrl: './facture.component.html',\n  styleUrls: ['./facture.component.scss']\n})\nexport class FactureComponent implements OnInit {\n  facture: Facture\n  staticList: StaticList[]\n  selectedStaticList: StaticList\n  listDetailFacture: Detailsfacture[];\n  detailsFacture: Detailsfacture;\n  detailsFactureList: Array<Detailsfacture> = [];\n  paramPaysList: Array<Parampays> = []\n\n  groupetaxationItems: Groupetaxation[]\n  groupeTaxationSelected: Groupetaxation;\n  ParamProduitItems: ParamProduit[];\n  paramProduit: ParamProduit;\n  filteredParamProduit:ParamProduit[]\n  numfactureAvoir:String;\n  factureAvoir : Facture\n\n  display: boolean = false;\n  detailsDialog: boolean;\n  FactureAvoirDialog:boolean;\n  submitted: boolean;\n  submittedD: boolean;\n  toggle: boolean = true;\n  subtotauxDisabled: boolean = true;\n  validaDisabled: boolean = true;\n\n  clientDisabled: boolean = false;\n  montant: number = 0;\n  montantHT: number = 0;\n  montantTTC: number = 0;\n\n  client: Client;\n  devise: string;\n  contpays: string;\n  order: number = 1\n  subTotauxFactureList: Array<subTotauxFacture> = [];\n  subTotauxFacture: subTotauxFacture;\n  montantTOTALS: string\n  montantTaxSpec: string\n  currentcont:any\n  checkedclient: boolean = true;\n\n  factAvoirDate:string\n  loadSpinner: boolean = false;\n  maxDate: Date;\n  constructor(private factureService: factureService, private router: Router, private local: LocalStorageService, private messageService: MessageService,\n    private confirmationService: ConfirmationService, private grpTaxationService: grpTaxationService,\n    private contribuableService: contribuableService, private paramProduitService: paramProduitService,\n    private spinner: NgxSpinnerService, private paramPaysService: paramPaysService, private storage:LocalStorageService, \n    private clientService: clientService) {\n    this.staticList = [{ id: '1', code: 'Vente' },\n    { id: '2', code: 'Avoir' }, { id: '3', code: 'Acompte' }\n    ]\n  }\n\n  ngOnInit(): void {\n    this.facture = {}\n    this.facture.isSaved = false\n    this.selectedStaticList = this.staticList[0]\n    this.client = {}\n    this.currentcont = this.local.retrieve(\"userConnect\").contribuable\n    this.devise = this.local.retrieve(\"userConnect\").codeDevise\n    this.contpays= this.local.retrieve(\"userConnect\").contribuable.paramPays.id\n    let momentVariable = moment(new Date(), 'DD-MM-YYYY');\n    // this.facture.dateFact=  momentVariable.format('DD/MM/YYYY')\n    this.detailsFactureList = []\n    let today = new Date();\n    this.maxDate = new Date();\n    this.maxDate.setDate(today.getDate());\n\n    this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      this.paramPaysList = data\n    })\n  }\n\n  hideDialog() {\n    this.detailsDialog = false;\n    this.submittedD = false;\n  }\n\n\n  saveFacture() {\n    debugger;\n    this.submitted = true;\n    //let momentVariable = moment(this.facture.dateFact,'DD-MM-YYYY');\n    //this.facture.dateFact=  momentVariable.format('DD/MM/YYYY')\n    this.facture.datFactInit = this.factAvoirDate || this.facture.datFactInit\n    this.facture.typFact = this.selectedStaticList.code\n    this.facture.contribuable = this.local.retrieve(\"userConnect\").contribuable\n    this.facture.pointVente = this.local.retrieve(\"userConnect\")\n    this.client.contribuable=this.facture.contribuable\n    this.facture.client = this.client\n    this.facture.isValid = false\n    this.facture.factureAvoir = this.factureAvoir\n    this.spinner.show();\n    if (this.detailsFactureList.length != 0) {\n      this.factureService.addFacture(this.facture).subscribe((data) => {\n        \n        console.log(data)\n        this.subtotauxDisabled = !this.subtotauxDisabled\n        this.subTotauxFactureList = data.subTotauxFactureList\n        this.facture.montantTOTALS = data.montantTotal\n        this.facture.montantTaxSpec = data.montantTaxSpec\n        this.facture.isSaved = true\n        this.spinner.hide();\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture enregistrer avec succés', life: 1000 });\n\n      }, error=>{\n        this.spinner.hide();\n        this.messageService.add({ severity: 'error', summary: 'Erreur', detail: \"Erreur lors de l'enregistrement de la facture\", life: 1000 });\n      });\n    } else {\n      this.messageService.add({ severity: 'error', summary: 'Erreur', detail: 'La facture doit avoir au moins un article', life: 1000 });\n\n    }\n  }\n\n\n\n\n  addNewDetails() {\n    this.detailsFacture = new Detailsfacture();\n    this.subTotauxFacture = new subTotauxFacture();\n    this.groupeTaxationSelected = new Groupetaxation();\n    this.paramProduit = new ParamProduit();\n    this.groupeTaxationSelected = this.paramProduit.groupeTaxation\n    this.detailsDialog = true\n    this.detailsFacture.orderProduit = this.order.toString()\n    this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n    this.paramProduitService.getparamProduits().subscribe((data: ParamProduit[]) => {\n    this.ParamProduitItems = data.filter(pp=>pp.contribuable.id == this.currentcont.id)\n      console.log(this.ParamProduitItems)\n    })\n    \n  }\n  saveDetails() {\n  debugger\n    this.submittedD = true;\n    console.log(this.groupeTaxationSelected)\n    this.paramProduit.contribuable = this.local.retrieve(\"userConnect\").contribuable\n    this.groupeTaxationSelected = this.paramProduit.groupeTaxation\n    this.detailsFacture.groupeTaxation = this.groupeTaxationSelected\n    this.detailsFacture.groupeTaxationLib = this.groupeTaxationSelected.libGrp\n    this.detailsFacture.paramProduit = this.paramProduit\n    this.detailsFacture.refProduit = this.paramProduit.codeProduit\n    this.detailsFacture.libProduit = this.paramProduit.libProduit\n    this.detailsFacture.prixUnit = this.paramProduit.prixUnitaire\n    if (this.detailsFacture.libProduit.trim() ||\n      this.detailsFacture.quantite.trim() || this.detailsFacture.prixUnit.trim()) {\n      if (this.detailsFacture.id) {\n        this.detailsFactureList[this.findIndexById(this.detailsFacture.id, this.detailsFactureList)] = this.detailsFacture\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Détails facture modifier', life: 1000 });\n      } else {\n        //this.detailsFacture.id = this.createId();\n        this.detailsFactureList.push(this.detailsFacture);\n      }\n\n      this.detailsFactureList = [...this.detailsFactureList];\n      this.detailsDialog = false;\n      this.facture.detailsFacture = this.detailsFactureList\n      this.detailsFacture = {};\n      this.order++\n      this.submittedD = false\n    }\n    console.log(this.detailsFactureList)\n  }\n  deleteDetail(detailsFacture: Detailsfacture) {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + detailsFacture.libProduit + '?',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.detailsFactureList = this.detailsFactureList.filter(val => val.id !== detailsFacture.id);\n        this.detailsFacture = {};\n        this.order--\n\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Détails facture supprimer', life: 3000 });\n      }\n    });\n\n  }\n  updateDetail(detailsFacture: Detailsfacture) {\n    this.detailsFacture = { ...detailsFacture };\n    this.detailsDialog = true;\n  }\n\n  findIndexById(id: Number, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n    console.log(\"indx\" + index)\n    return index;\n  }\n\n\n  findIndexByCodeGrp(id: string, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].codeGrp === id) {\n        index = i;\n        break;\n      }\n    }\n    console.log(\"indx\" + index)\n    return index;\n  }\n\n\n\n\n\n  createId(): Number {\n    let id = null;\n    var n = '0123456789';\n    for (var i = 0; i < 5; i++) {\n      id += n.charAt(Math.floor(Math.random() * n.length));\n    }\n    return id;\n  }\n\n   getClient(e) {\n    if (this.checkedclient == false) {\n      this.loadSpinner = true;\n      this.clientService.getClient(this.client.matriculeFiscaleClient).subscribe(\n        (data: Client) => {\n          //this.clientDisabled=!this.clientDisabled\n          //document.getElementById(\"spin\").remove();\n          if (data != null) {\n            this.client = data\n            this.loadSpinner = false;\n          } else {\n            console.log(this.client);\n            this.loadSpinner = false;\n            this.messageService.add({ severity: 'info', summary: 'Info', detail: 'client n existe pas, saisie les champs manuellement!', life: 2000 });\n          }\n        }, error => { })\n    } else {\n      this.client = {}\n    }\n  } \n  filterProduit(event){\n    let filtered :any[] =[]\n    let query = event.query\n    for(let i = 0; i<this.ParamProduitItems.length;i++){\n      let item = this.ParamProduitItems[i];\n      if( item.codeProduit.toLowerCase().indexOf(query.toLowerCase()) == 0){\n        filtered.push(item);\n      }\n    }\n    this.filteredParamProduit = filtered\n  }\n\n  getSelectedProduit(event){\n    debugger\n    this.paramProduit=event;\n    console.log(this.paramProduit)\n  }\n\n  annulerFct() {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir annuler la facture ?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      accept: () => {\n        this.ngOnInit();\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture annuler', life: 3000 });\n      }\n    });\n  }\n  validateFacture() {\n    this.factureService.validateFacture(this.facture.numFact).subscribe();\n    this.toggle = !this.toggle\n    this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture valider', life: 3000 });\n  }\n  hideDialogAvoir(){\n    this.FactureAvoirDialog=false\n  }\n\n  getFactureAvoir(){\n    this.factureService.getFactureByNumFact(this.numfactureAvoir).subscribe((data) => {\n      this.factureAvoir = data\n      this.facture.datFactInit = moment(data.datFactInit).format('DD/MM/YYYY hh:mm:ss')  \n      this.factAvoirDate = data.datFactInit\n      console.log(data.datFactInit)\n      this.client.matriculeFiscaleClient = data.client.matriculeFiscaleClient\n      this.client.nom = data.client.nom\n      this.client.email = data.client.email\n      this.client.numTel = data.client.numTel\n      this.client = data.client\n      this.facture.detailsFacture= data.detailsFacture\n      this.detailsFactureList = data.detailsFacture\n      this.facture.detailsFacture = this.detailsFactureList\n    console.log(this.detailsFactureList)\n         });\n    this.FactureAvoirDialog=false\n  }\n  onChangeTyp(event) {\n    \n    console.log(event)\n    this.selectedStaticList = event.value\n    if(this.selectedStaticList.id == '2'){\n      this.FactureAvoirDialog=true\n        \n    }\n  }\n\n  phoneNumberValidator(event: any) {\n    const pattern = /[0-9]{8}/;\n    if (!pattern.test(event.target.value)) {\n      event.target.value = event.target.value.replace(/^[0-9\\-]*$/, \"\");\n    }\n  }\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card\" [class.disabled]=\"!toggle\">\n    \n     \n    <p-accordion [style]=\"{'height':'100%'}\"> \n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h6 Class=\"titles\">Prise en charge facture :</h6>\n            </ng-template>\n            <ng-template pTemplate=\"right\">\n                <button pButton pRipple label=\"Enregistrer\" icon=\"pi pi-save\"\n                class=\"p-button-success p-button-sm p-mr-2\" (click)=\"saveFacture()\"></button>\n                <button pButton pRipple label=\"Valider\" icon=\"pi pi-check\" [disabled]=\"this.facture.isSaved === false\"   (click)=\"validateFacture()\" class=\"p-button-info p-button-sm p-mr-2\"></button>\n            </ng-template>\n        </p-toolbar>       \n        \n            <div class=\"card m-9\">\n                <h6 Class=\"titles\">Informations facture :</h6> \n                \n                <div class=\"card-body \">\n                    <div class=\"row \">\n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <input class=\"p-inputtext-lg\" pTooltip=\"Saisir le Numéro du facture\" tooltipPosition=\"top\" tooltipEvent=\"focus\" style=\"width: 100%;\"\n                            required autofocus id=\"numFact\" [(ngModel)]=\"facture.numFact\" type=\"text\" pInputText >  \n                            <label for=\"num_fact\">N° Facture </label>\n                            <small class=\"p-error\" *ngIf=\"submitted && !facture.numFact\">Numéro du facture est obligatoire.</small>\n                        </span> \n                    </div>   \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown [options]=\"staticList\"  class=\"p-inputtext-sm\" pTooltip=\"Choisir le type du facture\" tooltipPosition=\"top\" [(ngModel)]=\"selectedStaticList\" optionLabel=\"code\" inputId=\"tf\" \n                            (onChange)=\"onChangeTyp($event)\" [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                        </span> \n                    </div>   \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <p-calendar  inputId=\"calendar\" pTooltip=\"Choisir la date du facture\" tooltipPosition=\"top\" [(ngModel)]=\"facture.datFactInit\" dateFormat=\"dd/mm/yy\" showIcon=\"true\" [maxDate]=\"maxDate\"\n                             [style]=\"{'width':'100%', 'height':'40px'}\"> </p-calendar> \n                            <label for=\"calendar\">Date facture </label>\n                        </span> \n                    </div>    \n                    <div class=\"form-group col-lg-4 p-2\" style=\"display: flex !important; align-items: center!important;\">\n                            <p-checkbox  inputId=\"checkexp\" binary=\"true\" [(ngModel)]=\"facture.isExported\" > </p-checkbox> \n                            <label for=\"checkexp\" style=\"margin-bottom: 0rem;\">&nbsp; &nbsp; A l'exportation</label>\n                    </div>              \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <input id=\"lastname1\"   disabled  class=\"p-inputtext-lg\" [(ngModel)]=\"facture.montantTOTALS\" type=\"text\" style=\"width: 100%;\" pInputText>  \n                            <label for=\"lastname1\">Montant total  </label>\n                        </span> \n                    </div>                    \n                    </div>\n                </div>\n            </div>\n             <div class=\"card m-6\" >\n                  <h6 Class=\"titles\">Informations clients :</h6>\n                <div class=\"card-body \">\n                    <div class=\"form-row row\">\n                        <div class=\"form-group p-inputgroup col-lg-4\">\n                            <span class=\"p-float-label p-input-icon-right \">\n                                <i *ngIf=\"loadSpinner\" id=\"spin\" class=\"pi pi-spin pi-spinner\"></i>\n                                <input required   id=\"numFact\"  class=\"p-inputtext-lg\" pTooltip=\"Saisir le matricule fiscale du client\" style=\"width: 100%;\"\n                                    tooltipPosition=\"top\" tooltipEvent=\"focus\" [(ngModel)]=\"client.matriculeFiscaleClient\"  type=\"text\" pInputText>   \n                                <label for=\"numFact\">Matricule fiscale</label>\n                                <small class=\"p-error\" *ngIf=\"submitted && !facture.numFact\">Matricule fiscale est obligatoire.</small>\n                            </span> \n                            <p-toggleButton (onChange)=\"getClient($event)\" [(ngModel)]=\"checkedclient\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"[style]=\"{'height':'40px'}\" ></p-toggleButton>\n                        </div>          \n                    </div>\n                    <hr>\n                                <div class=\"row\">\n                                   <div class=\"form-group col-lg-4 p-2\">\n                                    <span class=\"p-float-label\">\n                                        <input id=\"nom\" class=\"p-inputtext-lg\" pTooltip=\"Saisir le nom du client\" tooltipPosition=\"top\"\n                                        [(ngModel)] =\"client.nom\" type=\"text\" style=\"width: 100%;\" pInputText required>  \n                                        <label for=\"nom\">Nom client/Raison sociale </label>\n                                        <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Nom est obligatoire.</small>\n                                    </span>    \n                                    </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                        <span class=\"p-float-label\">\n                                            <input id=\"nom\" class=\"p-inputtext-lg\" pTooltip=\"Saisir l'adresse du client\" tooltipPosition=\"top\"\n                                            [(ngModel)] =\"client.addresse\" type=\"text\" style=\"width: 100%;\" pInputText required>  \n                                            <label for=\"nom\">Adresse </label>\n                                            <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n                                        </span>    \n                                        </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                    <span class=\"p-float-label\">\n                                        <input id=\"email\"  class=\"p-inputtext-lg\"  [(ngModel)] =\"client.email\" email type=\"email\"\n                                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"     pTooltip=\"Saisir l'email du client\" tooltipPosition=\"top\"   #ma=\"ngModel\"  style=\"width: 100%;\" pInputText required> \n                                        <label for=\"email\">Email </label>\n                                        <small class=\"p-error\" *ngIf=\"ma.errors?.pattern\">Le format de l'email est incorrecte.</small>\n                                     </span>                        \n                                    </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                        <span class=\"p-float-label\">\n                                            <input id=\"numTel\"   class=\"p-inputtext-lg\" [(ngModel)] =\"client.numTel\"  type=\"text\" pTooltip=\"Saisir numero du client\" tooltipPosition=\"top\" style=\"width: 100%;\" pInputText required>     \n                                            <label for=\"numTel\">N°téléphone </label>\n                                            <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Numéro du téléphone est obligatoire.</small>\n                                        </span> \n                                    </div>                       \n                                    <!-- <div class=\"col\">\n                                        \n                                            <span class=\"p-float-label\">\n                                                <p-dropdown [style]=\"{'width':'100%','height':'40px'}\" [options]=\"paramPaysList\" [(ngModel)]=\"client.paramPays\" \n                                                optionLabel=\"libPays\" inputId=\"lastname1\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"false\"> </p-dropdown>                            \n                                                <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                                            </span>                          \n                                                                              \n                                    </div> -->\n                        </div>\n                </div>\n               \n             </div>\n\n            <div class=\"card m-6\">\n                <h6 Class=\"titles\">Détails facture :</h6>\n\n                \n                <p-table #dt [value]=\"detailsFactureList\" [rows]=\"5\" [paginator]=\"true\"\n                 responsiveLayout=\"scroll\"\n                 [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-sm\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    [showCurrentPageReport]=\"true\" >\n                  \n                    <ng-template pTemplate=\"header\" >\n                        <tr>\n                            <th style=\"width: 4rem\">Order</th>\n                            <th style=\"width: 10rem\" >Réference Produit</th>\n                            <th>Produit </th> \n                            <th >Groupe de Taxation </th> \n                            <th >Quantité </th> \n                            <th >Prix unitaires  </th> \n                            <th style=\"width: 7rem\">Action</th>\n                            <th style=\"width: 4rem\">  <p-button  \n                                  Tooltip=\"Ajouter détails facture\"  toolTipPosition=\"top\" icon=\"pi pi-plus-circle\" class=\"p-button-info p-mr-2\"\n                                 (onClick)=\"addNewDetails()\" ></p-button>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-det>\n                        <tr>\n   \n                            <td>{{det.orderProduit}}</td>\n                            <td>{{det.refProduit}}</td>\n                            <td>{{det.libProduit}}</td>\n                            <td>{{det.groupeTaxationLib}}</td>\n                            <td>{{det.quantite}}</td>\n                            <td>{{det.prixUnit}}</td>\n\n                            <td>\n                                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                                    (click)=\"updateDetail(det)\"></button>\n                                <button pButton pRipple icon=\"pi pi-trash\" \n                                    class=\"p-button-rounded p-button-danger p-mr-2\" (click)=\"deleteDetail(det)\"></button>\n                            </td>\n                            \n                        </tr>\n                    </ng-template>\n        \n                </p-table>\n            </div>\n           \n        <p-accordionTab header=\"Sub totaux Facture\" [disabled]=\"this.subtotauxDisabled\">\n            <div class=\"form-group col-sm p-fluid\" >\n                <label for=\"lastname1\">Montant total tax specifique :</label>\n                <input id=\"lastname1\"   disabled  class=\"p-inputtext-sm\" [(ngModel)]=\"facture.montantTaxSpec\" type=\"text\" pInputText> \n            </div> \n               \n                    <p-table  styleClass=\"p-datatable-sm\" [value]=\"subTotauxFactureList\"  >\n                        <ng-template pTemplate=\"header\">\n                            <tr>       \n                                <th>Groupe de taxations</th>\n                                <th>Montant total hors tax</th>\n                                <th>Montant TTC</th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-subTotaux>\n                            <tr>\n                                <td>{{subTotaux.codeGrp}}</td>\n                                <td>{{subTotaux.totalHt}}</td>\n                                <td>{{subTotaux.totalTax}}</td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                        \n               \n             \n        </p-accordionTab>\n         \n    </p-accordion>\n</div>\n\n\n<p-dialog [(visible)]=\"detailsDialog\"  [style]=\"{width: '760px'}\" header=\"Ajout détails facture\" [modal]=\"true\"\n        styleClass=\"p-fluid\"  >\n        <ng-template pTemplate=\"content\">\n            <hr>\n            <div class=\"row\">\n                <div class=\"form-group col-lg-6 p-2\">\n                   <!--  <span class=\"p-float-label\">\n                        <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"gp\" [(ngModel)]=\"detailsFacture.refProduit\" style=\"width: 100%;\" required autofocus />   \n                        <label for=\"gp\">Code produit</label>\n                        <small class=\"p-error\" *ngIf=\"submittedD && !detailsFacture.refProduit\">Code produit est obligatoire.</small>\n                    </span>  -->   \n                <span class=\"p-float-label\">      \n                    <p-autoComplete [ShowEmptyMessage]=\"true\" [dropdown]=\"true\" [(ngModel)]=\"paramProduit.codeProduit\" [suggestions]=\"filteredParamProduit\"\n                    (completeMethod)=\"filterProduit($event)\" field=\"codeProduit\" (onSelect)=\"getSelectedProduit($event)\"></p-autoComplete> \n                    <label for=\"gp\">Code produit</label>\n                </span>       \n                </div>\n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"lp\" [(ngModel)]=\"paramProduit.libProduit\" style=\"width: 100%;\" required  /> \n                        <label for=\"lp\">Produit </label>\n                    </span>              \n                        <small class=\"p-error\" *ngIf=\"submittedD && !paramProduit.libProduit\">Le produit est obligatoire.</small>\n                </div>                \n            </div>\n            <div class=\"form-row row\">\n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduit.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                    aria-required=\"true\" optionLabel=\"libGrp\" id=\"gt\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\" [style]=\"{'width':'100%'}\"\n                      requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submittedD)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                        <label for=\"gt\">Groupe de taxation </label>\n                        <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submittedD) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                    </span>                   \n                </div>  \n              <div class=\"form-group col-lg-6 p-2\">\n                <span class=\"p-float-label\">\n                    <p-inputNumber id=\"pu\" class=\"p-inputtext-lg\" [(ngModel)]=\"paramProduit.prixUnitaire\"  [useGrouping]=\"false\"\n                    required  [min]=\"1\"  style=\"width: 100%;\"></p-inputNumber>\n                    <label for=\"pu\">Prix unitaire </label>\n                </span>              \n                    <small class=\"p-error\" *ngIf=\"submittedD && !paramProduit.prixUnitaire\">Le prix unitaire est obligatoire.</small>   \n             </div>\n            \n            </div>\n            <div class=\"form-row row\">\n               \n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-inputNumber  id=\"qp\"  class=\"p-inputtext-lg\" [(ngModel)]=\"detailsFacture.quantite\"  [useGrouping]=\"false\"\n                        required    [min]=\"1\" style=\"width: 100%;\"></p-inputNumber>\n                        <label for=\"qp\">Quantité </label>\n                    </span>              \n                        <small class=\"p-error\" *ngIf=\"submittedD && !detailsFacture.quantite\">La quantité est obligatoire.</small>  \n                  </div>\n                                 \n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-inputNumber id=\"ts\"  class=\"p-inputtext-lg\" [min]=\"1\"   [(ngModel)]=\"detailsFacture.taxSpec\"\n                        [useGrouping]=\"false\" required  style=\"width: 100%;\" ></p-inputNumber>\n                        <label for=\"ts\">Tax spécifique </label>\n                    </span>             \n                </div>             \n            </div>\n\n\n            <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                        (click)=\"hideDialog()\"></button>&nbsp;\n                    <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                        (click)=\"saveDetails()\"></button>\n                </div>\n                 \n        </ng-template>\n       \n    </p-dialog>\n\n    <p-dialog [(visible)]=\"FactureAvoirDialog\"  [style]=\"{width: '460px'}\" header=\"Numero de facture à annuler\" [modal]=\"true\"\n    styleClass=\"p-fluid\"  >\n    <ng-template pTemplate=\"content\">\n        <hr>\n   \n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"lp\" [(ngModel)]=\"numfactureAvoir\" style=\"width: 100%;\" required  autofocus/> \n                    <label for=\"lp\">Numéro Facture </label>\n                </span>              \n                    <small class=\"p-error\" *ngIf=\"submittedD && !numfactureAvoir\">Le numéro de facture est obligatoire.</small>\n            </div>                \n        \n        <hr>\n            <div class=\"row\" style=\"float: right;\">\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                    (click)=\"hideDialogAvoir()\"></button>&nbsp;\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                    (click)=\"getFactureAvoir()\"></button>\n            </div>\n             \n    </ng-template>\n   \n</p-dialog>\n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    <!--spinner-->\n    <ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n        <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n    </ngx-spinner>\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './authentification.users.html',\r\n  styles: []\r\n})\r\nexport class authentificationUsers implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<div class=\"container-fluid\">\r\n          <router-outlet></router-outlet>         \r\n </div>  \r\n <!--footer class=\"page-footer font-small blue\"> \r\n   <div class=\"footer-copyrght text-center py-3\" style=\"padding-top : 1.5rem !important;\">\r\n    @ 2021 Copyright : <a href=\"http://www.arabsoft.com.tn/\">Arabsoft</a>\r\n  All rights reserved. <b>Version</b> 1.0.0\r\n  </div>\r\n</footer--> \r\n","import { Component, OnInit } from '@angular/core';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Parampays } from 'src/app/models/parampays';\n\n@Component({\n  selector: 'app-group-taxation',\n  templateUrl: './group-taxation.component.html',\n  styleUrls: ['./group-taxation.component.scss']\n})\nexport class GroupTaxationComponent implements OnInit {\n    \n  grpTaxList:Array<Groupetaxation>=[]\n  grpTax:Groupetaxation\n  grpTaxDialog:boolean\n  updateDialog :boolean\n  submitted :boolean = false;\n  paramPaysList: Array<Parampays> = []\n\n  constructor(private grpTaxationService : grpTaxationService,private messageService: MessageService,\n    private confirmationService: ConfirmationService,  private paramPaysService: paramPaysService) { }\n\n  ngOnInit(): void {\n     this.refresh();\n     this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      console.log(data)\n      this.paramPaysList = data\n    })\n  }\n \n  saveGrp(){\n    this.submitted = true\n    if (!this.grpTax.codeGrpTax ||\n     !this.grpTax.libGrp ||\n     !this.grpTax.taxTva \n    \n   ) {\n     return;\n   }\n    this.grpTaxationService.postGrpTaxation(this.grpTax).subscribe(()=>this.refresh());\n    this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations ajouter', life: 3000});\n    this.grpTaxDialog = false;\n    console.log(this.grpTax)\n   \n\n  }\n  hideDialog() {\n    this.refresh()\n    this.grpTaxDialog = false;\n    this.updateDialog = false;\n    this.submitted = false;\n  }\n  refresh(){\n    this.grpTaxationService.getGrpTaxations().subscribe((data:Groupetaxation[])=>{\n      this.grpTaxList=data\n    })\n  }\n  openNew(){    \n    this.grpTaxDialog=true\n    this.grpTax={}\n  }\n  openUpdate(grp:Groupetaxation){\n    this.updateDialog=true\n    this.grpTax=grp\n  }\n  updateGrp(grp:Groupetaxation){  \n    this.grpTax=grp\n    this.grpTaxationService.updateGrpTax(grp.id, grp).subscribe(()=>this.refresh());\n    this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations changer', life: 3000});    \n    this.updateDialog=false\n\n  }\n  deleteGrp(grp:Groupetaxation){\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + grp.libGrp + '?',\n      acceptLabel:'Oui',\n      rejectLabel:'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.grpTaxationService.deletetgrpTax(grp.id).subscribe(()=>this.refresh());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations supprimer', life: 3000});\n         \n        }\n  });\n  }\n\n \n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card m-9\">\n          \n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        \n        <ng-template pTemplate=\"left\">\n            <h5 class=\"p-m-0\">Liste des groupes des taxations</h5>   \n         </ng-template> \n         <ng-template pTemplate=\"right\">\n                 <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Filtrer...\"/>\n              &nbsp;\n            <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n     \n         </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"grpTaxList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [scrollable]=\"true\" styleClass=\"p-datatable-sm\"\n    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['codeGrpTax','libGrp','taxTva','paramPays.libPays']\">       \n   \n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th  pSortableColumn=\"codeGrpTax\">Code <p-sortIcon field=\"codeGrpTax\"></p-sortIcon>\n            </th> \n            <th  pSortableColumn=\"libGrp\">Libellé <p-sortIcon field=\"libGrp\"></p-sortIcon>\n            </th> \n            <th  pSortableColumn=\"taxTva\">Valeur de TAX <p-sortIcon field=\"taxTva\"></p-sortIcon>\n            </th>  \n            <th  pSortableColumn=\"paramPays.libPays\">Pays <p-sortIcon field=\"paramPays.libPays\"></p-sortIcon>\n            </th>          \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-grp>\n        <tr>\n            <td>{{grp.codeGrpTax}}</td>\n            <td>{{grp.libGrp}}</td>\n            <td>{{grp.taxTva}}</td>\n            <td>{{grp.paramPays.libPays}}</td>\n            \n            <td>\n                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"  openUpdate(grp)\" ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" \n                (click)=\"deleteGrp(grp)\"  class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-grp>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    \n    \n    </div>\n    </div>        \n    \n    \n    <p-dialog [(visible)]=\"grpTaxDialog\" [style]=\"{width: '450px'}\" header=\"Ajout de groupe de taxations\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown  [style]=\"{width: '100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"grpTax.paramPays\" \n                        optionLabel=\"libPays\" inputId=\"lastname1\"  [autoDisplayFirst]=\"false\" autofocus> </p-dropdown>                            \n                        <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                    </span>                          \n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.codeGrpTax\" required  />\n                        <label for=\"name\">Code groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.codeGrpTax\">Le Code groupe de taxation est obligatoire.</small>\n                </div>\n               <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.libGrp\" required  />\n                        <label for=\"name\">Libellé groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.libGrp\">Le Libellé groupe de taxation est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.taxTva\" required  />\n                        <label for=\"name\">Valeur de Tax </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.taxTva\">La Valeur de Tax est obligatoire.</small>\n                </div>\n               \n                <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveGrp()\"></button>\n             \n                </div>\n            </ng-template>\n        \n        </p-dialog>\n    \n\n        <p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"mise a jour de groupe de taxations\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"code\" [(ngModel)]=\"grpTax.codeGrpTax\" required autofocus/>\n                        <label for=\"code\">Code groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.codeGrpTax\">Le Code groupe de taxation est obligatoire.</small>\n                </div>\n               <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"libgt\" [(ngModel)]=\"grpTax.libGrp\" required  />\n                        <label for=\"libgt\">Libellé groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.libGrp\">Le Libellé groupe de taxation est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"tax\" [(ngModel)]=\"grpTax.taxTva\" required  />\n                        <label for=\"tax\">Valeur de Tax </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.taxTva\">La Valeur de Tax est obligatoire.</small>\n                </div>\n               \n                <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateGrp(grpTax)\"></button>\n             \n                </div>\n            </ng-template>\n        \n        </p-dialog>\n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"main-footer\">\r\n    <strong>Copyright &copy; 2020-2021 <a href=\"http://www.arabsoft.com.tn/\">Arabsoft</a>. <small>  All rights reserved. Version 1.0.0-pre   </small></strong>\r\n   \r\n</footer>","import { isNull } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  UserLogin:String;\r\n  credentials:any;\r\n  \r\n  constructor(private storage:LocalStorageService,\r\n    private router:Router) { }\r\n items : MenuItem[]\r\n  ngOnInit(): void {\r\n    this.credentials= this.storage.retrieve(\"userConnect\");\r\n    console.log(this.credentials.libellePoint);\r\n\r\n\r\n   this.items = [\r\n    {\r\n      label:'Point : ' + this.credentials.libellePoint ,\r\n      items:[   \r\n     ]  \r\n   },      \r\n     {\r\n     label:' agent : ' + this.credentials.nomAgent,\r\n     items:[{\r\n       \r\n       label:'Paramètres',\r\n       icon:'pi pi-cog',\r\n       routerLink:'settings'\r\n     },\r\n     {\r\n        label:'Se déconnecter',\r\n        icon:'pi pi-sign-out',\r\n        command:()=>{ this.deconnecter(); }\r\n      }\r\n    ]  \r\n  }      \r\n   ];\r\n   \r\n\r\n  }\r\n\r\n  deconnecter() {\r\n    //this.storage.store('client', null);\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('token');\r\n\r\n    this.router.navigate(['/user/login']);\r\n  }\r\n\r\n  logOut(){\r\n    //this.storage.store('client', null);\r\n    //this.storage.clear();    \r\n    this.router.navigate(['/user/login']);\r\n    \r\n  }\r\n}\r\n","<nav class=\"main-header navbar navbar-expand nav-header-color\">\r\n  <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item\">\r\n          <a class=\"nav-link text-light\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n              <i class=\"fa fa-bars icon-color-fa\"></i>\r\n          </a>\r\n      </li>\r\n      \r\n  </ul>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n   <ul class=\"nav navbar-nav ml-auto\">\r\n       <li class=\"nav-item\" role=\"button\">\r\n           <!-- <a class=\"contact text-light\" aria-expanded=\"false\">  \r\n           <i class=\"pi pi-user\" style=\"font-size:1rem;color: #000;\" >&nbsp; {{credentials.libellePoint}}</i>\r\n           </a>  -->\r\n           <ngx-avatar name=\"{{credentials.libellePoint}}\" size=\"45\" textSizeRatio=\"2.2\" (click)=\"menu.toggle($event)\" ></ngx-avatar>          \r\n       </li>\r\n   </ul>\r\n   </div>\r\n  \r\n</nav>\r\n<p-menu #menu [popup]=\"true\" [model]=\"items\" [baseZIndex]=\"1500\" ></p-menu>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maincontent',\r\n  templateUrl: './maincontent.component.html',\r\n  styleUrls: ['./maincontent.component.css']\r\n})\r\nexport class MaincontentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n\r\n    <!-- Navbar -->\r\n   <app-header></app-header>\r\n    <!-- Main Sidebar Container -->\r\n    <app-menu></app-menu>\r\n    \r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"content-wrapper\">\r\n      <p-toast></p-toast>\r\n\r\n        <!-- /.content-header -->\r\n    \r\n        <!-- Main content --> \r\n        \r\n                                <router-outlet></router-outlet>\r\n                  \r\n    </div>\r\n    <!-- <app-maincontent></app-maincontent> -->\r\n    <!-- /.content-wrapper -->\r\n  \r\n  \r\n   \r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { Router } from '@angular/router';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  isAdmin: boolean;\r\n   matF: String;\r\n  constructor(private toastr: ToastrService,\r\n    private storage: LocalStorageService,\r\n    private router: Router,\r\n    private local:LocalStorageService,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     this.matF= this.local.retrieve(\"userConnect\").contribuable.matriculeFiscale;\r\n\r\n  }\r\n\r\n  deconnecter() {\r\n    //this.storage.store('client', null);\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('token');\r\n\r\n    this.router.navigate(['/user/login']);\r\n  }\r\n  prises(){\r\n         this.router.routeReuseStrategy.shouldReuseRoute=()=>false;\r\n         this.router.onSameUrlNavigation='reload'\r\n         this.router.navigate(['/dashboard/facture']);\r\n\r\n  }\r\n}\r\n","<aside class=\"main-sidebar sidebar-light-primary elevation-4\">\r\n    <!-- Brand Logo -->\r\n    <div class=\"logo\">\r\n    <a [routerLink]=\"['/dashboard']\"  class=\"simple-text\">\r\n        <div class=\"logo-img\">\r\n        <img src=\"assets/img/AS.png\" alt=\"AdminLTE Logo\" \r\n              >\r\n        </div>\r\n             ArabSoft       \r\n    </a>\r\n    </div>\r\n    <!-- Sidebar -->\r\n    <div class=\"sidebar\">\r\n        <!-- Sidebar user panel (optional) -->\r\n\r\n        <!-- SidebarSearch Form -->\r\n\r\n        <!-- Sidebar Menu -->\r\n        <nav class=\"mt-2\">\r\n            <span class=\"brand-text font-weight-bold\" style=\"color: whitesmoke;text-shadow: 2; font-size: x-large; \">Facture électronique</span>\r\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" style=\"margin-top: 20px;\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                <!-- Add icons to the links using the .nav-icon class\r\n               with font-awesome or any other icon font library -->\r\n               \r\n                <!-- <li class=\"nav-header\">Menu</li> -->\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\" (click)=\"prises()\">\r\n                        <i class=\"fa fa-product-hunt\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Prise en charges facture\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\"  [routerLink]=\"['historiqueFacture']\">\r\n                         <i class=\"fa fa-history\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Historique mes factures\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['client']\" >\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Clients\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"matF=='0'\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['contribuable']\" >\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Contribuable\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"matF=='0'\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['grpTaxation']\" >\r\n                        <i class=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Groupe de taxations\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\"  *ngIf=\"matF=='0'\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['parampays']\">\r\n                        <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Paramètres des pays\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['paramproduit']\">\r\n                        <i class=\"fa fa-cubes\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Paramètres des produits\r\n                        </p>\r\n                    </a>\r\n                </li> \r\n                <li class=\"nav-item\"  *ngIf=\"matF=='0'\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['statistics']\">\r\n                        <i class=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Statistiques\r\n                        </p>\r\n                    </a>\r\n                </li> \r\n                <!-- <div style=\"position : fixed; bottom : 0; \">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\"  style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['settings']\">\r\n                            <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                            <p>\r\n                              &nbsp; Paramétre de compte &nbsp; &nbsp; &nbsp; \r\n                            </p>\r\n                          </a>\r\n                      </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\"  style=\"color: white;\" (click)=\"deconnecter()\">\r\n                        <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Se déconnecter\r\n                        </p>\r\n                      </a>\r\n                  </li>\r\n                </div> -->\r\n            </ul>\r\n        </nav>\r\n        <!-- /.sidebar-menu -->\r\n    </div>\r\n    <!-- /.sidebar -->\r\n</aside>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\r\nimport { Pointvente } from 'src/app/models/pointvente';\r\nimport { Contribuable } from 'src/app/models/contribuable';\r\nimport { authentificationService } from 'src/app/services/authentification.service';\r\nimport { MessageService } from 'primeng/api/public_api';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  contribuable :Contribuable;\r\n  showBack: boolean = true;\r\n  attribute: any;\r\n  test:any;\r\n  pointVenteList :Array<Pointvente>=[]\r\n  selectedPointVente :Pointvente\r\n  constructor(private formBuilder: FormBuilder,\r\n    private storage: LocalStorageService,\r\n    private router: Router,\r\n    private serviceToken:TokenStorageService,\r\n    private authentificationService:authentificationService,\r\n    private toastreService: ToastrService,\r\n    private local:LocalStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      adminMail: ['', Validators.compose([Validators.required])],\r\n      adminPassword: [{value:'',disabled:true}, Validators.compose([Validators.required])],\r\n      selectedPointVente: [{value:'',disabled:true},Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  authentificationClient() {\r\n    console.log(this.loginForm.controls['selectedPointVente'].value)\r\n    this.authentificationService.authentification(this.loginForm.controls['selectedPointVente'].value,\r\n    this.loginForm.controls['adminPassword'].value).subscribe(\r\n    (data)=>{\r\n          console.log(data)\r\n      this.local.store(\"userConnect\",data.user)\r\n      this.router.navigate(['/dashboard/facture']);\r\n\r\n    },\r\n     error=>{\r\n       this.toastreService.error(\"Authentification invalide\")\r\n      console.log(\"erorr\")\r\n    })\r\n    \r\n  }\r\n\r\n\r\n\r\n  verifNif(){\r\n    \r\n   console.log(this.loginForm.controls['adminMail'].value)\r\n   this.authentificationService.getPointVentes(this.loginForm.controls['adminMail'].value).subscribe(\r\n       (data:Pointvente[])=>{\r\n         if(data.length !=0){\r\n               this.loginForm.controls['selectedPointVente'].enable()\r\n               this.loginForm.controls['adminPassword'].enable()\r\n              this.pointVenteList=data\r\n              console.log(data)\r\n       }else{\r\n        this.toastreService.error(\"Contribuable n'aucune point de vente\")\r\n       }\r\n       })\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"wrapped-div\">\r\n  <div class=\"tab-header\">\r\n    <h2 routerLink='/user/login' routerLinkActive='active'>{{'login.lbl-titre' | translate}}</h2>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10 offset-md-1\">\r\n  \r\n<img style=\"width: 100%; max-width: 180px;; height: auto ;margin-top: 19px;background-color: #f8f9fa; border-radius: 100px;\" src=\"/assets/img/AS.png\" class=\"mx-auto d-block\"> \r\n<div class=\"login-logo\">\r\n  <a href=\"\" class=\"cls-text-color\"><b class=\"cls-text-color\">{{'login.lbl-card' | translate}} </b></a>\r\n</div>   \r\n<form [formGroup]=\"loginForm\" class=\"mb-4\" autocomplete=\"off\">\r\n  <div class=\"form-group \">   \r\n    <input (blur)=\"verifNif()\"type=\"text\" class=\"form-control\" autofocus placeholder=\"{{'login.ph-mf' | translate}}\" formControlName=\"adminMail\" >\r\n  </div>\r\n  <div class=\"form-group \">\r\n    <!--p-dropdown [options]=\"pointVenteList\"  [(ngModel)]=\"selectedPointVente\" optionLabel=\"libellePoint\" id=\"lastname1\"  (click)=\"verifNif()\"\r\n placeholder=\"select\" [style]=\"{width: '160px'}\"> </p-dropdown-->\r\n   <select formControlName=\"selectedPointVente\" class=\"form-control\"    >\r\n     <option value=\"\"  disabled hidden>{{'login.ph-listepv' | translate}}</option>\r\n    <option *ngFor=\"let pointv of pointVenteList\" [(ngValue)]=\"pointv.codeAgent\">{{pointv.libellePoint}}</option>\r\n   </select>\r\n   </div>\r\n  <div class=\"form-group \">\r\n    <input type=\"password\" class=\"form-control\" placeholder=\"{{'login.ph-password' | translate}}\" formControlName=\"adminPassword\">\r\n  </div>\r\n  <div   style=\"text-align: center; margin-bottom: 20px;\"> \r\n        <button (click)=\"authentificationClient()\"  class=\"btn\"   [disabled]=\"!loginForm.valid\" >{{'login.btn-connect' | translate}}</button>\r\n  \r\n      \r\n      </div>\r\n      <div  style=\" text-align: center;\"> \r\n        <a [routerLink]=\"['/user/register']\"  style=\" color: #f8f9fa;\" href=\"#\" >{{'login.link-signin' | translate}}</a>\r\n      </div>\r\n      <div  style=\" text-align: center;\"> \r\n        <u [routerLink]=\"['/user/forgetsPwd']\"  style=\" color: #f8f9fa;\"  >{{'login.link-mdpoublie' | translate}}</u>\r\n      </div>\r\n      \r\n</form>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Parampays } from 'src/app/models/parampays';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-param-pays',\n  templateUrl: './param-pays.component.html',\n  styleUrls: ['./param-pays.component.scss']\n})\nexport class ParamPaysComponent implements OnInit {\n    \n     paramPaysList : Array<Parampays>=[]\n     paramDialog :boolean\n     paramPays : Parampays\n     submitted :boolean = false;\n  constructor(private paramPaysService:paramPaysService ,private messageService: MessageService,\n    private confirmationService: ConfirmationService, private toastreService: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.refresh()\n\n  }\n   \n  saveParam(){\n    this.submitted = true\n    if (!this.paramPays.codePays||\n     !this.paramPays.libPays ||\n     !this.paramPays.langue \n    \n   ) {\n     return;\n   }\n\n    this.paramPaysService.postParamPays(this.paramPays).subscribe(()=>this.refresh());\n    this.toastreService.success(\"Parametre pays ajouter!\");\n\n    this.paramDialog = false;\n    this.paramPays = {};\n\n  }\n  hideDialog() {\n    this.paramDialog = false;\n    this.submitted = false;\n  }\n\n  openNew(){\n\n    this.paramDialog=true\n    this.paramPays={}\n  }\n \n\n\ndeleteParam(prm:Parampays){\n  this.confirmationService.confirm({\n    message: 'Are you sure you want to delete ' + prm.libPays + '?',\n    header: 'Confirm',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n        this.paramPaysService.deletetParam(prm.codePays).subscribe(()=>this.refresh());\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de pays supprimer', life: 3000});    \n      }\n});\n\n\n}\nrefresh(){\n  this.paramPaysService.getParamPays().subscribe((data:Parampays[])=>{\n this.paramPaysList=data\n})\n}\n\nupdateParam(prm:Parampays){\n \n  this.paramPays=prm\n  this.paramDialog=true\n\n}\n}\n","<div class=\"card m-9\">\n  \n\n<div class=\"card-body\">\n<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n       <h5 class=\"p-m-0\">Liste des paramétres des pays</h5>   \n    </ng-template> \n    <ng-template pTemplate=\"right\">\n       <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n\n    </ng-template>   \n</p-toolbar>\n\n<p-table #dt [value]=\"paramPaysList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\ncurrentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\" styleClass=\"p-datatable-sm\"\n[showCurrentPageReport]=\"true\" [globalFilterFields]=\"['nom_hotel','cod_hotel']\">\n\n<ng-template pTemplate=\"header\">\n    <tr>\n        <th >Code Pays \n        </th> \n        <th >Libellé Pays \n        </th> \n        <th >Langue\n        </th> \n        <th >Code devise \n        </th>         \n        <th>Action</th>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"body\" let-param>\n    <tr>\n        <td>{{param.codePays}}</td>\n        <td>{{param.libPays}}</td>\n        <td>{{param.langue}}</td>\n        <td>{{param.codeDevise}}</td>\n        <td>\n            <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n            (click)=\"updateParam(param)\"  ></button>\n            <button pButton pRipple icon=\"pi pi-trash\" \n               (click)=\"deleteParam(param)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n        </td>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"emptymessage\" let-param>\n    <tr>\n        <td colspan=\"5\" style=\"text-align: center;\">\n        \n             <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n             <br>\n             Aucun enregistrement trouvé!\n            \n        </td>\n    </tr>\n</ng-template>\n</p-table> \n\n\n</div>\n</div>\n\n<p-dialog [(visible)]=\"paramDialog\" [style]=\"{width: '650px'}\" header=\"Ajout paramétres de pays\" [modal]=\"true\"\n        styleClass=\"p-fluid\">\n        <ng-template pTemplate=\"content\">\n            <br>\n            <div class=\"row\">    \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.codePays\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Code pays </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.codePays\">Le code de pays est obligatoire.</small>\n                    </span> \n                </div>\n\n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.libPays\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Libellé pays  </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.libPays\">Le libellé de pays est obligatoire.</small>\n                    </span> \n                </div>\n            \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.langue\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Langue </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.langue\">La langue de pays est obligatoire.</small>\n                    </span> \n                </div>\n            </div>\n            <br>\n            <div class=\"row\">    \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.codeDevise\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Code devise </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.codeDevise\">Devise de pays est obligatoire.</small>\n                    </span> \n                </div>\n                <div class=\"form-group col-md-8\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.formatMontant\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Format Montant </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.formatMontant\">Format est obligatoire.</small>\n                    </span> \n                </div>\n            </div>\n            <br>\n            <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.procVerifMat\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Procédure Vérification NIF </label>\n                    </span> \n            </div>\n            <br>\n            <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.swPaiement\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Méthode de paiement </label>\n                    </span> \n            </div> \n           <hr class=\"solid\">\n             <div class=\"row\" style=\"float: right;\">\n                <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                ></button>&nbsp;\n             <button pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveParam()\"></button>\n            </div>\n           \n        </ng-template>\n    \n    </p-dialog>\n\n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\nimport { ParamProduit } from 'src/app/models/paramProduit';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'app-param-produit',\n  templateUrl: './param-produit.component.html',\n  styleUrls: ['./param-produit.component.scss']\n})\nexport class ParamProduitComponent implements OnInit {\n\n     paramProduitList : Array<ParamProduit>=[]\n     paramDialog :boolean\n     updateDialog :boolean\n     paramProduits : ParamProduit\n     submitted :boolean = false;\n     contpays:any\n     groupetaxationItems: Groupetaxation[]\n\n  constructor(private ParamProduitService:paramProduitService,private messageService: MessageService,\n    private confirmationService: ConfirmationService, private toastreService: ToastrService,\n    private grpTaxationService: grpTaxationService, private local: LocalStorageService) { }\n\n  ngOnInit(): void {\n    this.contpays= this.local.retrieve(\"userConnect\").contribuable.paramPays.id\n    this.refresh();\n  }\n\n  saveParam(){\n    this.submitted = true\n    if (!this.paramProduits.codeProduit ||\n     !this.paramProduits.libProduit ||\n     !this.paramProduits.prixUnitaire \n   ) {\n     return;\n   }   \n   this.paramProduits.contribuable = this.local.retrieve(\"userConnect\").contribuable\n this.ParamProduitService.postParamProduit(this.paramProduits).subscribe(()=>this.refresh());\n this.paramDialog = false;\nconsole.log(this.paramProduits) \n   }\n\n   deleteParam(prm:ParamProduit){\n    this.confirmationService.confirm({\n      message: 'voulez vous supprimer ' + prm.libProduit + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.ParamProduitService.deletetParam(prm.codeProduit).subscribe(()=>this.refresh());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de produit supprimer', life: 3000});\n        }\n  });\n  }\n\n  refresh(){\n    this.ParamProduitService.getparamProduits().subscribe((data:ParamProduit[])=>{\n      this.paramProduitList=data;\n    })\n  }\n\n   hideDialog(){\n     this.refresh()\n     this.paramDialog = false;\n     this.updateDialog = false;\n     this.submitted = false;\n   }\n   openNew(){\n     this.paramDialog=true\n     this.paramProduits={}\n     this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n   }\n   \n   openUpdate(prm:ParamProduit){\n    this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n    this.updateDialog=true\n    this.paramProduits=prm\n  }\n   updateParamProduit(prm:ParamProduit){\n    \n     this.ParamProduitService.updateParam(prm.id,prm).subscribe(()=>this.refresh());\n     this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de produit changer!', life: 3000});\n     this.updateDialog=false\n    }\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card m-9\">\n  \n\n    <div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Liste des paramétres des produits</h5>   \n        </ng-template> \n        <ng-template pTemplate=\"right\">\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Search...\"/>\n             &nbsp;\n           <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n    \n        </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"paramProduitList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\" styleClass=\"p-datatable-sm\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['codeProduit','libProduit']\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th >Code Produit</th> \n            <th >Libellé Produit</th>    \n            <th >Prix unitaire</th> \n            <th >Groupe taxation</th> \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-param>\n        <tr>\n            <td>{{param.codeProduit}}</td>\n            <td>{{param.libProduit}}</td>\n            <td>{{param.prixUnitaire}}</td>\n            <td>{{param.groupeTaxation.libGrp}}</td>\n            <td>\n                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                (click)=\"openUpdate(param)\"  ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" \n                   (click)=\"deleteParam(param)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-param>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    \n    \n    </div>\n    </div>\n    \n    <p-dialog [(visible)]=\"paramDialog\" [style]=\"{width: '450px'}\" header=\"Ajouter paramétres de produit\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                <span class=\"p-float-label\">\n                    <p-dropdown [style]=\"{width: '100%'}\" [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduits.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                aria-required=\"true\" optionLabel=\"libGrp\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\"\n                  requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submitted)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                    <label for=\"grpTax\">Groupe de taxation </label>\n                </span>  \n                <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submitted) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                </div> \n                <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"cp\" [(ngModel)]=\"paramProduits.codeProduit\" style=\"width: 100%;\" required autofocus />\n                            <label for=\"cp\">Code produit </label>\n                        </span> \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.codeProduit\">Code de produit est obligatoire.</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"lp\" [(ngModel)]=\"paramProduits.libProduit\" style=\"width: 100%;\" required />\n                            <label for=\"lp\">Libellé produit </label>\n                        </span>                   \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.libProduit\">Libellé de produit est obligatoire.</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"pu\" [(ngModel)]=\"paramProduits.prixUnitaire\" style=\"width: 100%;\" required />\n                            <label for=\"pu\">Prix unitaire </label>\n                        </span>                   \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.prixUnitaire\">Prix unitaire de produit est obligatoire.</small>\n                    </div>\n               \n          \n               <hr class=\"solid\">\n                 <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveParam()\"></button>\n                </div>\n               \n            </ng-template>\n        \n        </p-dialog>\n\n        <p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"update paramétres de produit\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown [style]=\"{width: '100%'}\" [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduits.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                    aria-required=\"true\" optionLabel=\"libGrp\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\"\n                      requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submitted)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                        <label for=\"grpTax\">Groupe de taxation </label>\n                    </span>  \n                    <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submitted) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                </div> \n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"cp\" [(ngModel)]=\"paramProduits.codeProduit\" style=\"width: 100%;\" required autofocus />\n                        <label for=\"cp\">Code produit </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.codeProduit\">Code de produit est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"lp\" [(ngModel)]=\"paramProduits.libProduit\" style=\"width: 100%;\" required />\n                        <label for=\"lp\">Libellé produit </label>\n                    </span>                   \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.libProduit\">Libellé de produit est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"pu\" [(ngModel)]=\"paramProduits.prixUnitaire\" style=\"width: 100%;\" required />\n                        <label for=\"pu\">Prix unitaire </label>\n                    </span>                   \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.prixUnitaire\">Prix unitaire de produit est obligatoire.</small>\n                </div>\n          \n               <hr class=\"solid\">\n                 <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateParamProduit(paramProduits)\"></button>\n                </div>\n               \n            </ng-template>\n        \n        </p-dialog>\n    \n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { authentificationService } from 'src/app/services/authentification.service';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-password-oublie',\n  templateUrl: './password-oublie.component.html',\n  styleUrls: ['./password-oublie.component.scss']\n})\nexport class PasswordOublieComponent implements OnInit {\n  loginForm: FormGroup;\n  contribuable :Contribuable;\n  showBack: boolean = true;\n  attribute: any;\n  submitted:boolean=false;\n  pointVenteList :Array<Pointvente>=[]\n  selectedPointVente :Pointvente\n  constructor(private formBuilder: FormBuilder,\n    private storage: LocalStorageService,\n    private router: Router,\n    private serviceToken:TokenStorageService,\n    private authentificationService:authentificationService,\n    private toastreService: ToastrService,\n    private local:LocalStorageService,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      matFiscale: ['', Validators.required ],\n      selectedPointVente: [{value:'pointv',disabled:true},Validators.required]\n    });\n  }\n\n\n  verifNif(){\n       this.authentificationService.getPointVentes(this.loginForm.controls['matFiscale'].value).subscribe(\n       (data:Pointvente[])=>{\n         if(data.length !=0){\n               this.loginForm.controls['selectedPointVente'].enable()\n              this.pointVenteList=data\n              console.log(data)\n       }else{\n        this.toastreService.error(\"Contribuable n'aucune point de vente\")\n       }\n      })\n  }\n\n  sendCode(){\n    this.submitted=true\n    if (this.loginForm.invalid)\n    return ;\n    this.authentificationService.sendPwdChangeCode(this.loginForm.controls['selectedPointVente'].value).\n    subscribe((data)=>{\n      this.confirmationService.confirm({\n        message: 'Etes-vous sûr de vouloir réinitialiser le mot de passe pour la point de vente ?',\n        acceptLabel: 'Oui',\n        rejectLabel: 'Non',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Code de récuertion envoyer avec succes', life: 5000 });\n          this.router.navigate(['/user/changePwd'],{state:this.loginForm.controls['selectedPointVente'].value});\n        }\n      });\n\n     },error=>{\n\n      this.toastreService.error(error)\n\n     })\n    \n  }\n\n  cancelUpdates(){\n    this.router.navigate(['/user/login']); \n  }\n}\n","<div class=\"wrapped-div\">\n\n    <div class=\"tab-header\">\n        <h2>Retrouvez votre point de vente</h2>\n    </div>\n  \n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">  \n        <div class=\"login-logo\">\n          <i class=\"fa fa-envelope fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n        </div>   \n        <form [formGroup]=\"loginForm\" class=\"mb-6\" autocomplete=\"off\">\n\n            <div class=\"form-group\">               \n              <input (blur)=\"verifNif()\"type=\"text\" class=\"form-control\" placeholder=\"Matricule Fiscale\" formControlName=\"matFiscale\" >\n              <!--span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['matFiscale'].errors.required\">la matricule fiscale est\n                obligatoire.</span-->\n            </div>\n\n            <div class=\"form-group\">\n              <h6 style=\"color:white\">Listes des point de vente :</h6>\n            <select formControlName=\"selectedPointVente\" class=\"form-control\">\n              <option value=\"\" disabled hidden>Listes des point de ventes</option>\n              <option *ngFor=\"let pointv of pointVenteList\" [ngValue]=\"pointv\">{{pointv.libellePoint}}</option>\n            </select>\n            </div>\n            <div  class=\"btn-toolbar\" style=\" margin-bottom: 20px;\"> \n             <div class=\"col-md-12 text-center \"> \n              <button (click)=\"cancelUpdates()\"  class=\"btn\">Annuler</button>\n              <button (click)=\"sendCode()\"  style=\"margin-left: 100px;\"  class=\"btn\"     >Valider </button>\n             </div>\n           \n            </div>\n        </form>\n     </div>\n    </div>\n  </div>\n\n  <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n  <p-toast></p-toast>","import { Component, OnInit} from '@angular/core';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Parampays } from 'src/app/models/parampays';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  contribuable: Contribuable;\n  pointVenteList: Array<Pointvente> = []\n  pointVente: Pointvente\n  pointVenteDialog: boolean;\n  confirmationDialog: boolean;\n  submittedd: boolean;\n  submitted: boolean;\n  password: string;\n  strongRegex: RegExp;\n  paramPaysList: Array<Parampays> = []\n  telmask=\"99-999-999\"\n  \n\n  constructor(private contribuableService: contribuableService, private router: Router, private messageService: MessageService,\n    private confirmationService: ConfirmationService, private paramPaysService: paramPaysService,private toastreService: ToastrService,\n     private spinner: NgxSpinnerService, private translateService: TranslateService) { }\n\n  ngOnInit(): void {\n    this.contribuable = {}\n    this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      console.log(data)\n      this.paramPaysList = data\n    })\n  }\n\n  register() {\n    this.submitted = true\n     if (!this.contribuable.matriculeFiscale ||\n      !this.contribuable.raisonSocial ||\n      !this.contribuable.numRegistre ||\n      !this.contribuable.numtel ||\n      !this.contribuable.email\n    ) {\n      return;\n    }\n    this.contribuable.paramPays = this.paramPaysList[0];\n    //var testObject={'idValue':1,'viewValue':'coco'};\n    //this.router.navigate(['/user/verification'],{state:this.contribuable});\n    this.spinner.show();\n    this.contribuableService.postContribuable(this.contribuable).subscribe((data) => {\n      if(data!==null){\n        this.router.navigate(['/user/verification'],{state:data});\n        this.spinner.hide();\n      }else{\n        console.log('errooooooor'); \n      }\n      setTimeout(()=>{\n        this.spinner.hide();\n      },10000)\n    }, error => {\n      this.toastreService.error(error.error.message);\n      this.spinner.hide()\n      this.toastreService.error(\"problem d'envoi d'email!\");\n    } \n    )\n  }\n\n  hideDialog() {\n    this.pointVenteDialog = false;\n    this.submittedd = false;\n  }\n  hideDialog2() {\n    this.confirmationDialog = false;\n  }\n\n  ConfirmRegistration() {\n    this.submitted = true\n     if (!this.contribuable.matriculeFiscale ||\n      !this.contribuable.raisonSocial ||\n      !this.contribuable.numRegistre ||\n      !this.contribuable.numtel ||\n      !this.contribuable.email \n     \n    ) {\n      return;\n    }\n    this.confirmationDialog = true;\n\n  }\n\n\n  addNewPointVentes() {\n    this.pointVente = new Pointvente();\n    this.password=null\n    this.pointVenteDialog = true\n\n  }\n  deletepv(pv: Pointvente) {\n\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + pv.libellePoint + '?',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.pointVenteList = this.pointVenteList.filter(val => val.id_list !== pv.id_list);\n        this.pointVente = {};\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Point de vente supprimer', life: 3000 });\n      }\n    });\n\n  }\n  updatepv(pv: Pointvente) {\n\n    this.pointVente = { ...pv };\n    this.pointVenteDialog = true;\n\n  }\n\n  savepv() {\n    this.submittedd = true;\n    if (\n      !this.pointVente.codeAgent ||\n      !this.pointVente.libellePoint ||\n      !this.pointVente.motPasse ||\n      !this.pointVente.nomAgent ||\n      !this.pointVente.email ||\n      !this.pointVente.motPasse\n    ) {\n      return;\n    }\n    if(this.validateRegexMdp()){\n      return;\n    }\n    if (this.pointVente.id_list) {\n      this.pointVenteList[this.findIndexById(this.pointVente.id_list, this.pointVenteList)] = this.pointVente\n      this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Point de vente modifier', life: 3000 });\n    } else if(!this.pointVenteList.some((pv)=> pv.codeAgent == this.pointVente.codeAgent)){\n      this.pointVente.id_list = this.createId();\n    this.pointVenteList.push(this.pointVente);\n    this.pointVenteList = [...this.pointVenteList];\n    this.pointVenteDialog = false;\n    this.contribuable.pointVente = this.pointVenteList\n    this.pointVente = {};\n    this.toastreService.success(\"Point de vente ajouter!\");\n    this.submittedd = false;\n    }else{\n      this.toastreService.error(\"Code Agent déja existe!\");\n    }\n\n  }\n\n  findIndexById(id: string, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  createId(): string {\n    let id = '';\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return id;\n  }\n\n  annuler() {   \n  if(confirm(this.translateService.instant('enregistrement.dialog-confirm-annuler'))){\n    this.router.navigate(['/user/login']);\n  }\n  }\n\n  validateRegexMdp(){\n    this.strongRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*+.-/])(?=.{8,})');\n    if(!this.strongRegex.test(this.pointVente.motPasse)){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n}\n","<div class=\"wrapped-div-register\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n            <h5 style=\"margin-left: 20px;\">{{'enregistrement.lbl-inscription' | translate}}</h5>\n        </ng-template>\n        <ng-template pTemplate=\"right\">\n            <button pButton pRipple  icon=\"pi pi-times\" label=\" {{'enregistrement.btn-annuler' | translate}}\" class=\"p-button-danger p-buttoon-sm p-mr-2\"\n                (click)=\"annuler()\" pTooltip=\"{{'enregistrement.tt-btn-annuler' | translate}} \" tooltipPosition=\"top\"></button>\n            <button pButton pRipple  (click)=\"ConfirmRegistration()\" icon=\"pi pi-save\" label=\" {{'enregistrement.btn-enregistrer' | translate}}\"\n                class=\"p-button-success p-button-sm p-mr-2\" pTooltip=\"{{'enregistrement.tt-btn-enregistrer' | translate}}\" tooltipPosition=\"top\"></button>\n        </ng-template>\n    </p-toolbar>\n    <p-accordion header=\"Inscriptions\" [style]=\"{width: '100%',height:'470px'}\">\n        <div class=\"card \">\n            <div class=\"card-body \">\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"mf\" [(ngModel)]=\"contribuable.matriculeFiscale\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                            autofocus pInputText>\n                            <label for=\"mf\">{{'enregistrement.lbl-mf' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.matriculeFiscale\">Matricule Fiscale est obligatoire.</small>\n                        </div>\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"rs\" [(ngModel)]=\"contribuable.raisonSocial\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"rs\">{{'enregistrement.lbl-rc' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.raisonSocial\">Raison Sociale est obligatoire.</small>                        \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"rc\" [(ngModel)]=\"contribuable.numRegistre\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"rc\">{{'enregistrement.lbl-regcom' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.numRegistre\">Registre de commerce est obligatoire.</small>  \n                    </div>\n                \n                \n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <p-inputMask id=\"tel\" mask=\"{{telmask}}\" [(ngModel)]=\"contribuable.numtel\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\"></p-inputMask>\n                            <label for=\"tel\"> {{'enregistrement.lbl-tel' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.numtel\">N°Téléphone est obligatoire.</small>                        \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"contribuable.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText type=\"email\" [email]=\"true\">\n                            <label for=\"email\">{{'enregistrement.lbl-email' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.email\">L'email est\n                                obligatoire.</small>\n                                <small class=\"p-error\" *ngIf=\"submitted && email.errors?.email\">email \n                                    invalide.</small>                       \n                    </div>\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"adresse\" [(ngModel)]=\"contribuable.adresse\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"adresse\">{{'enregistrement.lbl-adresse' | translate}}</label>\n                        </span>                          \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">                \n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown [style]=\"{'width':'100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"contribuable.paramPays\" \n                            optionLabel=\"libPays\" inputId=\"lastname1\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"false\"> </p-dropdown>                            \n                            <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                        </span>                          \n                    </div>\n                    <div class=\"col-lg-6\">\n                        <re-captcha siteKey=\"6LfTS1geAAAAAMLDCLmcu45hhV7nk4bzz_fPTYbRE\"></re-captcha>                        \n                    </div>\n                </div>\n            </div>\n        </div>\n        <p-accordionTab header=\"{{'enregistrement.tab-listepv' | translate}}\" [selected]=\"true\">\n            <div class=\"card\">\n                <p-table #dt [value]=\"pointVenteList\" [rows]=\"5\" [paginator]=\"true\" styleClass=\"p-datatable-sm\"\n                    responsiveLayout=\"scroll\" [rowHover]=\"true\" dataKey=\"id\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    [showCurrentPageReport]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            \n                            <th>{{'enregistrement.th-libpv' | translate}}</th>\n                            <th>{{'enregistrement.th-email' | translate}}</th>\n                            <th>{{'enregistrement.th-ca' | translate}}</th>\n                            <th>{{'enregistrement.th-na' | translate}}</th>\n                            <th>{{'th-action' | translate}}</th>\n                            <th>\n                                <p-button pTooltip=\"{{'enregistrement.tt-btn-ajoutpv' | translate}}\" tooltipPosition=\"top\"\n                                    (click)=\"addNewPointVentes()\" icon=\"pi pi-plus-circle\" class=\"p-button-info p-mr-2\">\n                                </p-button>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-pv>\n                        <tr>\n\n                            \n                            <td>{{pv.libellePoint}}</td>\n                            <td>{{pv.email}}</td>\n                            <td>{{pv.codeAgent}}</td>\n                            <td>{{pv.nomAgent}}</td>\n\n                            <td>\n                                <button pButton pRipple icon=\"pi pi-pencil\"\n                                    class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                                    (click)=\"updatepv(pv)\"></button>\n                                <button pButton pRipple icon=\"pi pi-trash\"\n                                    class=\"p-button-rounded p-button-warning p-mr-2\" (click)=\"deletepv(pv)\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n\n                </p-table>\n            </div>\n        </p-accordionTab>\n    </p-accordion>\n</div>\n\n\n<p-dialog [(visible)]=\"pointVenteDialog\" [style]=\"{width: '700px'}\" header=\"Ajout point de ventes\" [modal]=\"true\"\n    styleClass=\"p-fluid\">\n    <ng-template pTemplate=\"content\">\n        <hr>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6 md-lg-4\">               \n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"libellePoint\" [(ngModel)]=\"pointVente.libellePoint\" required\n                        autofocus class=\"p-inputtext-lg\" #libpoint=\"ngModel\" [ngClass]=\"{'ng-dirty': (libpoint.invalid && submittedd) || (libpoint.dirty && libpoint.invalid)}\" />\n                        <label for=\"libellePoint\">{{'enregistrement.th-libpv' | translate}}*</label>\n                    </span>         \n                        <small class=\"p-error\" *ngIf=\"(libpoint.invalid && submittedd) || (libpoint.dirty && libpoint.invalid)\">Libellé de point est obligatoire.</small>\n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"codeAgent\" [(ngModel)]=\"pointVente.codeAgent\" class=\"p-inputtext-lg\" required/>\n                    <label for=\"codeAgent\">{{'enregistrement.th-ca' | translate}}* </label>\n                </span>         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.codeAgent\">Code d'agent est obligatoire.</small>\n            </div>\n           \n        </div> \n        <br>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"nomAgent\" [(ngModel)]=\"pointVente.nomAgent\" class=\"p-inputtext-lg\" required />                    \n                    <label for=\"nomAgent\">{{'enregistrement.th-na' | translate}}* </label>\n                </span>         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.nomAgent\">Nom d'agent est obligatoire.</small>                \n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input id=\"emaila\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"pointVente.email\" class=\"p-inputtext-lg\"  pInputText type=\"email\" [email]=\"true\">\n                    <label for=\"emaila\">{{'enregistrement.lbl-email' | translate}}*</label>\n                </span>                         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.email\">L'email est\n                        obligatoire.</small>\n                        <small class=\"p-error\" *ngIf=\"submittedd && email.errors?.email\">email \n                            invalide.</small>                       \n            </div>\n           \n        </div>\n        <br>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"password\" pPassword id=\"password1\" #pass=\"ngModel\" [(ngModel)]=\"pointVente.motPasse\" class=\"p-inputtext-lg\" \n                     required  [ngClass]=\"{'ng-dirty': (pass.invalid && submittedd) || (pass.dirty && pass.invalid)}\" />\n                    <label for=\"password1\">{{'enregistrement.lbl-password' | translate}}*</label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"(pass.invalid && submittedd) || (pass.dirty && pass.invalid)\">mot de passe obligatoire.</small>\n                    <small class=\"p-error\" *ngIf=\"submittedd && validateRegexMdp()\">{{'error.msg-mdp-rgx' | translate}}</small>\n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"password\" pInputText id=\"motPasseConfirm\" [(ngModel)]=\"this.password\" class=\"p-inputtext-lg\" required />\n                    <label for=\"motPasseConfirm\">{{'enregistrement.lbl-confpassword' | translate}}*</label>\n                </span> \n                    <small class=\"p-error\" *ngIf=\"this.password!=pointVente.motPasse\">les mots de passe ne sont pas conforme.</small>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row\" style=\"float: right;\">\n            <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                (click)=\"hideDialog()\"></button> &nbsp;\n            <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                (click)=\"savepv()\"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n\n<!--confirm registration dialog-->\n\n<p-dialog [(visible)]=\"confirmationDialog\" [style]=\"{width: '700px'}\" header=\"{{'enregistrement.dialog-header-mail' | translate}}\" [modal]=\"true\"\n    styleClass=\"p-fluid\" >\n    <div style=\"text-align: center;\">\n        <i class=\"pi pi-inbox\" style=\"font-size: 4rem;\"></i>\n    </div>\n        <p>{{'enregistrement.dialog-p-mail' | translate}}</p>\n        <ng-template pTemplate=\"footer\">\n        <div class=\"row\" style=\"float: right;\">\n            \n            <button pButton  icon=\"pi pi-check\" label=\"OK\" styleClass=\"p-button-text\"\n                (click)=\"register()\"></button>\n        </div>\n    </ng-template>\n    \n</p-dialog>\n\n<!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Router } from '@angular/router';\nimport { Parampays } from 'src/app/models/parampays';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  submitted=true;\n  pointVente:any;\n  cont:Contribuable;\n  password: string;\n  paramPaysList: Array<Parampays> = []\n  constructor(private storage:LocalStorageService,\n    private router:Router,private paramPaysService: paramPaysService,\n    private messageService: MessageService, private contribuableService: contribuableService, \n    private spinner: NgxSpinnerService,private confirmationService: ConfirmationService,\n    private toastreService: ToastrService) { }\n\n  ngOnInit(): void {\n  this.pointVente=this.storage.retrieve(\"userConnect\");\n  this.cont=this.pointVente.contribuable;\n  this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n    console.log(data)\n    this.paramPaysList = data\n  })\n  console.log(this.pointVente)\n  console.log(this.cont)\n\n  }\n\n  updateUser(){\n    \n      this.confirmationService.confirm({    \n        message: 'Are you sure you want to update ' + this.pointVente.libellePoint + '?',\n        header: 'Confirm',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          debugger\n          this.spinner.show();\n          this.updatePv()\n          this.contribuableService.updateContribuable(this.cont.id,this.pointVente.contribuable).subscribe((data) => { \n            console.log(data)\n            this.spinner.hide();\n            this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de compte changer', life: 3000});   \n            this.storage.clear\n            this.storage.store(\"userConnect\",data)\n            console.log(this.storage)\n          }, error => {\n            this.messageService.add({severity:'error', summary: 'Erreur', detail: 'Un erreur apparu', life: 3000});  \n            this.spinner.hide();  \n          } \n          )\n        } \n          });\n          \n    }\n    updatePv(){\n      this.contribuableService.updatePointvente(this.pointVente.id,this.pointVente).subscribe()\n    }\n    \n\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card\" >\n    <p-accordion [style]=\"{'height':'100%'}\">\n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h6 Class=\"titles\">Paramétre de compte</h6>\n            </ng-template>\n\n            <ng-template pTemplate=\"right\">\n                <button pButton pRipple (click)=\"updateUser()\" label=\"Enregistrer\" icon=\"pi pi-save\"\n                class=\"p-button-success p-button-sm p-mr-2\" ></button>\n            </ng-template>\n        </p-toolbar>     \n        <p-tabView>\n            <p-tabPanel header=\"Contribuable\" >\n                <div class=\"card \">\n                    <p-accordion [style]=\"{'height':'100%'}\">\n                        <p-toolbar [style]=\"{'background-color':'rgb(67, 125, 161)','color':'white'}\">\n                            <ng-template pTemplate=\"left\">\n                                <h6 Class=\"titles\">Paramétre de contibuable</h6>\n                            </ng-template>\n                        </p-toolbar>   \n                        <hr>\n                    <div class=\"card-body \">\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"mf\" [(ngModel)]=\"pointVente.contribuable.matriculeFiscale\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                                     pInputText >\n                                    <label for=\"mf\">Matricule Fiscale </label>\n                                </span>  \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.matriculeFiscale\">Matricule Fiscale est obligatoire.</small>\n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"rc\" [(ngModel)]=\"pointVente.contribuable.raisonSocial\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"rc\">Raison Sociale</label>\n                                </span>       \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.raisonSocial\">Raison Sociale est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"regc\" [(ngModel)]=\"pointVente.contribuable.numRegistre\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"regc\">R. commerce</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.numRegistre\">Registre de commerce est obligatoire.</small>  \n                            </div>\n                        \n                        \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <p-inputMask id=\"tel\" mask=\"99-999-999\" [(ngModel)]=\"pointVente.contribuable.numtel\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\"></p-inputMask>\n                                    <label for=\"tel\">N°telephone</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.numtel\">N°Téléphone est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"emailc\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"pointVente.contribuable.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText type=\"email\" [email]=\"true\">\n                                    <label for=\"emailc\">Email</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.email\">L'email est\n                                        obligatoire.</small>\n                                        <small class=\"p-error\" *ngIf=\"submitted && email.errors?.email\">email \n                                            invalide.</small>                       \n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"adresse\" [(ngModel)]=\"pointVente.contribuable.adresse\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"adresse\">Adresse</label>\n                                </span>                          \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">                \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <p-dropdown [style]=\"{'width':'100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"pointVente.contribuable.paramPays\" \n                                    optionLabel=\"libPays\" inputId=\"pays\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"true\"> </p-dropdown>                            \n                                    <label for=\"pays\">Pays </label>\n                                </span>                          \n                            </div>\n                        </div>\n                    </div>\n                </p-accordion>\n                </div>\n            </p-tabPanel>\n            <p-tabPanel header=\"Agent\">\n\n                <div class=\"card \">\n                    <p-accordion [style]=\"{'height':'100%'}\">\n                    <p-toolbar  [style]=\"{'background-color':'rgb(67, 125, 161)','color':'white'}\">\n                    <ng-template pTemplate=\"left\">\n                        <h6 Class=\"titles\">Paramètre de point de vente</h6>\n                    </ng-template>\n                    </p-toolbar>\n                    <hr>\n                    <div class=\"card-body \">\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"ca\" [(ngModel)]=\"pointVente.codeAgent\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                                     pInputText>\n                                    <label for=\"ca\">Code agent </label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.codeAgent\">Code agent est obligatoire.</small>\n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"na\" [(ngModel)]=\"pointVente.nomAgent\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"na\">Nom agent</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.nomAgent\">Nom agent est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"libpv\" [(ngModel)]=\"pointVente.libellePoint\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"libpv\">Libelle point de vente</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.libellePoint\">Libelle est obligatoire.</small>  \n                            </div>\n                        \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"emailpv\" type=\"text\" [(ngModel)]=\"pointVente.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"emailpv\">Email</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.email\">Email est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div  class=\"form-group col-lg-6 p-2\"> \n                            <u [routerLink]=\"['/user/forgetsPwd']\"  style=\" color: #155fa8;\"  > Changer le mot de passe</u>\n                          </div>\n                        \n                        <!-- <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input type=\"password\" pPassword id=\"password\" [(ngModel)]=\"pointVente.motPasse\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\" required />\n                                    <label for=\"password\">Mot de passe*</label>\n                                </span>        \n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input type=\"password\" pInputText id=\"motPasseConfirm\" [(ngModel)]=\"this.password\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\" required />\n                                    <label for=\"motPasseConfirm\">Confirmation mot de passe*</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"this.password!=pointVente.motPasse\">les mots de passe ne sont pas conforme.</small>\n                            </div>\n                        </div>\n                        <br> -->\n                        \n                    </div>\n                    </p-accordion>\n                </div>\n            </p-tabPanel>\n        </p-tabView>\n       \n    \n\n</p-accordion>\n</div>\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n\n<!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { factureService } from 'src/app/services/facture.service';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Facture } from 'src/app/models/facture';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label, SingleDataSet, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip } from 'ng2-charts';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ParamProduit } from 'src/app/models/paramProduit';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n  pv:any;\n  factureList:Array<Facture>=[]\n  TotalFacts:Number;\n  TotalProduits:Number;\n  factByState: any;\n  factByType: any;\n  factByMonth: any;\n  prodByGt: any;\n  constructor(private factureService:factureService,private ParamProduitService:paramProduitService, private storage:LocalStorageService, \n    private spinner: NgxSpinnerService) {\n      monkeyPatchChartJsLegend();\n      monkeyPatchChartJsTooltip();\n     }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.pv=this.storage.retrieve((\"userConnect\"));\n    this.factureByState();\n    this.factureByMonth();\n    this.produitsByGt();\n  }\n \n  factureByState(){  \n    this.factureService.getAllFactures(this.pv.codeAgent).subscribe((data:Facture[])=>{     \n       this.factureList=data\n       this.TotalFacts = data.length\n       this.factByState = {\n        labels:['Enregister','Valider','EN_ATTENTE','ENVOYER'],\n        datasets:[\n          { data: [this.factureList.filter(f => f.state == \"ENREGISTRER\").length,this.factureList.filter(f => f.state == \"VALIDER\").length,this.factureList.filter(f => f.state == \"EN_ATTENTE\").length,this.factureList.filter(f => f.state == \"ENVOYER\").length],\n            backgroundColor: [\"#B9FFC8\", \"#9CCDFC\", \"#FD968A\"],\n            hoverBackgroundColor: [\"#B9FFC8\", \"#9CCDFC\", \"#FD968A\"]\n          }]}\n          this.factByType = {\n            labels:['Vente','Avoir','Acompte'],\n            datasets:[\n              { data: [this.factureList.filter(f => f.typFact == \"Vente\").length,this.factureList.filter(f => f.typFact == \"Avoir\").length,this.factureList.filter(f => f.typFact == \"Acompte\").length],\n                backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n                hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n              }]}\n       this.spinner.hide();\n       setTimeout(() => {\n        this.spinner.hide();\n       },4000);\n    })\n \n    }\n\n factureByMonth(){\n   this.factureService.getFactByMonth().subscribe(monthlyfacts => {\n    this.factByMonth ={\n      labels:['Jan','Fev','Mar','Avr','Mai','Jua','Jui','Aou','sep','oct','nov','dec'],\n      datasets:[\n        { label: 'factures par mois',\n          data: monthlyfacts,\n          fill:true,\n          borderColor: [\"#36A2EB\"],\n          backgroundColor: 'rgba(54,162,235,0.2)',\n          tension: .4,\n        }]}\n  });\n }\n\n produitsByGt(){\n   this.ParamProduitService.getMyProduits(this.pv.contribuable.id).subscribe((data : ParamProduit[]) => {\n    this.TotalProduits = data.length\n    let gtlabels = new Set();\n    data.forEach(e => {\n      gtlabels.add(e.groupeTaxation.libGrp)\n    });\n    let uniquegtlabelss = [...new Set(gtlabels)];\n    let prodNbList:Array<Number>=[]\n    for(let i = 0; i < uniquegtlabelss.length;i++){\n    prodNbList.push(data.filter(p => p.groupeTaxation.libGrp == uniquegtlabelss[i]).length)\n    };\n    console.log(gtlabels)\n       this.prodByGt = {\n        labels:uniquegtlabelss,\n        datasets:[\n          { label:'produit par tax', \n            data: prodNbList,\n            backgroundColor: [\"#B9FFC8\", \"#9CCDFC\",\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n            hoverBackgroundColor: [\"#B9FFC8\", \"#9CCDFC\",\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n          }]}\n       })\n   \n }\n\n\n\n\n\n}\n\n\n","<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n        <h5 class=\"p-m-0\">Statistiques des factures</h5>\n    </ng-template>\n</p-toolbar>\n\n\n<h6>&nbsp;Nombres des factures total = {{TotalFacts}}</h6>\n<div class=\"row\">\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"doughnut\" [data]=\"factByState\" width=\"550px\" [responsive]=\"true\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"doughnut\" [data]=\"factByType\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"line\" [data]=\"factByMonth\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"bar\" [data]=\"factByMonth\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n</div>\n\n\n<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n        <h5 class=\"p-m-0\">Statistiques des produits</h5>\n    </ng-template>\n</p-toolbar>\n<h6>&nbsp;Nombres des produits total = {{TotalProduits}}</h6>\n\n<div class=\"col\" style=\"display: flex;\">\n    <div class=\"card m-9\">\n        <p-chart type=\"polarArea\" [data]=\"prodByGt\" width=\"500px\" responsive=\"true\"></p-chart>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n\n@Component({\n  selector: 'app-user-verification',\n  templateUrl: './user-verification.component.html',\n  styleUrls: ['./user-verification.component.scss']\n})\nexport class UserVerificationComponent implements OnInit {\n\n  constructor(private contribuableService: contribuableService, private router: Router,\n    private activatedRouter:ActivatedRoute, private messageService: MessageService,\n    private toastreService: ToastrService, private spinner: NgxSpinnerService) {\n     \n       console.log(this.router.getCurrentNavigation().extras.state);\n      }\n  contribuable: Contribuable;\n  submitted: boolean;\n\n  ngOnInit(): void {\n    this.contribuable = history.state;\n  }\n\n  validate() {\n    this.submitted = true\n    if (!this.contribuable.verificationCode) {\n      return;\n    }\n    this.spinner.show();\n    this.contribuableService.userVerification(this.contribuable).subscribe((data) => {\n      setTimeout(()=>{\n        this.toastreService.success(\"Compte validé avec succée!\");\n      },20000);\n      this.router.navigate(['/user/login']).then(()=>{\n        this.toastreService.success(\"Compte validé avec succée!\");\n      });\n    }, error => {\n      this.spinner.hide()\n      console.log(error);\n      this.toastreService.error(error.error.message);\n    }\n    )\n  }\n\n\n}\n","<div class=\"wrapped-div\">\n    \n    <div class=\"tab-header\">\n        <h2>{{'validation.titre' | translate}}</h2>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n\n            <div class=\"login-logo\">\n                <i class=\"fa fa-envelope fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"login-logo\">\n                <a href=\"\" class=\"cls-text-color\"><b class=\"cls-text-color\">{{'validation.lbl-code' | translate}}</b></a>\n            </div>\n            \n                <div class=\"form-group \">\n                    <input class=\"form-control\" id=\"codepin\" [(ngModel)]=\"contribuable.verificationCode\" type=\"text\" pInputText>\n                    <small class=\"p-error\" *ngIf=\"submitted && !contribuable.verificationCode\">\n                        <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> &nbsp; codepin est obligatoire.</small>\n                    \n                </div>\n                <div style=\"text-align: center; margin-bottom: 20px;\">\n                    <button (click)=\"validate()\" class=\"btn\">{{'validation.btn-valider' | translate}}</button>\n                </div>\n            \n        </div>\n    </div>\n\n\n</div>\n\n<!-- Spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlServer: 'http://localhost:8059/',\r\n  defaultLang: 'fr'\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}