{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/detailsfacture.ts","webpack:///src/app/models/groupetaxation.ts","webpack:///src/app/models/paramProduit.ts","webpack:///src/app/models/pointvente.ts","webpack:///src/app/models/searchFacture.ts","webpack:///src/app/models/subTotauxFacture.ts","webpack:///src/app/services/authentification.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/contribuable.service.ts","webpack:///src/app/services/facture.service.ts","webpack:///src/app/services/grpTaxation.service.ts","webpack:///src/app/services/paramPays.service.ts","webpack:///src/app/services/paramProduit.service.ts","webpack:///src/app/util/AuthGaurdService.ts","webpack:///src/app/util/AuthInterceptorService.ts","webpack:///src/app/util/token-storage.service.ts","webpack:///src/app/views/changement-password/changement-password.component.ts","webpack:///src/app/views/changement-password/changement-password.component.html","webpack:///src/app/views/client/client.component.ts","webpack:///src/app/views/client/client.component.html","webpack:///src/app/views/contribuable/contribuable.component.ts","webpack:///src/app/views/contribuable/contribuable.component.html","webpack:///src/app/views/dashboard/dashboard-overview/dashboard-overview.component.ts","webpack:///src/app/views/facture-consultation/facture-consultation.component.ts","webpack:///src/app/views/facture-consultation/facture-consultation.component.html","webpack:///src/app/views/facture/facture.component.ts","webpack:///src/app/views/facture/facture.component.html","webpack:///src/app/views/general-page-router/authentification.users.ts","webpack:///src/app/views/general-page-router/authentification.users.html","webpack:///src/app/views/group-taxation/group-taxation.component.ts","webpack:///src/app/views/group-taxation/group-taxation.component.html","webpack:///src/app/views/layout/footer/footer.component.ts","webpack:///src/app/views/layout/footer/footer.component.html","webpack:///src/app/views/layout/header/header.component.ts","webpack:///src/app/views/layout/header/header.component.html","webpack:///src/app/views/layout/maincontent/maincontent.component.ts","webpack:///src/app/views/layout/maincontent/maincontent.component.html","webpack:///src/app/views/layout/menu/menu.component.ts","webpack:///src/app/views/layout/menu/menu.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/param-pays/param-pays.component.ts","webpack:///src/app/views/param-pays/param-pays.component.html","webpack:///src/app/views/param-produit/param-produit.component.ts","webpack:///src/app/views/param-produit/param-produit.component.html","webpack:///src/app/views/password-oublie/password-oublie.component.ts","webpack:///src/app/views/password-oublie/password-oublie.component.html","webpack:///src/app/views/register/register.component.ts","webpack:///src/app/views/register/register.component.html","webpack:///src/app/views/settings/settings.component.ts","webpack:///src/app/views/settings/settings.component.html","webpack:///src/app/views/statistics/statistics.component.ts","webpack:///src/app/views/statistics/statistics.component.html","webpack:///src/app/views/user-verification/user-verification.component.ts","webpack:///src/app/views/user-verification/user-verification.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","children","canActivate","AppRoutingModule","forRoot","imports","AppComponent","translate","title","addLangs","setDefaultLang","selector","templateUrl","styleUrls","avatarColors","AppModule","provide","useClass","multi","useValue","loader","useFactory","httpTranslateLoader","deps","progressBar","colors","declarations","schemas","providers","bootstrap","http","Detailsfacture","groupeTaxation","paramProduit","Groupetaxation","ParamProduit","Pointvente","SearchFacture","subTotauxFacture","API_URL","urlServer","authentificationService","getPointVentes","matricule_fiscale","get","sendPwdChangeCode","pointVente","post","updatePassword","newPwd","codePoint","username","password","console","log","pipe","userData","sessionStorage","setItem","tokenStr","jwt","jwttoken","user","getItem","providedIn","clientService","getClient","matFC","getMyClients","idc","postClient","updateClient","client","put","deleteClient","contribuableService","postContribuable","contribuable","validateContribuable","ChangeState","userVerification","getAll","getAllContribuables","matF","updateContribuable","updatePointvente","pv","factureService","getFactures","codeAgent","getAllFactures","getFactureByNumFact","numFact","addFacture","facture","validateFacture","deleteFacture","rechercheFactures","searchFact","getFactByMonth","grpTaxationService","getGrpTaxations","postGrpTaxation","updateGrpTax","deletetgrpTax","paramPaysService","getParamPays","postParamPays","parampays","deletetParam","paramProduitService","getparamProduits","postParamProduit","paramproduit","updateParam","getMyProduits","AuthGaurdService","router","aithService","route","state","isUserLoggedIn","navigate","TOKEN_HEADER_KEY","CONTENT_TYPE_KEY","ACCEPT_KEY","AuthInterceptor","next","clone","setHeaders","handle","TOKEN_KEY","USER_KEY","TokenStorageService","window","clear","token","removeItem","JSON","stringify","parse","ChangementPasswordComponent","formBuilder","storage","messageService","serviceToken","toastreService","local","showBack","pointVenteList","submitted","selectedPointVente","history","initForm","loginForm","group","required","confirmPassword","invalid","controls","value","subscribe","data","add","severity","summary","detail","life","success","error","message","setErrors","mismatch","updatepwd","onPasswordChanges","cancelUpdates","ClientComponent","spinner","confirmationService","clientList","cont","retrieve","refresh","matriculeFiscaleClient","push","nom","email","addresse","numTel","clientDialog","show","hide","cli","updateDialog","cl","confirm","acceptLabel","rejectLabel","header","icon","accept","ContribuableComponent","contribuableList","contr","matriculeFiscale","activDialog","event","DashboardOverviewComponent","FactureConsultationComponent","factureList","staticList","stateList","etat","setTimeout","today","Date","maxDate","setDate","getDate","selectedStateList","selectedStaticList","dateRange","fct","ngOnInit","fctDialog","typFact","numeroFacture","minDate","clearSearch","factureSearch","FactureComponent","detailsFactureList","paramPaysList","display","toggle","subtotauxDisabled","validaDisabled","clientDisabled","montant","montantHT","montantTTC","order","subTotauxFactureList","checkedclient","loadSpinner","isSaved","currentcont","devise","codeDevise","contpays","paramPays","momentVariable","detailsDialog","submittedD","datFactInit","factAvoirDate","isValid","factureAvoir","length","montantTOTALS","montantTotal","montantTaxSpec","detailsFacture","groupeTaxationSelected","orderProduit","toString","results","filter","result","groupetaxationItems","ParamProduitItems","pp","groupeTaxationLib","libGrp","refProduit","codeProduit","libProduit","prixUnit","prixUnitaire","trim","quantite","findIndexById","val","list","index","i","codeGrp","n","charAt","Math","floor","random","filtered","query","item","toLowerCase","indexOf","filteredParamProduit","FactureAvoirDialog","numfactureAvoir","format","pattern","test","target","replace","onChangeTyp","authentificationUsers","styles","GroupTaxationComponent","grpTaxList","grpTax","codeGrpTax","taxTva","grpTaxDialog","grp","FooterComponent","HeaderComponent","credentials","libellePoint","items","label","nomAgent","routerLink","command","deconnecter","MaincontentComponent","MenuComponent","toastr","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","prises","LoginComponent","adminMail","compose","adminPassword","disabled","authentification","store","enable","verifNif","authentificationClient","ParamPaysComponent","codePays","libPays","langue","paramDialog","prm","ParamProduitComponent","ParamProduitService","paramProduitList","paramProduits","PasswordOublieComponent","matFiscale","sendCode","RegisterComponent","translateService","telmask","raisonSocial","numRegistre","numtel","pointVenteDialog","submittedd","confirmationDialog","id_list","motPasse","validateRegexMdp","some","createId","chars","instant","strongRegex","RegExp","SettingsComponent","updatePv","StatisticsComponent","factureByState","factureByMonth","produitsByGt","TotalFacts","factByState","labels","datasets","f","backgroundColor","hoverBackgroundColor","factByType","monthlyfacts","factByMonth","fill","borderColor","tension","TotalProduits","gtlabels","Set","forEach","uniquegtlabelss","prodNbList","p","prodByGt","UserVerificationComponent","activatedRouter","getCurrentNavigation","extras","verificationCode","validate","environment","production","defaultLang","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardOverviewComponent } from './views/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { authentificationUsers } from './views/general-page-router/authentification.users';\r\nimport { MaincontentComponent } from './views/layout/maincontent/maincontent.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { FactureComponent } from './views/facture/facture.component';\r\nimport { FactureConsultationComponent } from './views/facture-consultation/facture-consultation.component';\r\nimport { ParamPaysComponent } from './views/param-pays/param-pays.component';\r\nimport { GroupTaxationComponent } from './views/group-taxation/group-taxation.component';\r\nimport { ContribuableComponent } from './views/contribuable/contribuable.component';\r\nimport { AuthGaurdService } from './util/AuthGaurdService';\r\nimport { UserVerificationComponent } from './views/user-verification/user-verification.component';\r\nimport { ParamProduitComponent } from './views/param-produit/param-produit.component';\r\nimport { ChangementPasswordComponent } from './views/changement-password/changement-password.component';\r\nimport { PasswordOublieComponent } from './views/password-oublie/password-oublie.component';\r\nimport { SettingsComponent } from './views/settings/settings.component';\r\nimport { ClientComponent } from './views/client/client.component';\r\nimport { StatisticsComponent } from './views/statistics/statistics.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',redirectTo:'user/login',pathMatch:'full'},\r\n  {\r\n    path: 'user', component: authentificationUsers,\r\n    children: [\r\n      { path: 'login', component: LoginComponent },\r\n      { path:'register',component: RegisterComponent },\r\n      { path:'verification',component: UserVerificationComponent },\r\n      { path:'register',component: RegisterComponent },\r\n      { path:'changePwd',component: ChangementPasswordComponent },\r\n      { path:'forgetsPwd',component: PasswordOublieComponent }\r\n\r\n      \r\n    ]\r\n  },\r\n  {\r\n    path: 'dashboard', component:MaincontentComponent,canActivate:[AuthGaurdService] ,\r\n    children:[\r\n      { path:'facture',component: FactureComponent ,canActivate:[AuthGaurdService] },\r\n      { path:'historiqueFacture',component: FactureConsultationComponent ,},\r\n      { path:'contribuable',component: ContribuableComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'grpTaxation',component: GroupTaxationComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'parampays',component: ParamPaysComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'paramproduit',component: ParamProduitComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'settings',component: SettingsComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'client',component: ClientComponent ,canActivate:[AuthGaurdService]},\r\n      { path:'statistics',component: StatisticsComponent ,canActivate:[AuthGaurdService]}\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'FACTURATION-FRONT';\r\n\r\n  constructor(private translate: TranslateService){\r\n    this.translate.addLangs(['fr']);\r\n    this.translate.setDefaultLang('fr');\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport LocaleFr from '@angular/common/locales/fr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport {ContextMenuModule} from 'primeng/contextmenu';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ToolbarModule} from 'primeng/toolbar';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2ImgMaxModule } from 'ng2-img-max';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport {NgxImageCompressService} from 'ngx-image-compress';\r\nimport { AuthInterceptor } from './util/AuthInterceptorService';\r\nimport { FooterComponent } from './views/layout/footer/footer.component';\r\nimport { HeaderComponent } from './views/layout/header/header.component';\r\nimport { MaincontentComponent } from './views/layout/maincontent/maincontent.component';\r\nimport { MenuComponent } from './views/layout/menu/menu.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { authentificationUsers } from './views/general-page-router/authentification.users';\r\nimport { DashboardOverviewComponent } from './views/dashboard/dashboard-overview/dashboard-overview.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\nimport { FactureComponent } from './views/facture/facture.component';\r\nimport { FactureConsultationComponent } from './views/facture-consultation/facture-consultation.component';\r\nimport { ContribuableComponent } from './views/contribuable/contribuable.component';\r\nimport { ParamPaysComponent } from './views/param-pays/param-pays.component';\r\nimport { GroupTaxationComponent } from './views/group-taxation/group-taxation.component';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {FieldsetModule} from 'primeng/fieldset';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport { UserVerificationComponent } from './views/user-verification/user-verification.component';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { ChangementPasswordComponent } from './views/changement-password/changement-password.component';\r\nimport { BlockUIModule } from 'primeng/blockui';\r\nimport { ParamProduitComponent } from './views/param-produit/param-produit.component';\r\nimport { PasswordOublieComponent } from './views/password-oublie/password-oublie.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { SettingsComponent } from './views/settings/settings.component';\r\nimport { RecaptchaModule } from 'ng-recaptcha';\r\nimport { AvatarModule } from 'ngx-avatar';\r\nimport { ClientComponent } from './views/client/client.component';\r\nimport { StatisticsComponent } from './views/statistics/statistics.component';\r\nconst avatarColors = [\"2c3e50\",\"95a5a6\",\"#f39c12\",\"#1abc9c\"];\r\nregisterLocaleData(LocaleFr, 'fr');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MaincontentComponent,\r\n    MenuComponent,\r\n    LoginComponent,\r\n    authentificationUsers,\r\n    DashboardOverviewComponent,\r\n    RegisterComponent,\r\n    FactureComponent,\r\n    FactureConsultationComponent,\r\n    ContribuableComponent,\r\n    ParamPaysComponent,\r\n    GroupTaxationComponent,\r\n    UserVerificationComponent ,\r\n    ParamProduitComponent  ,\r\n    UserVerificationComponent ,\r\n    ChangementPasswordComponent,\r\n    PasswordOublieComponent,\r\n    SettingsComponent,\r\n    ClientComponent,\r\n    StatisticsComponent  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    TableModule,\r\n    CalendarModule,\r\n\t\tSliderModule,\r\n\t\tDialogModule,\r\n\t\tMultiSelectModule,\r\n\t\tContextMenuModule,\r\n\t\tDropdownModule,\r\n    ButtonModule,\r\n    ToolbarModule,\r\n\t\tToastModule,\r\n    InputTextModule,\r\n    ProgressBarModule,\r\n    FormsModule,\r\n    FileUploadModule,\r\n    ConfirmDialogModule,\r\n    Ng2ImgMaxModule,\r\n    NgxWebstorageModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      progressBar: true\r\n    }),\r\n    ReactiveFormsModule,\r\n    TooltipModule,\r\n    InputNumberModule,\r\n    InputMaskModule,\r\n    InputSwitchModule,\r\n    ChartsModule,\r\n    ChartModule,\r\n    ScrollPanelModule,\r\n    PanelModule,\r\n    AccordionModule,\r\n    CheckboxModule,\r\n    FieldsetModule,\r\n    PasswordModule,\r\n    ProgressSpinnerModule,\r\n    BlockUIModule,\r\n    NgxSpinnerModule,\r\n    ToggleButtonModule,\r\n    MenuModule,\r\n    RecaptchaModule,\r\n    AvatarModule.forRoot({\r\n      colors : avatarColors\r\n    }),\r\n    AutoCompleteModule,\r\n    TabViewModule\r\n    \r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [ \r\n    MessageService,\r\n    NgxImageCompressService,\r\n    ConfirmationService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: LOCALE_ID, useValue: \"fr-FR\" }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function httpTranslateLoader(http: HttpClient){\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n","import { Groupetaxation } from './groupetaxation';\nimport { ParamProduit } from './paramProduit';\n\nexport class Detailsfacture {\n       constructor(){\n\n         this.groupeTaxation=new Groupetaxation();\n             this.paramProduit=new ParamProduit();\n       }\n   \n   orderProduit?:string ;\n   libProduit ?:string ;\n   refProduit?:string ;\n   quantite?:string ;\n   prixUnit ?:string ;\n   taxSpec ?:string ;\n   groupeTaxation?:Groupetaxation;\n   groupeTaxationLib?:string;\n   paramProduit?:ParamProduit;\n   paramProduitLib?:string;\n   montantHT?:number;\n   montantTTC?:number;\n   id?:Number\n    \n}\n","import { Parampays } from './parampays';\n\nexport class Groupetaxation {\n\n\tid ?:Number;\n    codeGrpTax ?:string;\n\tlibGrp ?:string ;\t\n\ttaxTva ?:string;\n\tparamPays?:Parampays;\n\tidgt?:string;\n}\n","import { Contribuable } from './contribuable';\r\nimport { Groupetaxation } from './groupetaxation';\r\n\r\nexport class ParamProduit {\r\n    id?:Number;\r\n    codeProduit?:string;\r\n    libProduit?:string;\r\n    prixUnitaire?:string\r\n    contribuable?:Contribuable;\r\n    groupeTaxation?:Groupetaxation\r\n}","export class Pointvente {\n\n\t email?:string ;\n     codeAgent?:string ;\n\t nomAgent?:string ;\t\n\t libellePoint?:string ;\n\t actif?:boolean ;\n\t id_list?:string;\n\t motPasse?:string;\n\t\n}\n","export class SearchFacture {\r\n    numFact ?:string;\r\n\ttypFact ?:string ;\t\r\n\tetat ?:any;\r\n\tminDate?:string;\r\n\tmaxDate?:string;\r\n}\r\n","export class subTotauxFacture{\r\n    \r\n    codeGrp?:string ;\t\r\n\ttotalHt ?:string;\t\r\n\ttotalTax ?:string;\r\n\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Pointvente } from '../models/pointvente';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class authentificationService {\r\n     \r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getPointVentes= (matricule_fiscale:string): Observable<Pointvente[]> => {\r\n\r\n        return this.http.get<Pointvente[]>(API_URL + 'PointVentes/getPointVente/'+matricule_fiscale);\r\n    }\r\n    \r\n\r\n    authentification(username:string,password:string)   {\r\n        console.log(username)\r\n        console.log(password)\r\n        return this.http.post<any>(API_URL + 'Contribuable/login', {username,password},{}).pipe(\r\n           map(userData =>{\r\n               console.log(userData)\r\n                 sessionStorage.setItem(\"username\",username);\r\n                 let tokenStr=\"Bearer \"+userData.jwt.jwttoken;\r\n                 sessionStorage.setItem(\"token\",tokenStr);\r\n                 return userData;\r\n                 \r\n           })\r\n        );\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n\r\n        let user =sessionStorage.getItem(\"username\");\r\n\r\n        return !(user===null)\r\n    }\r\n    \r\n    sendPwdChangeCode= (pointVente:Pointvente): Observable<any> => {\r\n\r\n        return this.http.post<Pointvente>(API_URL + 'Contribuable/sendPwdChangeCode/',pointVente);\r\n    }\r\n\r\n    updatePassword= (code:string,newPwd:string,codePoint:string): Observable<any> => {\r\n\r\n        return this.http.post<any>(API_URL + 'Contribuable/updatePassword',{code,newPwd,codePoint});\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Client } from '../models/client';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class clientService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getClient = (matFC:string): Observable<Client> => {\r\n        return this.http.get<Client>(API_URL + 'Client/getClient/'+matFC);\r\n    }\r\n\r\n    getMyClients = (idc:Number): Observable<Client[]> => {\r\n     \r\n        return this.http.get<Client[]>(API_URL + 'Client/getAllClientsByCont/'+idc);\r\n    }\r\n\r\n    postClient = (matFC: Client): Observable<any> => {\r\n        return this.http.post<Client>(API_URL + 'Client/addClient', matFC);\r\n    }\r\n    \r\n    updateClient =  (id:Number, client: Client): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'Client/updateClient/' + id, client);\r\n    }\r\n\r\n    deleteClient = (id:Number): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'Client/deleteClient/' + id);\r\n    }\r\n    \r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Contribuable } from '../models/contribuable';\r\nimport { Pointvente } from '../models/pointvente';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class contribuableService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    postContribuable = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/addContribuable', contribuable);\r\n    }\r\n    validateContribuable = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/validateContribuable', contribuable);\r\n    }\r\n    ChangeState = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.put<Contribuable>(API_URL + 'Contribuable/changeState', contribuable);\r\n    }\r\n    userVerification = (contribuable: Contribuable): Observable<any> => {\r\n        return this.http.post<Contribuable>(API_URL + 'Contribuable/validateContribuable' ,contribuable)\r\n    }\r\n    getAll = (): Observable<Contribuable[]> => {\r\n        return this.http.get<Contribuable[]>(API_URL + 'Contribuable/getall');\r\n    }\r\n    getAllContribuables = (matF:string): Observable<Contribuable> => {\r\n        return this.http.get<Contribuable>(API_URL + 'Contribuable/getContribuableList/'+matF);\r\n    }\r\n    updateContribuable = (id:Number, contribuable: Contribuable): Observable<any> => {\r\n        return this.http.put<any>(API_URL + 'Contribuable/updateContribuable/'+id, contribuable);\r\n    }\r\n    updatePointvente = (id:Number, pv: Pointvente): Observable<any> => {\r\n        return this.http.put<any>(API_URL + 'PointVentes/updatePointvente/'+id, pv);\r\n    }\r\n}","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Contribuable } from '../models/contribuable';\r\nimport { Facture } from '../models/facture';\r\nimport { Pointvente } from '../models/pointvente';\r\nimport { SearchFacture } from '../models/searchFacture';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class factureService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getFactures = (codeAgent:String): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<Facture[]>(API_URL + 'Facture/getFactureByCodeAgent/'+codeAgent);\r\n    }\r\n    getAllFactures = (codeAgent:String): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<Facture[]>(API_URL + 'Facture/getAllFactureByCodeAgent/'+codeAgent);\r\n    }\r\n    getFactureByNumFact = (numFact:String): Observable<Facture> => {\r\n     \r\n        return this.http.get<Facture>(API_URL + 'Facture/getFactureByNumFact/'+numFact);\r\n    }\r\n    addFacture = (facture: Facture): Observable<any> => {\r\n        return this.http.post<Facture>(API_URL + 'Facture/addFacture', facture);\r\n    }\r\n    validateFacture = (numFact: string): Observable<any> => {\r\n        return this.http.post<any>(API_URL + 'Facture/validateFacture/'+numFact,null);\r\n    }\r\n    deleteFacture = (id: Number): Observable<any> => {\r\n        return this.http.delete<any>(API_URL + 'Facture/deleteFacture/'+id);\r\n    }\r\n    rechercheFactures = (searchFact:SearchFacture): Observable<Facture[]> => {\r\n     \r\n        return this.http.post<Facture[]>(API_URL + 'Facture/rechercheFacture', searchFact);\r\n    }\r\n    getFactByMonth = (): Observable<Facture[]> => {\r\n     \r\n        return this.http.get<any>(API_URL + 'Facture/countbymonth');\r\n    }\r\n/* \r\n    rechercheFactures = (numFact:string, typFact:string): Observable<Facture[]> => {\r\n     let params = new HttpParams()\r\n        params = params.append('numFact', numFact)\r\n        params = params.append('typFact',typFact)\r\n\r\n        return this.http.get<Facture[]>(API_URL + 'Facture/rechercheFacture',{params});\r\n    }\r\n */\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Groupetaxation } from '../models/groupetaxation';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class grpTaxationService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getGrpTaxations = (): Observable<Groupetaxation[]> => {\r\n\r\n        return this.http.get<Groupetaxation[]>(API_URL + 'GrpTax/getGrpTaxation');\r\n    }\r\n\r\n    postGrpTaxation = (Groupetaxation: Groupetaxation): Observable<any> => {\r\n        return this.http.post<Groupetaxation>(API_URL + 'GrpTax/addGrpTaxation', Groupetaxation);\r\n    }\r\n\r\n    updateGrpTax = (id:Number, Groupetaxation: Groupetaxation): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'GrpTax/updateGrpTaxation/' + id, Groupetaxation);\r\n    }\r\n\r\n    deletetgrpTax = (id:Number): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'GrpTax/deleteGrp/' + id);\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Parampays } from '../models/parampays';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class paramPaysService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getParamPays = (): Observable<Parampays[]> => {\r\n\r\n        return this.http.get<Parampays[]>(API_URL + 'ParamPay/getParamPays');\r\n    }\r\n    \r\n    postParamPays = (parampays: Parampays): Observable<any> => {\r\n        return this.http.post<Parampays>(API_URL + 'ParamPay/addParamPays', parampays);\r\n    }\r\n\r\n    deletetParam = (code:string): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'ParamPay/deletePrmPays/' + code);\r\n    }\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Groupetaxation } from '../models/groupetaxation';\r\nimport { ParamProduit } from '../models/paramProduit';\r\n\r\nconst API_URL = environment.urlServer;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class paramProduitService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n   \r\n    getparamProduits = (): Observable<ParamProduit[]> => {\r\n\r\n        return this.http.get<ParamProduit[]>(API_URL + 'ParamProduits/getParamProduit');\r\n    }\r\n    postParamProduit = (paramproduit: ParamProduit): Observable<any> => {\r\n        return this.http.post<ParamProduit>(API_URL + 'ParamProduits/addParamProduit', paramproduit);\r\n    }\r\n\r\n    updateParam = (id:Number,paramproduit: ParamProduit): Observable<boolean> => {\r\n        return this.http.put<boolean>(API_URL + 'ParamProduits/updateParamProduit/' + id,paramproduit);\r\n    }\r\n\r\n    deletetParam = (code:string): Observable<boolean> => {\r\n        return this.http.delete<boolean>(API_URL + 'ParamProduits/deleteParamProduit/' + code);\r\n    }\r\n\r\n    getMyProduits = (id:Number): Observable<ParamProduit[]> => {\r\n\r\n        return this.http.get<ParamProduit[]>(API_URL + 'ParamProduits/getmyproduits/'+id);\r\n    }\r\n\r\n   \r\n}","import { Injectable } from '@angular/core';\r\n import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { authentificationService } from '../services/authentification.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGaurdService implements CanActivate {\r\n\r\n    constructor(private router : Router,private aithService:authentificationService) {\r\n    }\r\n    canActivate (route:ActivatedRouteSnapshot,state:RouterStateSnapshot) {\r\n\r\n       if(this.aithService.isUserLoggedIn())\r\n        return true;\r\n        this.router.navigate(['user/login'])\r\n        return false;\r\n    }\r\n    \r\n\r\n   \r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nimport { map, catchError } from 'rxjs/operators';\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\nconst CONTENT_TYPE_KEY = 'Content-Type';\r\nconst ACCEPT_KEY = 'Accept';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  \r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n  //  const token = this.token.getToken();\r\n    if (sessionStorage.getItem('token') != null && sessionStorage.getItem('username')!=null) {\r\n     req = req.clone({\r\n        setHeaders: {\r\n         // 'Content-Type' : 'application/json; charset=utf-8',\r\n          'Accept'       : 'application/json',\r\n          'Authorization':  sessionStorage.getItem('token')\r\n          //'Access-Control-Allow-Origin': '*'\r\n        },\r\n      });\r\n      /*\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n      authReq = req.clone({ headers: req.headers.set(CONTENT_TYPE_KEY, 'application/json') });\r\n      authReq = req.clone({ headers: req.headers.set(ACCEPT_KEY, 'application/json') });\r\n      */\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { authentificationService } from 'src/app/services/authentification.service';\nimport { MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-changement-password',\n  templateUrl: './changement-password.component.html',\n  styleUrls: ['./changement-password.component.scss']\n})\nexport class ChangementPasswordComponent implements OnInit {\n  loginForm: FormGroup;\n  contribuable :Contribuable;\n  showBack: boolean = true;\n  attribute: any;\n  pointVenteList :Array<Pointvente>=[]\n  submitted:boolean=false;\n  selectedPointVente :Pointvente\n  constructor(private formBuilder: FormBuilder,\n    private storage: LocalStorageService,\n    private router: Router,\n    private messageService: MessageService,\n    private serviceToken:TokenStorageService,\n    private authentificationService:authentificationService,\n    private toastreService: ToastrService,\n    private local:LocalStorageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.selectedPointVente = history.state;\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      code: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  \n\n  updatepwd(){\n    this.submitted=true\n    if (this.loginForm.invalid)\n    return ;\n    let pv:string;\n    pv='fhfh'\n    this.authentificationService.\n             updatePassword(this.loginForm.controls['code'].value,this.loginForm.controls['password'].value ,this.selectedPointVente.codeAgent).\n             subscribe((data)=>{\n              this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Mot de passe réinitialiser avec succes', life: 3000 });\n              this.router.navigate(['/user/login']).then(()=>{\n                this.toastreService.success(\"Mot de passe réinitialiser avec succes!\");\n              });\n             },error=>{\n              this.toastreService.error(error.error.message);\n\n             })\n      \n\n     \n\n  }\n  cancelUpdates(){\n\n    this.router.navigate(['/user/login']); \n  }\n\n  onPasswordChanges(){\n     if (this.loginForm.controls['password'].value == this.loginForm.controls['confirmPassword'].value){\n       this.loginForm.controls['confirmPassword'].setErrors(null)\n     }else{\n      this.loginForm.controls['confirmPassword'].setErrors({mismatch:true})\n     }\n\n  }\n\n  get f(){\n    return this.loginForm.controls;\n  }\n  \n}\n","<div class=\"wrapped-div\">\n    <div class=\"tab-header\">\n      <h2>Réinitialiser votre mot de passe </h2>\n    </div>\n  \n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">  \n      <div class=\"login-logo\">\n        <i class=\"fa fa-lock fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n      </div>   \n      <form [formGroup]=\"loginForm\" class=\"mb-6\" autocomplete=\"off\" (ngSubmit)=\"updatepwd()\">\n      \n        <div class=\"form-group \">\n          <input type=\"text\" class=\"form-control\"  required     placeholder=\"Code de récuperation\" formControlName=\"code\">\n          <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['code'].errors.required\">Le code de récuperation est\n            obligatoire.\n          </span>\n        </div>\n        <div class=\"form-group \">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Nouveau Mot de passe\"\n             formControlName=\"password\" (change)=\"onPasswordChanges()\">\n             <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['password'].errors.required\">Le nouveau mot de passe est\n              obligatoire.</span>\n          </div>\n          <div class=\"form-group \">\n            <input type=\"password\" class=\"form-control\" placeholder=\"Confirmation Mot de passe\" \n            formControlName=\"confirmPassword\" (change)=\"onPasswordChanges()\">  \n            <span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['confirmPassword'].errors.required\">La confirmations de mot de passe est\n              obligatoire.</span>        \n            <span class=\"p-error\" *ngIf=\"this.loginForm.controls['confirmPassword'].hasError('mismatch')\">les mots de passe ne sont pas\n              conforme.</span>\n          </div>\n          \n        <div   style=\"text-align: center; margin-bottom: 20px;\"> \n          <button (click)=\"cancelUpdates()\" Style =\"margin-left:20px ;\" class=\"btn\"  >Annuler</button>\n          <button   class=\"btn\" style=\"margin-left: 100px;\"  type=\"submit\" >Valider</button>          \n            </div>\n          \n            \n      </form>\n      </div>\n      </div>\n      \n  \n  </div>\n  <p-toast></p-toast>","import { Component, OnInit } from '@angular/core';\nimport { clientService } from 'src/app/services/client.service';\nimport { Client } from 'src/app/models/client';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { error } from 'protractor';\n\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n\n  client:Client;\n  clientList : Array<Client>=[]\n  matriculeFiscaleClient:string;\n  id:Number;\n  cont:any;\n  \n  grpTaxDialog:boolean\n  updateDialog :boolean\n  submitted :boolean = false;\n\n  clientDialog :boolean;\n\n\n\n  constructor(private clientService:clientService,private storage:LocalStorageService,\n    private spinner: NgxSpinnerService,private toastreService: ToastrService,private messageService: MessageService,private confirmationService: ConfirmationService) { }\n\n  ngOnInit(): void {\n    this.cont=this.storage.retrieve((\"userConnect\"));\n    console.log(this.cont)\n    this.refresh();\n  }\n\n  getClient(){    \n    \n    this.clientService.getClient(this.matriculeFiscaleClient).subscribe((data:Client)=>{  \n      if(data != null){\n      this.clientList=[]\n    this.clientList.push(data)\n  }\n },error =>{ this.refresh() })\n  \n}\n\n\nsaveClient(){\n  this.submitted = true\n  if (!this.client.matriculeFiscaleClient||\n    !this.client.nom ||\n   !this.client.email ||\n   !this.client.addresse ||\n   !this.client.numTel\n  \n ) {\n   return;\n }\n\n  this.clientService.postClient(this.client).subscribe(()=>this.refresh());\n  this.toastreService.success(\"Client est ajouter!\");\n\n  this.clientDialog = false;\n  this.client = {};\n\n}\nrefresh(){\n  this.spinner.show();\n    this.clientService.getMyClients(this.cont.contribuable.id).subscribe((data:Client[])=>{     \n      this.clientList=data\n      this.spinner.hide();\n   });\n}\nopenAddClient(){\n\n  this.clientDialog=true\n  this.client={}\n}\nopenUpdateClient(cli:Client){\n\n  this.updateDialog=true\n  this.client=cli\n}\nhideAddDialog() {\n  this.clientDialog = false;\n  this.submitted = false;\n}\nhideUpdateDialog() {\n  this.updateDialog = false;\n  this.submitted = false;\n}\n\nupdateClient(cl:Client){\n \n  this.client=cl\n  this.clientService.updateClient(cl.id, cl).subscribe(()=>this.refresh());\n  this.messageService.add({severity:'success', summary: 'Succés', detail: 'Client changer', life: 3000});    \n  this.updateDialog=false\n\n}\n\ndeleteClient(cl:Client){\n  this.confirmationService.confirm({\n    message: 'Etes-vous sûr de vouloir supprimer ' + cl.nom + '?',\n    acceptLabel:'Oui',\n    rejectLabel:'Non',\n    header: 'Confirmation',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n        this.clientService.deleteClient(cl.id).subscribe(()=>this.refresh());\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Client supprimer', life: 3000});\n       \n      }\n});\n}\n\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card m-9\">\n\n    <div class=\"card-body\">\n\n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h5 class=\"p-m-0\">Liste des clients</h5>\n\n            </ng-template>\n\n        </p-toolbar>\n\n        <p-table #dt [value]=\"clientList\" [rows]=\"5\" [paginator]=\"true\" styleClass=\"p-datatable-sm\"\n            responsiveLayout=\"scroll\" [rowHover]=\"true\" dataKey=\"id\" [resizableColumns]=\"true\"\n            currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n            styleClass=\"p-datatable-sm\" [showCurrentPageReport]=\"true\">\n            <ng-template pTemplate=\"caption\">\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\n                    <span class=\"p-input-icon-left\">\n\n                       \n                    </span>\n                    <input pInputText type=\"text\" [(ngModel)]=\"matriculeFiscaleClient\" placeholder=\"MF...\" />\n                        <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" style=\"float: right;\" \n                        (click)=\"openAddClient()\"></button>   \n                    <button pButton pRipple label=\"Rechercher\" style=\"float: right;\" icon=\"pi pi-search\"\n                        class=\"p-button-success p-mr-2\" (click)=\"getClient()\"></button>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th>Matricule fiscale</th>\n                    <th>nom </th>\n                    <th>Email </th>\n                    <th>N°telephone</th>\n                    <th>Adresse</th>\n                    <th>Action</th>\n\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-cli>\n                <tr>\n\n                    <td>{{cli.matriculeFiscaleClient}}</td>\n                    <td>{{cli.nom}}</td>\n                    <td>{{cli.email}}</td>\n                    <td>{{cli.numTel}}</td>\n                    <td>{{cli.addresse}}</td>\n                    <td>\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"openUpdateClient(cli)\"  ></button>\n                        <button pButton pRipple icon=\"pi pi-trash\" \n                           (click)=\"deleteClient(cli)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n                    </td>\n\n\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-cli>\n                <tr>\n                    <td colspan=\"5\" style=\"text-align: center;\">\n                    \n                         <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                         <br>\n                         Aucun enregistrement trouvé!\n                        \n                    </td>\n                </tr>\n            </ng-template>\n\n        </p-table>\n    </div>\n\n\n\n</div>\n<p-dialog [(visible)]=\"clientDialog\" [style]=\"{width: '450px'}\" header=\"Client\" [modal]=\"true\"\n    styleClass=\"p-fluid\">\n    <ng-template pTemplate=\"content\">\n        <hr>\n        \n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.matriculeFiscaleClient\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">matricule Fiscale Client </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.matriculeFiscaleClient\">matricule Client est obligatoire.</small>\n               \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.nom\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Nom Client </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Nom Client est obligatoire.</small>\n                \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.addresse\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Adresse </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n                \n            </div>\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" pInputText id=\"name\" [(ngModel)]=\"client.email\" style=\"width: 100%;\" required\n                        autofocus   size=\"30\"/>\n                    <label for=\"name\">E-mail </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.email\">E-mail est obligatoire.</small>\n                \n            </div>\n\n\n            <br>\n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.numTel\" style=\"width: 100%;\" required\n                        autofocus />\n                    <label for=\"name\">Télephone </label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Telephone est obligatoire.</small>\n                \n            </div>\n\n        \n\n\n\n        <hr class=\"solid\">\n        <div class=\"row\" style=\"float: right;\">\n            <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                (click)=\"hideAddDialog()\"></button>&nbsp;\n            <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                (click)=\"saveClient()\"></button>\n        </div>\n\n    </ng-template>\n\n</p-dialog>\n<p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"mise a jour de groupe de taxations\" [modal]=\"true\"\nstyleClass=\"p-fluid\">\n<ng-template pTemplate=\"content\">\n    <hr>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"matriculeFiscaleClient\" [(ngModel)]=\"client.matriculeFiscaleClient\" required autofocus/>\n            <label for=\"matriculeFiscaleClient\">Matricule FiscaleClient Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.matriculeFiscaleClient\">Le matricule fiscale client est obligatoire.</small>\n    </div>\n   <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"nom\" [(ngModel)]=\"client.nom\" required  />\n            <label for=\"libgt\">Nom Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Le Nom client est obligatoire.</small>\n    </div>\n    <br>\n    <div class=\"form-group \">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"client.addresse\" style=\"width: 100%;\" required\n                autofocus />\n            <label for=\"name\">Adresse </label>\n        </span>\n            <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n        \n    </div>\n    <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"email\" pInputText id=\"email\" [(ngModel)]=\"client.email\" required  />\n            <label for=\"tax\">Email Client </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.email\">Le email est obligatoire.</small>\n    </div>\n    <br>\n    <div class=\"form-group\">\n        <span class=\"p-float-label\">\n            <input type=\"text\" pInputText id=\"numTel\" [(ngModel)]=\"client.numTel\" required  />\n            <label for=\"tax\">Numero </label>\n        </span> \n            <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Le numrero est obligatoire.</small>\n    </div>\n    <hr>\n    <div class=\"row\" style=\"float: right;\">\n        <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideUpdateDialog()\"\n        ></button>&nbsp;\n     <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateClient(client)\"></button>\n \n    </div>\n</ng-template>\n\n</p-dialog>\n\n\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>","import { Component, OnInit } from '@angular/core';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { MessageService } from 'primeng/api';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-contribuable',\n  templateUrl: './contribuable.component.html',\n  styleUrls: ['./contribuable.component.scss']\n})\nexport class ContribuableComponent implements OnInit {\n\n     contribuableList : Array<Contribuable>=[]\n     contribuable :  Contribuable\n     matriculeFiscale : string;\n     activDialog :boolean;\n\n\n  constructor(private contribuableService:contribuableService,\n    private messageService: MessageService) { }\n\n  ngOnInit(): void {\n     this.refresh()\n  }\n\n  refresh(){\n    this.contribuableService.getAll().subscribe((data:Contribuable[])=>{\n      this.contribuableList=data;\n    })\n  }\n\n\n  activerContribuables(contr:Contribuable){\n    this.contribuable=contr\n  }\n\n  getContribuables(){    \n    this.contribuableService.getAllContribuables(this.matriculeFiscale).subscribe((data:Contribuable)=>{\n      if(data != null){  \n      this.contribuableList=[]\n    this.contribuableList.push(data)\n      }\n },error=>{this.refresh()})\n  }\n\n  hideDialog(){\n    this.activDialog=false\n  }\n  \n  activate(cont:Contribuable,event:any){\n      this.contribuableService.ChangeState(cont).subscribe((data)=>{\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Contribuable activer', life: 3000});\n      }); \n  }\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n            <div class=\"card m-9\">\n               \n                <div class=\"card-body\">\n                    <p-toolbar styleClass=\"p-mb-4\">\n                        <ng-template pTemplate=\"left\">\n                           <h5 class=\"p-m-0\">Liste des contribuables</h5>   \n                        </ng-template> \n                    </p-toolbar>\n                <p-table #dt [value]=\"contribuableList\" [rows]=\"5\" [paginator]=\"true\"\n                styleClass=\"p-datatable-sm\" responsiveLayout=\"scroll\"\n                 [rowHover]=\"true\" dataKey=\"id\" [resizableColumns]=\"true\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    styleClass=\"p-datatable-sm\"     [showCurrentPageReport]=\"true\" >\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"p-d-flex p-ai-center p-jc-between\">\n                            <span class=\"p-input-icon-left\">\n                              \n                                <input pInputText type=\"text\"  [(ngModel)]=\"matriculeFiscale\"\n                                    placeholder=\"MF...\" />\n                       \n                            </span>\n                            <button pButton pRipple label=\"Rechercher\" style=\"float: right;\"\n                            icon=\"pi pi-search\" class=\"p-button-success p-mr-2\" (click)=\"getContribuables()\"></button>\n                    \n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 8rem;\">MF</th> \n                            <th style=\"width: 8rem;\">Raison social </th> \n                            <th >Email </th> \n                            <th >N°telephone</th> \n                            <th style=\"width: 8rem;\">Action</th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\"  let-cont>\n                        <tr >\n   \n                            <td>{{cont.matriculeFiscale}}</td>\n                            <td>{{cont.raisonSocial}}</td>\n                            <td>{{cont.email}}</td>\n                            <td>{{cont.numtel}}</td>\n                            \n                            <td>\n                                \n                            <p-toggleButton [(ngModel)]=\"cont.actif\" (onChange)=\"activate(cont,$event)\" onLabel=\"activé\" offLabel=\"blocké\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" ></p-toggleButton>\n                                                                 \n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-cont>\n                        <tr>\n                            <td colspan=\"5\" style=\"text-align: center;\">\n                            \n                                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                                 <br>\n                                 Aucun enregistrement trouvé!\n                                \n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        \n       \n       \n</div>\n \n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-overview',\r\n  templateUrl: './dashboard-overview.component.html',\r\n  styleUrls: ['./dashboard-overview.component.scss']\r\n})\r\nexport class DashboardOverviewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Facture } from 'src/app/models/facture';\nimport { factureService } from 'src/app/services/facture.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { StaticList } from 'src/app/models/staticList';\nimport { FactureStateList } from 'src/app/models/factureStateList';\nimport { SearchFacture } from 'src/app/models/searchFacture';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-facture-consultation',\n  templateUrl: './facture-consultation.component.html',\n  styleUrls: ['./facture-consultation.component.scss']\n})\nexport class FactureConsultationComponent implements OnInit {\n  pv:any;\n  factstate:any;\n  factureList:Array<Facture>=[]\n  fctDialog:boolean\n  facture:Facture\n  staticList: StaticList[]\n  selectedStaticList: StaticList\n  stateList: FactureStateList[]\n  selectedStateList: FactureStateList\n  maxDate: Date;\n  searchFact: SearchFacture;\n  numeroFacture:string\n  dateRange:string\n  constructor(private factureService:factureService, private storage:LocalStorageService, \n    private spinner: NgxSpinnerService, private confirmationService: ConfirmationService,\n    private messageService: MessageService) {\n    this.staticList = [\n        { id: '0', code: 'Tout' },\n        { id: '1', code: 'Vente' },\n        { id: '2', code: 'Avoir' }, \n        { id: '3', code: 'Acompte'}\n    ]\n \n    this.stateList = [\n      {id: '0', etat: 'Tout'},\n      {id: '1', etat: 'ENREGISTRER'},\n      {id: '2', etat: 'VALIDER'},\n      {id: '3', etat: 'EN_ATTENTE'},\n      {id: '4', etat: 'ENVOYER'}\n    ]\n     }\n  ngOnInit(): void {\n    this.spinner.show();\n    this.pv=this.storage.retrieve((\"userConnect\"));\n    this.factureService.getFactures(this.pv.codeAgent).subscribe((data:Facture[])=>{     \n       this.factureList=data\n       this.spinner.hide();\n      \n    },error =>{ setTimeout(() => {\n      this.spinner.hide();\n     },4000);})\n    this.searchFact={}\n    let today = new Date();\n    this.maxDate = new Date();\n    this.maxDate.setDate(today.getDate());\n\n    this.selectedStateList = {}\n    this.selectedStaticList = {}\n\n    this.dateRange=null\n  }\n \n  deleteFacture(fct:Facture){\n    this.confirmationService.confirm({\n      message: 'voulez vous supprimer ' + fct.numFact + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.factureService.deleteFacture(fct.id).subscribe(()=>this.ngOnInit());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Facture supprimer', life: 3000});\n        }\n  });\n  }\n  validerFacture(fct:Facture){\n    this.confirmationService.confirm({\n      message: 'voulez vous valider ' + fct.numFact + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.factureService.validateFacture(fct.numFact).subscribe(()=>this.ngOnInit());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Facture valider', life: 3000});\n          this.fctDialog = false;\n        }\n  });\n  }\n  consultFct(fct:Facture){\n     this.fctDialog=true\n     this.facture=fct\n     console.log(fct);\n  }\n\n  hideDialog() {\n    this.fctDialog = false;\n  }\n\n  factureSearch(){\n    this.searchFact = new SearchFacture()   \n    if(this.selectedStateList.id == '0' ){\n      this.selectedStateList.etat = null\n    }\n    if(this.selectedStaticList.id == '0' ){\n      this.selectedStaticList.code =null\n    }\n    this.searchFact.etat = this.selectedStateList.etat\n    this.searchFact.typFact = this.selectedStaticList.code\n    this.searchFact.numFact = this.numeroFacture\n    if(this.dateRange != null){\n    this.searchFact.minDate = this.dateRange[0]\n    this.searchFact.maxDate = this.dateRange[1]\n  }\n    this.factureService.rechercheFactures(this.searchFact).subscribe((data)=>{\n      console.log(data)\n      this.factureList = data\n    });     \n  }\n  \n  clearSearch(){\n    this.numeroFacture = \"\"\n    this.selectedStateList = {}\n    this.selectedStaticList = {}\n    this.dateRange = \"\"\n  }\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card m-9\">\n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Recherche facture</h5>   \n        </ng-template>\n    </p-toolbar>\n\n\n    <div class=\"row \">\n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <input  class=\"p-inputtext-lg\"  style=\"width: 100%;\" [(ngModel)]=\"numeroFacture\"\n                required  id=\"nf\"  type=\"text\" pInputText >  \n                <label for=\"nf\">N° Facture </label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-dropdown id=\"tf\" [options]=\"staticList\"  class=\"p-inputtext-sm\"  [(ngModel)]=\"selectedStaticList\" optionLabel=\"code\" inputId=\"tf\" \n                 [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                 <label for=\"tf\">Type facture </label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-dropdown id=\"fs\" [options]=\"stateList\"  class=\"p-inputtext-sm\"  [(ngModel)]=\"selectedStateList\" optionLabel=\"etat\" inputId=\"state\" \n                 [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                 <label for=\"fs\">Etat facture</label>\n            </span> \n        </div>   \n        <div class=\"form-group col-lg-4 p-2\">\n            <span class=\"p-float-label\">\n                <p-calendar  inputId=\"calendar\" [(ngModel)]=\"dateRange\" selectionMode=\"range\"  dateFormat=\"dd/mm/yy\" showIcon=\"true\" [maxDate]=\"maxDate\"\n                 [style]=\"{'width':'100%', 'height':'40px'}\"> </p-calendar> \n                <label for=\"calendar\">Intervalle de date facture </label>\n            </span> \n        </div>                               \n        </div>\n    \n\n    <div style=\"float: right;\">\n    <button pButton pRipple label=\"Intialiser\" icon=\"pi pi-times\"\n        class=\"p-button-secondary p-button-sm p-mr-2\" (click)=\"clearSearch()\"></button>\n    <button pButton pRipple label=\"Rechercher\" icon=\"pi pi-search\"\n        class=\"p-button-success p-button-sm p-mr-2\" (click)=\"factureSearch()\"></button>\n    </div>\n</div>    \n</div>\n\n<div class=\"card m-9\">\n   \n            \n\n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Historique de mes factures</h5>   \n        </ng-template>\n        <ng-template pTemplate=\"right\">\n            <input pInputText type=\"text\" style=\"float: right;\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Filtrer...\"/>\n         &nbsp;\n        </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"factureList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n    styleClass=\"p-datatable-sm\" currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['numFact','typFact']\">\n    <ng-template pTemplate=\"caption\">\n        <div class=\"p-d-flex p-ai-center p-jc-between\">\n            \n\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th pSortableColumn=\"numFact\">N° Facture  <p-sortIcon field=\"numFact\"></p-sortIcon>\n            </th> \n            <th pSortableColumn=\"typFact\">Type Facture <p-sortIcon field=\"typFact\"></p-sortIcon>\n            </th> \n            <th pSortableColumn=\"dateFact\">Date Facture <p-sortIcon field=\"dateFact\"></p-sortIcon>\n            </th>    \n            <th pSortableColumn=\"state\">Etat<p-sortIcon field=\"state\"></p-sortIcon>\n            </th>         \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-fct>\n        <tr>\n            <td>{{fct.numFact}}</td>\n            <td>{{fct.typFact}}</td>\n            <td>{{fct.datFactInit | date :'short'}}</td>\n            <td><span  [class]=\"{'enregister':fct.state === 'ENREGISTRER', 'valider':fct.state === 'VALIDER'}\" > &nbsp;&nbsp;{{fct.state}}&nbsp;&nbsp;</span>\n            </td>\n            <td>\n                <button pButton pRipple icon=\"pi pi-eye\" class=\"p-2 p-button-rounded p-button-info p-mr-2\"\n                        (click)=\"consultFct(fct)\" ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" class=\"p-2 p-button-rounded p-button-danger p-mr-2\"\n                        (click)=\"deleteFacture(fct)\" ></button>\n                <button *ngIf=\"fct.state ==='ENREGISTRER'\" pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"consultFct(fct)\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-fct>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    </div>\n   \n</div>\n    \n    \n    <p-dialog [(visible)]=\"fctDialog\" [style]=\"{width: '650px'}\" header=\"Détails de facture\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <div class=\"row\">    \n                    <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">N°Facture :</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.numFact\" required autofocus />\n                </div>\n               \n                <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">Type Facture:</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.typFact\" required autofocus />\n                </div>\n                \n                <div class=\"col-md-4 p-field\">\n                    <label for=\"name\">Date Facture :</label>\n                    <input type=\"text\" disabled pInputText id=\"name\" [(ngModel)]=\"facture.dateFact\" required autofocus />\n                </div>\n               </div>\n <p-accordion [style]=\"{'height':'100%','width':'100%','margin-top':'20px'}\"> \n    <p-accordionTab header=\"Détails Facture\" [selected]=\"true\" >\n    <p-table #dt [value]=\"facture.detailsFacture\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n  \n    [showCurrentPageReport]=\"true\" >\n   \n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Order</th> \n            <th>Produit </th> \n            <th >Groupe de taxation </th> \n            <th >Quantite </th> \n            <th >Prix unitaires   </th> \n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-det>\n        <tr>\n            <td>{{det.orderProduit}}</td>\n            <td>{{det.libProduit}}</td>\n            <td>{{det.groupeTaxation.libGrp}}</td>\n            <td>{{det.quantite}}</td>\n            <td>{{det.prixUnit}}</td>\n        </tr>\n    </ng-template>\n    \n    </p-table> \n     </p-accordionTab>\n    </p-accordion>          \n               \n            </ng-template>\n        \n            <ng-template pTemplate=\"footer\">\n                <button pButton pRipple label=\"Annuler\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"\n                   ></button>\n                   <button *ngIf=\"facture.state ==='ENREGISTRER'\" pButton pRipple label=\"valider\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"validerFacture(facture)\"\n                   ></button>\n               \n            </ng-template>\n        </p-dialog>\n    \n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    <!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Facture } from 'src/app/models/facture';\nimport { factureService } from 'src/app/services/facture.service';\nimport { StaticList } from 'src/app/models/staticList';\nimport * as moment from 'moment';\nimport { Detailsfacture } from 'src/app/models/detailsfacture';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { Router } from '@angular/router';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ParamProduit } from 'src/app/models/paramProduit';\nimport { subTotauxFacture } from 'src/app/models/subTotauxFacture';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { SubTotauxResponse } from 'src/app/models/subTotauxResponse';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Parampays } from 'src/app/models/parampays';\nimport { Client } from 'src/app/models/client';\nimport { clientService } from 'src/app/services/client.service';\nimport { ParamProduitComponent } from '../param-produit/param-produit.component';\n\n@Component({\n  selector: 'app-facture',\n  templateUrl: './facture.component.html',\n  styleUrls: ['./facture.component.scss']\n})\nexport class FactureComponent implements OnInit {\n  facture: Facture\n  staticList: StaticList[]\n  selectedStaticList: StaticList\n  listDetailFacture: Detailsfacture[];\n  detailsFacture: Detailsfacture;\n  detailsFactureList: Array<Detailsfacture> = [];\n  paramPaysList: Array<Parampays> = []\n\n  groupetaxationItems: Groupetaxation[]\n  groupeTaxationSelected: Groupetaxation;\n  ParamProduitItems: ParamProduit[];\n  paramProduit: ParamProduit;\n  filteredParamProduit:ParamProduit[]\n  numfactureAvoir:String;\n  factureAvoir : Facture\n\n  display: boolean = false;\n  detailsDialog: boolean;\n  FactureAvoirDialog:boolean;\n  submitted: boolean;\n  submittedD: boolean;\n  toggle: boolean = true;\n  subtotauxDisabled: boolean = true;\n  validaDisabled: boolean = true;\n\n  clientDisabled: boolean = false;\n  montant: number = 0;\n  montantHT: number = 0;\n  montantTTC: number = 0;\n\n  client: Client;\n  devise: string;\n  contpays: string;\n  order: number = 1\n  subTotauxFactureList: Array<subTotauxFacture> = [];\n  subTotauxFacture: subTotauxFacture;\n  montantTOTALS: string\n  montantTaxSpec: string\n  currentcont:any\n  checkedclient: boolean = true;\n\n  factAvoirDate:string\n  loadSpinner: boolean = false;\n  maxDate: Date;\n  constructor(private factureService: factureService, private router: Router, private local: LocalStorageService, private messageService: MessageService,\n    private confirmationService: ConfirmationService, private grpTaxationService: grpTaxationService,\n    private contribuableService: contribuableService, private paramProduitService: paramProduitService,\n    private spinner: NgxSpinnerService, private paramPaysService: paramPaysService, private storage:LocalStorageService, \n    private clientService: clientService) {\n    this.staticList = [{ id: '1', code: 'Vente' },\n    { id: '2', code: 'Avoir' }, { id: '3', code: 'Acompte' }\n    ]\n  }\n\n  ngOnInit(): void {\n    this.facture = {}\n    this.facture.isSaved = false\n    this.selectedStaticList = this.staticList[0]\n    this.client = {}\n    this.currentcont = this.local.retrieve(\"userConnect\").contribuable\n    this.devise = this.local.retrieve(\"userConnect\").codeDevise\n    this.contpays= this.local.retrieve(\"userConnect\").contribuable.paramPays.id\n    let momentVariable = moment(new Date(), 'DD-MM-YYYY');\n    // this.facture.dateFact=  momentVariable.format('DD/MM/YYYY')\n    this.detailsFactureList = []\n    let today = new Date();\n    this.maxDate = new Date();\n    this.maxDate.setDate(today.getDate());\n\n    this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      this.paramPaysList = data\n    })\n  }\n\n  hideDialog() {\n    this.detailsDialog = false;\n    this.submittedD = false;\n  }\n\n\n  saveFacture() {\n    debugger;\n    this.submitted = true;\n    //let momentVariable = moment(this.facture.dateFact,'DD-MM-YYYY');\n    //this.facture.dateFact=  momentVariable.format('DD/MM/YYYY')\n    this.facture.datFactInit = this.factAvoirDate || this.facture.datFactInit\n    this.facture.typFact = this.selectedStaticList.code\n    this.facture.contribuable = this.local.retrieve(\"userConnect\").contribuable\n    this.facture.pointVente = this.local.retrieve(\"userConnect\")\n    this.client.contribuable=this.facture.contribuable\n    this.facture.client = this.client\n    this.facture.isValid = false\n    this.facture.factureAvoir = this.factureAvoir\n    this.spinner.show();\n    if (this.detailsFactureList.length != 0) {\n      this.factureService.addFacture(this.facture).subscribe((data) => {\n        \n        console.log(data)\n        this.subtotauxDisabled = !this.subtotauxDisabled\n        this.subTotauxFactureList = data.subTotauxFactureList\n        this.facture.montantTOTALS = data.montantTotal\n        this.facture.montantTaxSpec = data.montantTaxSpec\n        this.facture.isSaved = true\n        this.spinner.hide();\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture enregistrer avec succés', life: 1000 });\n\n      }, error=>{\n        this.spinner.hide();\n        this.messageService.add({ severity: 'error', summary: 'Erreur', detail: \"Erreur lors de l'enregistrement de la facture\", life: 1000 });\n      });\n    } else {\n      this.messageService.add({ severity: 'error', summary: 'Erreur', detail: 'La facture doit avoir au moins un article', life: 1000 });\n\n    }\n  }\n\n\n\n\n  addNewDetails() {\n    this.detailsFacture = new Detailsfacture();\n    this.subTotauxFacture = new subTotauxFacture();\n    this.groupeTaxationSelected = new Groupetaxation();\n    this.paramProduit = new ParamProduit();\n    this.groupeTaxationSelected = this.paramProduit.groupeTaxation\n    this.detailsDialog = true\n    this.detailsFacture.orderProduit = this.order.toString()\n    this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n    this.paramProduitService.getparamProduits().subscribe((data: ParamProduit[]) => {\n    this.ParamProduitItems = data.filter(pp=>pp.contribuable.id == this.currentcont.id)\n      console.log(this.ParamProduitItems)\n    })\n    \n  }\n  saveDetails() {\n  debugger\n    this.submittedD = true;\n    console.log(this.groupeTaxationSelected)\n    this.paramProduit.contribuable = this.local.retrieve(\"userConnect\").contribuable\n    this.groupeTaxationSelected = this.paramProduit.groupeTaxation\n    this.detailsFacture.groupeTaxation = this.groupeTaxationSelected\n    this.detailsFacture.groupeTaxationLib = this.groupeTaxationSelected.libGrp\n    this.detailsFacture.paramProduit = this.paramProduit\n    this.detailsFacture.refProduit = this.paramProduit.codeProduit\n    this.detailsFacture.libProduit = this.paramProduit.libProduit\n    this.detailsFacture.prixUnit = this.paramProduit.prixUnitaire\n    if (this.detailsFacture.libProduit.trim() ||\n      this.detailsFacture.quantite.trim() || this.detailsFacture.prixUnit.trim()) {\n      if (this.detailsFacture.id) {\n        this.detailsFactureList[this.findIndexById(this.detailsFacture.id, this.detailsFactureList)] = this.detailsFacture\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Détails facture modifier', life: 1000 });\n      } else {\n        //this.detailsFacture.id = this.createId();\n        this.detailsFactureList.push(this.detailsFacture);\n      }\n\n      this.detailsFactureList = [...this.detailsFactureList];\n      this.detailsDialog = false;\n      this.facture.detailsFacture = this.detailsFactureList\n      this.detailsFacture = {};\n      this.order++\n      this.submittedD = false\n    }\n    console.log(this.detailsFactureList)\n  }\n  deleteDetail(detailsFacture: Detailsfacture) {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + detailsFacture.libProduit + '?',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.detailsFactureList = this.detailsFactureList.filter(val => val.id !== detailsFacture.id);\n        this.detailsFacture = {};\n        this.order--\n\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Détails facture supprimer', life: 3000 });\n      }\n    });\n\n  }\n  updateDetail(detailsFacture: Detailsfacture) {\n    this.detailsFacture = { ...detailsFacture };\n    this.detailsDialog = true;\n  }\n\n  findIndexById(id: Number, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n    console.log(\"indx\" + index)\n    return index;\n  }\n\n\n  findIndexByCodeGrp(id: string, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].codeGrp === id) {\n        index = i;\n        break;\n      }\n    }\n    console.log(\"indx\" + index)\n    return index;\n  }\n\n\n\n\n\n  createId(): Number {\n    let id = null;\n    var n = '0123456789';\n    for (var i = 0; i < 5; i++) {\n      id += n.charAt(Math.floor(Math.random() * n.length));\n    }\n    return id;\n  }\n\n   getClient(e) {\n    if (this.checkedclient == false) {\n      this.loadSpinner = true;\n      this.clientService.getClient(this.client.matriculeFiscaleClient).subscribe(\n        (data: Client) => {\n          //this.clientDisabled=!this.clientDisabled\n          //document.getElementById(\"spin\").remove();\n          if (data != null) {\n            this.client = data\n            this.loadSpinner = false;\n          } else {\n            console.log(this.client);\n            this.loadSpinner = false;\n            this.messageService.add({ severity: 'info', summary: 'Info', detail: 'client n existe pas, saisie les champs manuellement!', life: 2000 });\n          }\n        }, error => { })\n    } else {\n      this.client = {}\n    }\n  } \n  filterProduit(event){\n    let filtered :any[] =[]\n    let query = event.query\n    for(let i = 0; i<this.ParamProduitItems.length;i++){\n      let item = this.ParamProduitItems[i];\n      if( item.codeProduit.toLowerCase().indexOf(query.toLowerCase()) == 0){\n        filtered.push(item);\n      }\n    }\n    this.filteredParamProduit = filtered\n  }\n\n  getSelectedProduit(event){\n    debugger\n    this.paramProduit=event;\n    console.log(this.paramProduit)\n  }\n\n  annulerFct() {\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir annuler la facture ?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      accept: () => {\n        this.ngOnInit();\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture annuler', life: 3000 });\n      }\n    });\n  }\n  validateFacture() {\n    this.factureService.validateFacture(this.facture.numFact).subscribe();\n    this.toggle = !this.toggle\n    this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Facture valider', life: 3000 });\n  }\n  hideDialogAvoir(){\n    this.FactureAvoirDialog=false\n  }\n\n  getFactureAvoir(){\n    this.factureService.getFactureByNumFact(this.numfactureAvoir).subscribe((data) => {\n      this.factureAvoir = data\n      this.facture.datFactInit = moment(data.datFactInit).format('DD/MM/YYYY hh:mm:ss')  \n      this.factAvoirDate = data.datFactInit\n      console.log(data.datFactInit)\n      this.client.matriculeFiscaleClient = data.client.matriculeFiscaleClient\n      this.client.nom = data.client.nom\n      this.client.email = data.client.email\n      this.client.numTel = data.client.numTel\n      this.client = data.client\n      this.facture.detailsFacture= data.detailsFacture\n      this.detailsFactureList = data.detailsFacture\n      this.facture.detailsFacture = this.detailsFactureList\n    console.log(this.detailsFactureList)\n         });\n    this.FactureAvoirDialog=false\n  }\n  onChangeTyp(event) {\n    \n    console.log(event)\n    this.selectedStaticList = event.value\n    if(this.selectedStaticList.id == '2'){\n      this.FactureAvoirDialog=true\n        \n    }\n  }\n\n  phoneNumberValidator(event: any) {\n    const pattern = /[0-9]{8}/;\n    if (!pattern.test(event.target.value)) {\n      event.target.value = event.target.value.replace(/^[0-9\\-]*$/, \"\");\n    }\n  }\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n\n<div class=\"card\" [class.disabled]=\"!toggle\">\n    \n     \n    <p-accordion [style]=\"{'height':'100%'}\"> \n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h6 Class=\"titles\">Prise en charge facture :</h6>\n            </ng-template>\n            <ng-template pTemplate=\"right\">\n                <button pButton pRipple label=\"Enregistrer\" icon=\"pi pi-save\"\n                class=\"p-button-success p-button-sm p-mr-2\" (click)=\"saveFacture()\"></button>\n                <button pButton pRipple label=\"Valider\" icon=\"pi pi-check\" [disabled]=\"this.facture.isSaved === false\"   (click)=\"validateFacture()\" class=\"p-button-info p-button-sm p-mr-2\"></button>\n            </ng-template>\n        </p-toolbar>       \n        \n            <div class=\"card m-9\">\n                <h6 Class=\"titles\">Informations facture :</h6> \n                \n                <div class=\"card-body \">\n                    <div class=\"row \">\n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <input class=\"p-inputtext-lg\" pTooltip=\"Saisir le Numéro du facture\" tooltipPosition=\"top\" tooltipEvent=\"focus\" style=\"width: 100%;\"\n                            required autofocus id=\"numFact\" [(ngModel)]=\"facture.numFact\" type=\"text\" pInputText >  \n                            <label for=\"num_fact\">N° Facture </label>\n                            <small class=\"p-error\" *ngIf=\"submitted && !facture.numFact\">Numéro du facture est obligatoire.</small>\n                        </span> \n                    </div>   \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown [options]=\"staticList\"  class=\"p-inputtext-sm\" pTooltip=\"Choisir le type du facture\" tooltipPosition=\"top\" [(ngModel)]=\"selectedStaticList\" optionLabel=\"code\" inputId=\"tf\" \n                            (onChange)=\"onChangeTyp($event)\" [autoDisplayFirst]=\"false\" [style]=\"{'width':'100%', 'height':'40px'}\"> </p-dropdown>  \n                        </span> \n                    </div>   \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <p-calendar  inputId=\"calendar\" pTooltip=\"Choisir la date du facture\" tooltipPosition=\"top\" [(ngModel)]=\"facture.datFactInit\" dateFormat=\"dd/mm/yy\" showIcon=\"true\" [maxDate]=\"maxDate\"\n                             [style]=\"{'width':'100%', 'height':'40px'}\"> </p-calendar> \n                            <label for=\"calendar\">Date facture </label>\n                        </span> \n                    </div>    \n                    <div class=\"form-group col-lg-4 p-2\" style=\"display: flex !important; align-items: center!important;\">\n                            <p-checkbox  inputId=\"checkexp\" binary=\"true\" [(ngModel)]=\"facture.isExported\" > </p-checkbox> \n                            <label for=\"checkexp\" style=\"margin-bottom: 0rem;\">&nbsp; &nbsp; A l'exportation</label>\n                    </div>              \n                    <div class=\"form-group col-lg-4 p-2\">\n                        <span class=\"p-float-label\">\n                            <input id=\"lastname1\"   disabled  class=\"p-inputtext-lg\" [(ngModel)]=\"facture.montantTOTALS\" type=\"text\" style=\"width: 100%;\" pInputText>  \n                            <label for=\"lastname1\">Montant total  </label>\n                        </span> \n                    </div>                    \n                    </div>\n                </div>\n            </div>\n             <div class=\"card m-6\" >\n                  <h6 Class=\"titles\">Informations clients :</h6>\n                <div class=\"card-body \">\n                    <div class=\"form-row row\">\n                        <div class=\"form-group p-inputgroup col-lg-4\">\n                            <span class=\"p-float-label p-input-icon-right \">\n                                <i *ngIf=\"loadSpinner\" id=\"spin\" class=\"pi pi-spin pi-spinner\"></i>\n                                <input required   id=\"numFact\"  class=\"p-inputtext-lg\" pTooltip=\"Saisir le matricule fiscale du client\" style=\"width: 100%;\"\n                                    tooltipPosition=\"top\" tooltipEvent=\"focus\" [(ngModel)]=\"client.matriculeFiscaleClient\"  type=\"text\" pInputText>   \n                                <label for=\"numFact\">Matricule fiscale</label>\n                                <small class=\"p-error\" *ngIf=\"submitted && !facture.numFact\">Matricule fiscale est obligatoire.</small>\n                            </span> \n                            <p-toggleButton (onChange)=\"getClient($event)\" [(ngModel)]=\"checkedclient\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"[style]=\"{'height':'40px'}\" ></p-toggleButton>\n                        </div>          \n                    </div>\n                    <hr>\n                                <div class=\"row\">\n                                   <div class=\"form-group col-lg-4 p-2\">\n                                    <span class=\"p-float-label\">\n                                        <input id=\"nom\" class=\"p-inputtext-lg\" pTooltip=\"Saisir le nom du client\" tooltipPosition=\"top\"\n                                        [(ngModel)] =\"client.nom\" type=\"text\" style=\"width: 100%;\" pInputText required>  \n                                        <label for=\"nom\">Nom client/Raison sociale </label>\n                                        <small class=\"p-error\" *ngIf=\"submitted && !client.nom\">Nom est obligatoire.</small>\n                                    </span>    \n                                    </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                        <span class=\"p-float-label\">\n                                            <input id=\"nom\" class=\"p-inputtext-lg\" pTooltip=\"Saisir l'adresse du client\" tooltipPosition=\"top\"\n                                            [(ngModel)] =\"client.addresse\" type=\"text\" style=\"width: 100%;\" pInputText required>  \n                                            <label for=\"nom\">Adresse </label>\n                                            <small class=\"p-error\" *ngIf=\"submitted && !client.addresse\">Adresse est obligatoire.</small>\n                                        </span>    \n                                        </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                    <span class=\"p-float-label\">\n                                        <input id=\"email\"  class=\"p-inputtext-lg\"  [(ngModel)] =\"client.email\" email type=\"email\"\n                                        pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"     pTooltip=\"Saisir l'email du client\" tooltipPosition=\"top\"   #ma=\"ngModel\"  style=\"width: 100%;\" pInputText required> \n                                        <label for=\"email\">Email </label>\n                                        <small class=\"p-error\" *ngIf=\"ma.errors?.pattern\">Le format de l'email est incorrecte.</small>\n                                     </span>                        \n                                    </div>\n                                    <div class=\"form-group col-lg-4 p-2\">\n                                        <span class=\"p-float-label\">\n                                            <input id=\"numTel\"   class=\"p-inputtext-lg\" [(ngModel)] =\"client.numTel\"  type=\"text\" pTooltip=\"Saisir numero du client\" tooltipPosition=\"top\" style=\"width: 100%;\" pInputText required>     \n                                            <label for=\"numTel\">N°téléphone </label>\n                                            <small class=\"p-error\" *ngIf=\"submitted && !client.numTel\">Numéro du téléphone est obligatoire.</small>\n                                        </span> \n                                    </div>                       \n                                    <!-- <div class=\"col\">\n                                        \n                                            <span class=\"p-float-label\">\n                                                <p-dropdown [style]=\"{'width':'100%','height':'40px'}\" [options]=\"paramPaysList\" [(ngModel)]=\"client.paramPays\" \n                                                optionLabel=\"libPays\" inputId=\"lastname1\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"false\"> </p-dropdown>                            \n                                                <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                                            </span>                          \n                                                                              \n                                    </div> -->\n                        </div>\n                </div>\n               \n             </div>\n\n            <div class=\"card m-6\">\n                <h6 Class=\"titles\">Détails facture :</h6>\n\n                \n                <p-table #dt [value]=\"detailsFactureList\" [rows]=\"5\" [paginator]=\"true\"\n                 responsiveLayout=\"scroll\"\n                 [rowHover]=\"true\" dataKey=\"id\" styleClass=\"p-datatable-sm\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    [showCurrentPageReport]=\"true\" >\n                  \n                    <ng-template pTemplate=\"header\" >\n                        <tr>\n                            <th style=\"width: 4rem\">Order</th>\n                            <th style=\"width: 10rem\" >Réference Produit</th>\n                            <th>Produit </th> \n                            <th >Groupe de Taxation </th> \n                            <th >Quantité </th> \n                            <th >Prix unitaires  </th> \n                            <th style=\"width: 7rem\">Action</th>\n                            <th style=\"width: 4rem\">  <p-button  \n                                  Tooltip=\"Ajouter détails facture\"  toolTipPosition=\"top\" icon=\"pi pi-plus-circle\" class=\"p-button-info p-mr-2\"\n                                 (onClick)=\"addNewDetails()\" ></p-button>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-det>\n                        <tr>\n   \n                            <td>{{det.orderProduit}}</td>\n                            <td>{{det.refProduit}}</td>\n                            <td>{{det.libProduit}}</td>\n                            <td>{{det.groupeTaxationLib}}</td>\n                            <td>{{det.quantite}}</td>\n                            <td>{{det.prixUnit}}</td>\n\n                            <td>\n                                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                                    (click)=\"updateDetail(det)\"></button>\n                                <button pButton pRipple icon=\"pi pi-trash\" \n                                    class=\"p-button-rounded p-button-danger p-mr-2\" (click)=\"deleteDetail(det)\"></button>\n                            </td>\n                            \n                        </tr>\n                    </ng-template>\n        \n                </p-table>\n            </div>\n           \n        <p-accordionTab header=\"Sub totaux Facture\" [disabled]=\"this.subtotauxDisabled\">\n            <div class=\"form-group col-sm p-fluid\" >\n                <label for=\"lastname1\">Montant total tax specifique :</label>\n                <input id=\"lastname1\"   disabled  class=\"p-inputtext-sm\" [(ngModel)]=\"facture.montantTaxSpec\" type=\"text\" pInputText> \n            </div> \n               \n                    <p-table  styleClass=\"p-datatable-sm\" [value]=\"subTotauxFactureList\"  >\n                        <ng-template pTemplate=\"header\">\n                            <tr>       \n                                <th>Groupe de taxations</th>\n                                <th>Montant total hors tax</th>\n                                <th>Montant TTC</th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-subTotaux>\n                            <tr>\n                                <td>{{subTotaux.codeGrp}}</td>\n                                <td>{{subTotaux.totalHt}}</td>\n                                <td>{{subTotaux.totalTax}}</td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                        \n               \n             \n        </p-accordionTab>\n         \n    </p-accordion>\n</div>\n\n\n<p-dialog [(visible)]=\"detailsDialog\"  [style]=\"{width: '760px'}\" header=\"Ajout détails facture\" [modal]=\"true\"\n        styleClass=\"p-fluid\"  >\n        <ng-template pTemplate=\"content\">\n            <hr>\n            <div class=\"row\">\n                <div class=\"form-group col-lg-6 p-2\">\n                   <!--  <span class=\"p-float-label\">\n                        <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"gp\" [(ngModel)]=\"detailsFacture.refProduit\" style=\"width: 100%;\" required autofocus />   \n                        <label for=\"gp\">Code produit</label>\n                        <small class=\"p-error\" *ngIf=\"submittedD && !detailsFacture.refProduit\">Code produit est obligatoire.</small>\n                    </span>  -->   \n                <span class=\"p-float-label\">      \n                    <p-autoComplete [ShowEmptyMessage]=\"true\" [dropdown]=\"true\" [(ngModel)]=\"paramProduit.codeProduit\" [suggestions]=\"filteredParamProduit\"\n                    (completeMethod)=\"filterProduit($event)\" field=\"codeProduit\" (onSelect)=\"getSelectedProduit($event)\"></p-autoComplete> \n                    <label for=\"gp\">Code produit</label>\n                </span>       \n                </div>\n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"lp\" [(ngModel)]=\"paramProduit.libProduit\" style=\"width: 100%;\" required  /> \n                        <label for=\"lp\">Produit </label>\n                    </span>              \n                        <small class=\"p-error\" *ngIf=\"submittedD && !paramProduit.libProduit\">Le produit est obligatoire.</small>\n                </div>                \n            </div>\n            <div class=\"form-row row\">\n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduit.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                    aria-required=\"true\" optionLabel=\"libGrp\" id=\"gt\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\" [style]=\"{'width':'100%'}\"\n                      requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submittedD)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                        <label for=\"gt\">Groupe de taxation </label>\n                        <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submittedD) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                    </span>                   \n                </div>  \n              <div class=\"form-group col-lg-6 p-2\">\n                <span class=\"p-float-label\">\n                    <p-inputNumber id=\"pu\" class=\"p-inputtext-lg\" [(ngModel)]=\"paramProduit.prixUnitaire\"  [useGrouping]=\"false\"\n                    required  [min]=\"1\"  style=\"width: 100%;\"></p-inputNumber>\n                    <label for=\"pu\">Prix unitaire </label>\n                </span>              \n                    <small class=\"p-error\" *ngIf=\"submittedD && !paramProduit.prixUnitaire\">Le prix unitaire est obligatoire.</small>   \n             </div>\n            \n            </div>\n            <div class=\"form-row row\">\n               \n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-inputNumber  id=\"qp\"  class=\"p-inputtext-lg\" [(ngModel)]=\"detailsFacture.quantite\"  [useGrouping]=\"false\"\n                        required    [min]=\"1\" style=\"width: 100%;\"></p-inputNumber>\n                        <label for=\"qp\">Quantité </label>\n                    </span>              \n                        <small class=\"p-error\" *ngIf=\"submittedD && !detailsFacture.quantite\">La quantité est obligatoire.</small>  \n                  </div>\n                                 \n                <div class=\"form-group col-lg-6 p-2\">\n                    <span class=\"p-float-label\">\n                        <p-inputNumber id=\"ts\"  class=\"p-inputtext-lg\" [min]=\"1\"   [(ngModel)]=\"detailsFacture.taxSpec\"\n                        [useGrouping]=\"false\" required  style=\"width: 100%;\" ></p-inputNumber>\n                        <label for=\"ts\">Tax spécifique </label>\n                    </span>             \n                </div>             \n            </div>\n\n\n            <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                        (click)=\"hideDialog()\"></button>&nbsp;\n                    <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                        (click)=\"saveDetails()\"></button>\n                </div>\n                 \n        </ng-template>\n       \n    </p-dialog>\n\n    <p-dialog [(visible)]=\"FactureAvoirDialog\"  [style]=\"{width: '460px'}\" header=\"Numero de facture à annuler\" [modal]=\"true\"\n    styleClass=\"p-fluid\"  >\n    <ng-template pTemplate=\"content\">\n        <hr>\n   \n            <div class=\"form-group \">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" class=\"p-inputtext-lg\" pInputText id=\"lp\" [(ngModel)]=\"numfactureAvoir\" style=\"width: 100%;\" required  autofocus/> \n                    <label for=\"lp\">Numéro Facture </label>\n                </span>              \n                    <small class=\"p-error\" *ngIf=\"submittedD && !numfactureAvoir\">Le numéro de facture est obligatoire.</small>\n            </div>                \n        \n        <hr>\n            <div class=\"row\" style=\"float: right;\">\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                    (click)=\"hideDialogAvoir()\"></button>&nbsp;\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                    (click)=\"getFactureAvoir()\"></button>\n            </div>\n             \n    </ng-template>\n   \n</p-dialog>\n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    <!--spinner-->\n    <ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n        <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n    </ngx-spinner>\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './authentification.users.html',\r\n  styles: []\r\n})\r\nexport class authentificationUsers implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<div class=\"container-fluid\">\r\n          <router-outlet></router-outlet>         \r\n </div>  \r\n <!--footer class=\"page-footer font-small blue\"> \r\n   <div class=\"footer-copyrght text-center py-3\" style=\"padding-top : 1.5rem !important;\">\r\n    @ 2021 Copyright : <a href=\"http://www.arabsoft.com.tn/\">Arabsoft</a>\r\n  All rights reserved. <b>Version</b> 1.0.0\r\n  </div>\r\n</footer--> \r\n","import { Component, OnInit } from '@angular/core';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Parampays } from 'src/app/models/parampays';\n\n@Component({\n  selector: 'app-group-taxation',\n  templateUrl: './group-taxation.component.html',\n  styleUrls: ['./group-taxation.component.scss']\n})\nexport class GroupTaxationComponent implements OnInit {\n    \n  grpTaxList:Array<Groupetaxation>=[]\n  grpTax:Groupetaxation\n  grpTaxDialog:boolean\n  updateDialog :boolean\n  submitted :boolean = false;\n  paramPaysList: Array<Parampays> = []\n\n  constructor(private grpTaxationService : grpTaxationService,private messageService: MessageService,\n    private confirmationService: ConfirmationService,  private paramPaysService: paramPaysService) { }\n\n  ngOnInit(): void {\n     this.refresh();\n     this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      console.log(data)\n      this.paramPaysList = data\n    })\n  }\n \n  saveGrp(){\n    this.submitted = true\n    if (!this.grpTax.codeGrpTax ||\n     !this.grpTax.libGrp ||\n     !this.grpTax.taxTva \n    \n   ) {\n     return;\n   }\n    this.grpTaxationService.postGrpTaxation(this.grpTax).subscribe(()=>this.refresh());\n    this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations ajouter', life: 3000});\n    this.grpTaxDialog = false;\n    console.log(this.grpTax)\n   \n\n  }\n  hideDialog() {\n    this.refresh()\n    this.grpTaxDialog = false;\n    this.updateDialog = false;\n    this.submitted = false;\n  }\n  refresh(){\n    this.grpTaxationService.getGrpTaxations().subscribe((data:Groupetaxation[])=>{\n      this.grpTaxList=data\n    })\n  }\n  openNew(){    \n    this.grpTaxDialog=true\n    this.grpTax={}\n  }\n  openUpdate(grp:Groupetaxation){\n    this.updateDialog=true\n    this.grpTax=grp\n  }\n  updateGrp(grp:Groupetaxation){  \n    this.grpTax=grp\n    this.grpTaxationService.updateGrpTax(grp.id, grp).subscribe(()=>this.refresh());\n    this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations changer', life: 3000});    \n    this.updateDialog=false\n\n  }\n  deleteGrp(grp:Groupetaxation){\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + grp.libGrp + '?',\n      acceptLabel:'Oui',\n      rejectLabel:'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.grpTaxationService.deletetgrpTax(grp.id).subscribe(()=>this.refresh());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Groupe de taxations supprimer', life: 3000});\n         \n        }\n  });\n  }\n\n \n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card m-9\">\n          \n<div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        \n        <ng-template pTemplate=\"left\">\n            <h5 class=\"p-m-0\">Liste des groupes des taxations</h5>   \n         </ng-template> \n         <ng-template pTemplate=\"right\">\n                 <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Filtrer...\"/>\n              &nbsp;\n            <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n     \n         </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"grpTaxList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\" [scrollable]=\"true\" styleClass=\"p-datatable-sm\"\n    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['codeGrpTax','libGrp','taxTva','paramPays.libPays']\">       \n   \n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th  pSortableColumn=\"codeGrpTax\">Code <p-sortIcon field=\"codeGrpTax\"></p-sortIcon>\n            </th> \n            <th  pSortableColumn=\"libGrp\">Libellé <p-sortIcon field=\"libGrp\"></p-sortIcon>\n            </th> \n            <th  pSortableColumn=\"taxTva\">Valeur de TAX <p-sortIcon field=\"taxTva\"></p-sortIcon>\n            </th>  \n            <th  pSortableColumn=\"paramPays.libPays\">Pays <p-sortIcon field=\"paramPays.libPays\"></p-sortIcon>\n            </th>          \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-grp>\n        <tr>\n            <td>{{grp.codeGrpTax}}</td>\n            <td>{{grp.libGrp}}</td>\n            <td>{{grp.taxTva}}</td>\n            <td>{{grp.paramPays.libPays}}</td>\n            \n            <td>\n                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                        (click)=\"  openUpdate(grp)\" ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" \n                (click)=\"deleteGrp(grp)\"  class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-grp>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    \n    \n    </div>\n    </div>        \n    \n    \n    <p-dialog [(visible)]=\"grpTaxDialog\" [style]=\"{width: '450px'}\" header=\"Ajout de groupe de taxations\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown  [style]=\"{width: '100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"grpTax.paramPays\" \n                        optionLabel=\"libPays\" inputId=\"lastname1\"  [autoDisplayFirst]=\"false\" autofocus> </p-dropdown>                            \n                        <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                    </span>                          \n                </div>\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.codeGrpTax\" required  />\n                        <label for=\"name\">Code groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.codeGrpTax\">Le Code groupe de taxation est obligatoire.</small>\n                </div>\n               <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.libGrp\" required  />\n                        <label for=\"name\">Libellé groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.libGrp\">Le Libellé groupe de taxation est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"grpTax.taxTva\" required  />\n                        <label for=\"name\">Valeur de Tax </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.taxTva\">La Valeur de Tax est obligatoire.</small>\n                </div>\n               \n                <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveGrp()\"></button>\n             \n                </div>\n            </ng-template>\n        \n        </p-dialog>\n    \n\n        <p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"mise a jour de groupe de taxations\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"code\" [(ngModel)]=\"grpTax.codeGrpTax\" required autofocus/>\n                        <label for=\"code\">Code groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.codeGrpTax\">Le Code groupe de taxation est obligatoire.</small>\n                </div>\n               <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"libgt\" [(ngModel)]=\"grpTax.libGrp\" required  />\n                        <label for=\"libgt\">Libellé groupe de taxation </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.libGrp\">Le Libellé groupe de taxation est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"tax\" [(ngModel)]=\"grpTax.taxTva\" required  />\n                        <label for=\"tax\">Valeur de Tax </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !grpTax.taxTva\">La Valeur de Tax est obligatoire.</small>\n                </div>\n               \n                <hr>\n                <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateGrp(grpTax)\"></button>\n             \n                </div>\n            </ng-template>\n        \n        </p-dialog>\n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"main-footer\">\r\n    <strong>Copyright &copy; 2020-2021 <a href=\"http://www.arabsoft.com.tn/\">Arabsoft</a>. <small>  All rights reserved. Version 1.0.0-pre   </small></strong>\r\n   \r\n</footer>","import { isNull } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  UserLogin:String;\r\n  credentials:any;\r\n  \r\n  constructor(private storage:LocalStorageService,\r\n    private router:Router) { }\r\n items : MenuItem[]\r\n  ngOnInit(): void {\r\n    this.credentials= this.storage.retrieve(\"userConnect\");\r\n    console.log(this.credentials.libellePoint);\r\n\r\n\r\n   this.items = [\r\n    {\r\n      label:'Point : ' + this.credentials.libellePoint ,\r\n      items:[   \r\n     ]  \r\n   },      \r\n     {\r\n     label:' agent : ' + this.credentials.nomAgent,\r\n     items:[{\r\n       \r\n       label:'Paramètres',\r\n       icon:'pi pi-cog',\r\n       routerLink:'settings'\r\n     },\r\n     {\r\n        label:'Se déconnecter',\r\n        icon:'pi pi-sign-out',\r\n        command:()=>{ this.deconnecter(); }\r\n      }\r\n    ]  \r\n  }      \r\n   ];\r\n   \r\n\r\n  }\r\n\r\n  deconnecter() {\r\n    //this.storage.store('client', null);\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('token');\r\n\r\n    this.router.navigate(['/user/login']);\r\n  }\r\n\r\n  logOut(){\r\n    //this.storage.store('client', null);\r\n    //this.storage.clear();    \r\n    this.router.navigate(['/user/login']);\r\n    \r\n  }\r\n}\r\n","<nav class=\"main-header navbar navbar-expand nav-header-color\">\r\n  <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item\">\r\n          <a class=\"nav-link text-light\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n              <i class=\"fa fa-bars icon-color-fa\"></i>\r\n          </a>\r\n      </li>\r\n      \r\n  </ul>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n   <ul class=\"nav navbar-nav ml-auto\">\r\n       <li class=\"nav-item\" role=\"button\">\r\n           <!-- <a class=\"contact text-light\" aria-expanded=\"false\">  \r\n           <i class=\"pi pi-user\" style=\"font-size:1rem;color: #000;\" >&nbsp; {{credentials.libellePoint}}</i>\r\n           </a>  -->\r\n           <ngx-avatar name=\"{{credentials.libellePoint}}\" size=\"45\" textSizeRatio=\"2.2\" (click)=\"menu.toggle($event)\" ></ngx-avatar>          \r\n       </li>\r\n   </ul>\r\n   </div>\r\n  \r\n</nav>\r\n<p-menu #menu [popup]=\"true\" [model]=\"items\" [baseZIndex]=\"1500\" ></p-menu>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maincontent',\r\n  templateUrl: './maincontent.component.html',\r\n  styleUrls: ['./maincontent.component.css']\r\n})\r\nexport class MaincontentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n\r\n    <!-- Navbar -->\r\n   <app-header></app-header>\r\n    <!-- Main Sidebar Container -->\r\n    <app-menu></app-menu>\r\n    \r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"content-wrapper\">\r\n      <p-toast></p-toast>\r\n\r\n        <!-- /.content-header -->\r\n    \r\n        <!-- Main content --> \r\n        \r\n                                <router-outlet></router-outlet>\r\n                  \r\n    </div>\r\n    <!-- <app-maincontent></app-maincontent> -->\r\n    <!-- /.content-wrapper -->\r\n  \r\n  \r\n   \r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { Router } from '@angular/router';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  isAdmin: boolean;\r\n   matF: String;\r\n  constructor(private toastr: ToastrService,\r\n    private storage: LocalStorageService,\r\n    private router: Router,\r\n    private local:LocalStorageService,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     this.matF= this.local.retrieve(\"userConnect\").contribuable.matriculeFiscale;\r\n\r\n  }\r\n\r\n  deconnecter() {\r\n    //this.storage.store('client', null);\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('token');\r\n\r\n    this.router.navigate(['/user/login']);\r\n  }\r\n  prises(){\r\n         this.router.routeReuseStrategy.shouldReuseRoute=()=>false;\r\n         this.router.onSameUrlNavigation='reload'\r\n         this.router.navigate(['/dashboard/facture']);\r\n\r\n  }\r\n}\r\n","<aside class=\"main-sidebar sidebar-light-primary elevation-4\">\r\n    <!-- Brand Logo -->\r\n    <div class=\"logo\">\r\n    <a [routerLink]=\"['/dashboard']\"  class=\"simple-text\">\r\n        <div class=\"logo-img\">\r\n        <img src=\"assets/img/AS.png\" alt=\"AdminLTE Logo\" \r\n              >\r\n        </div>\r\n             ArabSoft       \r\n    </a>\r\n    </div>\r\n    <!-- Sidebar -->\r\n    <div class=\"sidebar\">\r\n        <!-- Sidebar user panel (optional) -->\r\n\r\n        <!-- SidebarSearch Form -->\r\n\r\n        <!-- Sidebar Menu -->\r\n        <nav class=\"mt-2\">\r\n            <span class=\"brand-text font-weight-bold\" style=\"color: whitesmoke;text-shadow: 2; font-size: x-large; \">Facture électronique</span>\r\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" style=\"margin-top: 20px;\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                <!-- Add icons to the links using the .nav-icon class\r\n               with font-awesome or any other icon font library -->\r\n               \r\n                <!-- <li class=\"nav-header\">Menu</li> -->\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\" (click)=\"prises()\">\r\n                        <i class=\"fa fa-product-hunt\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Prise en charges facture\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\"  [routerLink]=\"['historiqueFacture']\">\r\n                         <i class=\"fa fa-history\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Historique mes factures\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['client']\" >\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Clients\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"matF=='0'\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['contribuable']\" >\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Contribuable\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"matF=='0'\" >\r\n                    <a class=\"nav-link\" style=\"color: white;\"    [routerLinkActive]=\"['active']\" [routerLink]=\"['grpTaxation']\" >\r\n                        <i class=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Groupe de taxations\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\"  *ngIf=\"matF=='0'\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['parampays']\">\r\n                        <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Paramètres des pays\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['paramproduit']\">\r\n                        <i class=\"fa fa-cubes\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Paramètres des produits\r\n                        </p>\r\n                    </a>\r\n                </li> \r\n                <li class=\"nav-item\"  *ngIf=\"matF=='0'\"> \r\n                    <a class=\"nav-link\" style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['statistics']\">\r\n                        <i class=\"fa fa-pie-chart\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Statistiques\r\n                        </p>\r\n                    </a>\r\n                </li> \r\n                <!-- <div style=\"position : fixed; bottom : 0; \">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\"  style=\"color: white;\" [routerLinkActive]=\"['active']\" [routerLink]=\"['settings']\">\r\n                            <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                            <p>\r\n                              &nbsp; Paramétre de compte &nbsp; &nbsp; &nbsp; \r\n                            </p>\r\n                          </a>\r\n                      </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\"  style=\"color: white;\" (click)=\"deconnecter()\">\r\n                        <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                        <p>\r\n                          &nbsp;Se déconnecter\r\n                        </p>\r\n                      </a>\r\n                  </li>\r\n                </div> -->\r\n            </ul>\r\n        </nav>\r\n        <!-- /.sidebar-menu -->\r\n    </div>\r\n    <!-- /.sidebar -->\r\n</aside>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\r\nimport { Pointvente } from 'src/app/models/pointvente';\r\nimport { Contribuable } from 'src/app/models/contribuable';\r\nimport { authentificationService } from 'src/app/services/authentification.service';\r\nimport { MessageService } from 'primeng/api/public_api';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  contribuable :Contribuable;\r\n  showBack: boolean = true;\r\n  attribute: any;\r\n  test:any;\r\n  pointVenteList :Array<Pointvente>=[]\r\n  selectedPointVente :Pointvente\r\n  constructor(private formBuilder: FormBuilder,\r\n    private storage: LocalStorageService,\r\n    private router: Router,\r\n    private serviceToken:TokenStorageService,\r\n    private authentificationService:authentificationService,\r\n    private toastreService: ToastrService,\r\n    private local:LocalStorageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      adminMail: ['', Validators.compose([Validators.required])],\r\n      adminPassword: [{value:'',disabled:true}, Validators.compose([Validators.required])],\r\n      selectedPointVente: [{value:'',disabled:true},Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  authentificationClient() {\r\n    console.log(this.loginForm.controls['selectedPointVente'].value)\r\n    this.authentificationService.authentification(this.loginForm.controls['selectedPointVente'].value,\r\n    this.loginForm.controls['adminPassword'].value).subscribe(\r\n    (data)=>{\r\n          console.log(data)\r\n      this.local.store(\"userConnect\",data.user)\r\n      this.router.navigate(['/dashboard/facture']);\r\n\r\n    },\r\n     error=>{\r\n       this.toastreService.error(\"Authentification invalide\")\r\n      console.log(\"erorr\")\r\n    })\r\n    \r\n  }\r\n\r\n\r\n\r\n  verifNif(){\r\n    \r\n   console.log(this.loginForm.controls['adminMail'].value)\r\n   this.authentificationService.getPointVentes(this.loginForm.controls['adminMail'].value).subscribe(\r\n       (data:Pointvente[])=>{\r\n         if(data.length !=0){\r\n               this.loginForm.controls['selectedPointVente'].enable()\r\n               this.loginForm.controls['adminPassword'].enable()\r\n              this.pointVenteList=data\r\n              console.log(data)\r\n       }else{\r\n        this.toastreService.error(\"Contribuable n'aucune point de vente\")\r\n       }\r\n       })\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"wrapped-div\">\r\n  <div class=\"tab-header\">\r\n    <h2 routerLink='/user/login' routerLinkActive='active'>{{'login.lbl-titre' | translate}}</h2>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-10 offset-md-1\">\r\n  \r\n<img style=\"width: 100%; max-width: 180px;; height: auto ;margin-top: 19px;background-color: #f8f9fa; border-radius: 100px;\" src=\"/assets/img/AS.png\" class=\"mx-auto d-block\"> \r\n<div class=\"login-logo\">\r\n  <a href=\"\" class=\"cls-text-color\"><b class=\"cls-text-color\">{{'login.lbl-card' | translate}} </b></a>\r\n</div>   \r\n<form [formGroup]=\"loginForm\" class=\"mb-4\" autocomplete=\"off\">\r\n  <div class=\"form-group \">   \r\n    <input (blur)=\"verifNif()\"type=\"text\" class=\"form-control\" autofocus placeholder=\"{{'login.ph-mf' | translate}}\" formControlName=\"adminMail\" >\r\n  </div>\r\n  <div class=\"form-group \">\r\n    <!--p-dropdown [options]=\"pointVenteList\"  [(ngModel)]=\"selectedPointVente\" optionLabel=\"libellePoint\" id=\"lastname1\"  (click)=\"verifNif()\"\r\n placeholder=\"select\" [style]=\"{width: '160px'}\"> </p-dropdown-->\r\n   <select formControlName=\"selectedPointVente\" class=\"form-control\"    >\r\n     <option value=\"\"  disabled hidden>{{'login.ph-listepv' | translate}}</option>\r\n    <option *ngFor=\"let pointv of pointVenteList\" [(ngValue)]=\"pointv.codeAgent\">{{pointv.libellePoint}}</option>\r\n   </select>\r\n   </div>\r\n  <div class=\"form-group \">\r\n    <input type=\"password\" class=\"form-control\" placeholder=\"{{'login.ph-password' | translate}}\" formControlName=\"adminPassword\">\r\n  </div>\r\n  <div   style=\"text-align: center; margin-bottom: 20px;\"> \r\n        <button (click)=\"authentificationClient()\"  class=\"btn\"   [disabled]=\"!loginForm.valid\" >{{'login.btn-connect' | translate}}</button>\r\n  \r\n      \r\n      </div>\r\n      <div  style=\" text-align: center;\"> \r\n        <a [routerLink]=\"['/user/register']\"  style=\" color: #f8f9fa;\" href=\"#\" >{{'login.link-signin' | translate}}</a>\r\n      </div>\r\n      <div  style=\" text-align: center;\"> \r\n        <u [routerLink]=\"['/user/forgetsPwd']\"  style=\" color: #f8f9fa;\"  >{{'login.link-mdpoublie' | translate}}</u>\r\n      </div>\r\n      \r\n</form>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Parampays } from 'src/app/models/parampays';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-param-pays',\n  templateUrl: './param-pays.component.html',\n  styleUrls: ['./param-pays.component.scss']\n})\nexport class ParamPaysComponent implements OnInit {\n    \n     paramPaysList : Array<Parampays>=[]\n     paramDialog :boolean\n     paramPays : Parampays\n     submitted :boolean = false;\n  constructor(private paramPaysService:paramPaysService ,private messageService: MessageService,\n    private confirmationService: ConfirmationService, private toastreService: ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.refresh()\n\n  }\n   \n  saveParam(){\n    this.submitted = true\n    if (!this.paramPays.codePays||\n     !this.paramPays.libPays ||\n     !this.paramPays.langue \n    \n   ) {\n     return;\n   }\n\n    this.paramPaysService.postParamPays(this.paramPays).subscribe(()=>this.refresh());\n    this.toastreService.success(\"Parametre pays ajouter!\");\n\n    this.paramDialog = false;\n    this.paramPays = {};\n\n  }\n  hideDialog() {\n    this.paramDialog = false;\n    this.submitted = false;\n  }\n\n  openNew(){\n\n    this.paramDialog=true\n    this.paramPays={}\n  }\n \n\n\ndeleteParam(prm:Parampays){\n  this.confirmationService.confirm({\n    message: 'Are you sure you want to delete ' + prm.libPays + '?',\n    header: 'Confirm',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n        this.paramPaysService.deletetParam(prm.codePays).subscribe(()=>this.refresh());\n        this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de pays supprimer', life: 3000});    \n      }\n});\n\n\n}\nrefresh(){\n  this.paramPaysService.getParamPays().subscribe((data:Parampays[])=>{\n this.paramPaysList=data\n})\n}\n\nupdateParam(prm:Parampays){\n \n  this.paramPays=prm\n  this.paramDialog=true\n\n}\n}\n","<div class=\"card m-9\">\n  \n\n<div class=\"card-body\">\n<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n       <h5 class=\"p-m-0\">Liste des paramétres des pays</h5>   \n    </ng-template> \n    <ng-template pTemplate=\"right\">\n       <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n\n    </ng-template>   \n</p-toolbar>\n\n<p-table #dt [value]=\"paramPaysList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\ncurrentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\" styleClass=\"p-datatable-sm\"\n[showCurrentPageReport]=\"true\" [globalFilterFields]=\"['nom_hotel','cod_hotel']\">\n\n<ng-template pTemplate=\"header\">\n    <tr>\n        <th >Code Pays \n        </th> \n        <th >Libellé Pays \n        </th> \n        <th >Langue\n        </th> \n        <th >Code devise \n        </th>         \n        <th>Action</th>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"body\" let-param>\n    <tr>\n        <td>{{param.codePays}}</td>\n        <td>{{param.libPays}}</td>\n        <td>{{param.langue}}</td>\n        <td>{{param.codeDevise}}</td>\n        <td>\n            <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n            (click)=\"updateParam(param)\"  ></button>\n            <button pButton pRipple icon=\"pi pi-trash\" \n               (click)=\"deleteParam(param)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n        </td>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"emptymessage\" let-param>\n    <tr>\n        <td colspan=\"5\" style=\"text-align: center;\">\n        \n             <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n             <br>\n             Aucun enregistrement trouvé!\n            \n        </td>\n    </tr>\n</ng-template>\n</p-table> \n\n\n</div>\n</div>\n\n<p-dialog [(visible)]=\"paramDialog\" [style]=\"{width: '650px'}\" header=\"Ajout paramétres de pays\" [modal]=\"true\"\n        styleClass=\"p-fluid\">\n        <ng-template pTemplate=\"content\">\n            <br>\n            <div class=\"row\">    \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.codePays\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Code pays </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.codePays\">Le code de pays est obligatoire.</small>\n                    </span> \n                </div>\n\n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.libPays\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Libellé pays  </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.libPays\">Le libellé de pays est obligatoire.</small>\n                    </span> \n                </div>\n            \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.langue\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Langue </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.langue\">La langue de pays est obligatoire.</small>\n                    </span> \n                </div>\n            </div>\n            <br>\n            <div class=\"row\">    \n                <div class=\"form-group col-md-4\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.codeDevise\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Code devise </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.codeDevise\">Devise de pays est obligatoire.</small>\n                    </span> \n                </div>\n                <div class=\"form-group col-md-8\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.formatMontant\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Format Montant </label>\n                    <small class=\"p-error\" *ngIf=\"submitted && !paramPays.formatMontant\">Format est obligatoire.</small>\n                    </span> \n                </div>\n            </div>\n            <br>\n            <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.procVerifMat\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Procédure Vérification NIF </label>\n                    </span> \n            </div>\n            <br>\n            <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"paramPays.swPaiement\" style=\"width: 100%;\" required autofocus />\n                    <label for=\"name\">Méthode de paiement </label>\n                    </span> \n            </div> \n           <hr class=\"solid\">\n             <div class=\"row\" style=\"float: right;\">\n                <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                ></button>&nbsp;\n             <button pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveParam()\"></button>\n            </div>\n           \n        </ng-template>\n    \n    </p-dialog>\n\n\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\nimport { ParamProduit } from 'src/app/models/paramProduit';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Groupetaxation } from 'src/app/models/groupetaxation';\nimport { grpTaxationService } from 'src/app/services/grpTaxation.service';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n@Component({\n  selector: 'app-param-produit',\n  templateUrl: './param-produit.component.html',\n  styleUrls: ['./param-produit.component.scss']\n})\nexport class ParamProduitComponent implements OnInit {\n\n     paramProduitList : Array<ParamProduit>=[]\n     paramDialog :boolean\n     updateDialog :boolean\n     paramProduits : ParamProduit\n     submitted :boolean = false;\n     contpays:any\n     groupetaxationItems: Groupetaxation[]\n\n  constructor(private ParamProduitService:paramProduitService,private messageService: MessageService,\n    private confirmationService: ConfirmationService, private toastreService: ToastrService,\n    private grpTaxationService: grpTaxationService, private local: LocalStorageService) { }\n\n  ngOnInit(): void {\n    this.contpays= this.local.retrieve(\"userConnect\").contribuable.paramPays.id\n    this.refresh();\n  }\n\n  saveParam(){\n    this.submitted = true\n    if (!this.paramProduits.codeProduit ||\n     !this.paramProduits.libProduit ||\n     !this.paramProduits.prixUnitaire \n   ) {\n     return;\n   }   \n   this.paramProduits.contribuable = this.local.retrieve(\"userConnect\").contribuable\n this.ParamProduitService.postParamProduit(this.paramProduits).subscribe(()=>this.refresh());\n this.paramDialog = false;\nconsole.log(this.paramProduits) \n   }\n\n   deleteParam(prm:ParamProduit){\n    this.confirmationService.confirm({\n      message: 'voulez vous supprimer ' + prm.libProduit + '?',\n      header: 'Confirmer',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n          this.ParamProduitService.deletetParam(prm.codeProduit).subscribe(()=>this.refresh());\n          this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de produit supprimer', life: 3000});\n        }\n  });\n  }\n\n  refresh(){\n    this.ParamProduitService.getparamProduits().subscribe((data:ParamProduit[])=>{\n      this.paramProduitList=data;\n    })\n  }\n\n   hideDialog(){\n     this.refresh()\n     this.paramDialog = false;\n     this.updateDialog = false;\n     this.submitted = false;\n   }\n   openNew(){\n     this.paramDialog=true\n     this.paramProduits={}\n     this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n   }\n   \n   openUpdate(prm:ParamProduit){\n    this.grpTaxationService.getGrpTaxations().subscribe((data: Groupetaxation[]) => {\n      const results = data.filter(result=>result.paramPays.id==this.contpays)\n      this.groupetaxationItems = results\n    })\n    this.updateDialog=true\n    this.paramProduits=prm\n  }\n   updateParamProduit(prm:ParamProduit){\n    \n     this.ParamProduitService.updateParam(prm.id,prm).subscribe(()=>this.refresh());\n     this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de produit changer!', life: 3000});\n     this.updateDialog=false\n    }\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card m-9\">\n  \n\n    <div class=\"card-body\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n           <h5 class=\"p-m-0\">Liste des paramétres des produits</h5>   \n        </ng-template> \n        <ng-template pTemplate=\"right\">\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Search...\"/>\n             &nbsp;\n           <button pButton pRipple label=\"Ajouter\" icon=\"pi pi-plus\" class=\"p-button-success p-mr-2\" (click)=\"openNew()\"></button>\n    \n        </ng-template>   \n    </p-toolbar>\n    \n    <p-table #dt [value]=\"paramProduitList\" [rows]=\"5\" [paginator]=\"true\" [rowHover]=\"true\" dataKey=\"id\"\n    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\" styleClass=\"p-datatable-sm\"\n    [showCurrentPageReport]=\"true\" [globalFilterFields]=\"['codeProduit','libProduit']\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th >Code Produit</th> \n            <th >Libellé Produit</th>    \n            <th >Prix unitaire</th> \n            <th >Groupe taxation</th> \n            <th>Action</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-param>\n        <tr>\n            <td>{{param.codeProduit}}</td>\n            <td>{{param.libProduit}}</td>\n            <td>{{param.prixUnitaire}}</td>\n            <td>{{param.groupeTaxation.libGrp}}</td>\n            <td>\n                <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                (click)=\"openUpdate(param)\"  ></button>\n                <button pButton pRipple icon=\"pi pi-trash\" \n                   (click)=\"deleteParam(param)\" class=\"p-button-rounded p-button-danger p-mr-2\" ></button>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-param>\n        <tr>\n            <td colspan=\"5\" style=\"text-align: center;\">\n            \n                 <i class=\"pi pi-folder-open\" style=\"font-size: 3rem\"></i>&nbsp;\n                 <br>\n                 Aucun enregistrement trouvé!\n                \n            </td>\n        </tr>\n    </ng-template>\n    </p-table> \n    \n    \n    </div>\n    </div>\n    \n    <p-dialog [(visible)]=\"paramDialog\" [style]=\"{width: '450px'}\" header=\"Ajouter paramétres de produit\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                <span class=\"p-float-label\">\n                    <p-dropdown [style]=\"{width: '100%'}\" [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduits.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                aria-required=\"true\" optionLabel=\"libGrp\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\"\n                  requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submitted)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                    <label for=\"grpTax\">Groupe de taxation </label>\n                </span>  \n                <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submitted) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                </div> \n                <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"cp\" [(ngModel)]=\"paramProduits.codeProduit\" style=\"width: 100%;\" required autofocus />\n                            <label for=\"cp\">Code produit </label>\n                        </span> \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.codeProduit\">Code de produit est obligatoire.</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"lp\" [(ngModel)]=\"paramProduits.libProduit\" style=\"width: 100%;\" required />\n                            <label for=\"lp\">Libellé produit </label>\n                        </span>                   \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.libProduit\">Libellé de produit est obligatoire.</small>\n                    </div>\n                    <br>\n                    <div class=\"form-group\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" pInputText id=\"pu\" [(ngModel)]=\"paramProduits.prixUnitaire\" style=\"width: 100%;\" required />\n                            <label for=\"pu\">Prix unitaire </label>\n                        </span>                   \n                            <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.prixUnitaire\">Prix unitaire de produit est obligatoire.</small>\n                    </div>\n               \n          \n               <hr class=\"solid\">\n                 <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"saveParam()\"></button>\n                </div>\n               \n            </ng-template>\n        \n        </p-dialog>\n\n        <p-dialog [(visible)]=\"updateDialog\" [style]=\"{width: '450px'}\" header=\"update paramétres de produit\" [modal]=\"true\"\n            styleClass=\"p-fluid\">\n            <ng-template pTemplate=\"content\">\n                <hr>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <p-dropdown [style]=\"{width: '100%'}\" [options]=\"groupetaxationItems\" [(ngModel)]=\"paramProduits.groupeTaxation\" [autoDisplayFirst]=\"false\"\n                    aria-required=\"true\" optionLabel=\"libGrp\" class=\"p-inputtext-sm\" id=\"grpTax\" #grpTax=\"ngModel\"\n                      requied=\"true\" [ngClass]=\"{'ng-dirty':(grpTax.invalid && submitted)|| (grpTax.dirty && grpTax.invalid)}\"></p-dropdown>   \n                        <label for=\"grpTax\">Groupe de taxation </label>\n                    </span>  \n                    <small class=\"p-error\" *ngIf=\"(grpTax.invalid && submitted) || (grpTax.dirty && grpTax.invalid)\">Le groupe de taxations est obligatoire.</small>\n                </div> \n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"cp\" [(ngModel)]=\"paramProduits.codeProduit\" style=\"width: 100%;\" required autofocus />\n                        <label for=\"cp\">Code produit </label>\n                    </span> \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.codeProduit\">Code de produit est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"lp\" [(ngModel)]=\"paramProduits.libProduit\" style=\"width: 100%;\" required />\n                        <label for=\"lp\">Libellé produit </label>\n                    </span>                   \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.libProduit\">Libellé de produit est obligatoire.</small>\n                </div>\n                <br>\n                <div class=\"form-group\">\n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"pu\" [(ngModel)]=\"paramProduits.prixUnitaire\" style=\"width: 100%;\" required />\n                        <label for=\"pu\">Prix unitaire </label>\n                    </span>                   \n                        <small class=\"p-error\" *ngIf=\"submitted && !paramProduits.prixUnitaire\">Prix unitaire de produit est obligatoire.</small>\n                </div>\n          \n               <hr class=\"solid\">\n                 <div class=\"row\" style=\"float: right;\">\n                    <button pButton pRipple  icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \" (click)=\"hideDialog()\"\n                    ></button>&nbsp;\n                 <button   pButton pRipple  icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\" (click)=\"updateParamProduit(paramProduits)\"></button>\n                </div>\n               \n            </ng-template>\n        \n        </p-dialog>\n    \n    \n        <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n    \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { TokenStorageService } from 'src/app/util/token-storage.service';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { authentificationService } from 'src/app/services/authentification.service';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-password-oublie',\n  templateUrl: './password-oublie.component.html',\n  styleUrls: ['./password-oublie.component.scss']\n})\nexport class PasswordOublieComponent implements OnInit {\n  loginForm: FormGroup;\n  contribuable :Contribuable;\n  showBack: boolean = true;\n  attribute: any;\n  submitted:boolean=false;\n  pointVenteList :Array<Pointvente>=[]\n  selectedPointVente :Pointvente\n  constructor(private formBuilder: FormBuilder,\n    private storage: LocalStorageService,\n    private router: Router,\n    private serviceToken:TokenStorageService,\n    private authentificationService:authentificationService,\n    private toastreService: ToastrService,\n    private local:LocalStorageService,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      matFiscale: ['', Validators.required ],\n      selectedPointVente: [{value:'pointv',disabled:true},Validators.required]\n    });\n  }\n\n\n  verifNif(){\n       this.authentificationService.getPointVentes(this.loginForm.controls['matFiscale'].value).subscribe(\n       (data:Pointvente[])=>{\n         if(data.length !=0){\n               this.loginForm.controls['selectedPointVente'].enable()\n              this.pointVenteList=data\n              console.log(data)\n       }else{\n        this.toastreService.error(\"Contribuable n'aucune point de vente\")\n       }\n      })\n  }\n\n  sendCode(){\n    this.submitted=true\n    if (this.loginForm.invalid)\n    return ;\n    this.authentificationService.sendPwdChangeCode(this.loginForm.controls['selectedPointVente'].value).\n    subscribe((data)=>{\n      this.confirmationService.confirm({\n        message: 'Etes-vous sûr de vouloir réinitialiser le mot de passe pour la point de vente ?',\n        acceptLabel: 'Oui',\n        rejectLabel: 'Non',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Code de récuertion envoyer avec succes', life: 5000 });\n          this.router.navigate(['/user/changePwd'],{state:this.loginForm.controls['selectedPointVente'].value});\n        }\n      });\n\n     },error=>{\n\n      this.toastreService.error(error)\n\n     })\n    \n  }\n\n  cancelUpdates(){\n    this.router.navigate(['/user/login']); \n  }\n}\n","<div class=\"wrapped-div\">\n\n    <div class=\"tab-header\">\n        <h2>Retrouvez votre point de vente</h2>\n    </div>\n  \n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">  \n        <div class=\"login-logo\">\n          <i class=\"fa fa-envelope fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n        </div>   \n        <form [formGroup]=\"loginForm\" class=\"mb-6\" autocomplete=\"off\">\n\n            <div class=\"form-group\">               \n              <input (blur)=\"verifNif()\"type=\"text\" class=\"form-control\" placeholder=\"Matricule Fiscale\" formControlName=\"matFiscale\" >\n              <!--span class=\"p-error\" *ngIf=\"submitted && loginForm.controls['matFiscale'].errors.required\">la matricule fiscale est\n                obligatoire.</span-->\n            </div>\n\n            <div class=\"form-group\">\n              <h6 style=\"color:white\">Listes des point de vente :</h6>\n            <select formControlName=\"selectedPointVente\" class=\"form-control\">\n              <option value=\"\" disabled hidden>Listes des point de ventes</option>\n              <option *ngFor=\"let pointv of pointVenteList\" [ngValue]=\"pointv\">{{pointv.libellePoint}}</option>\n            </select>\n            </div>\n            <div  class=\"btn-toolbar\" style=\" margin-bottom: 20px;\"> \n             <div class=\"col-md-12 text-center \"> \n              <button (click)=\"cancelUpdates()\"  class=\"btn\">Annuler</button>\n              <button (click)=\"sendCode()\"  style=\"margin-left: 100px;\"  class=\"btn\"     >Valider </button>\n             </div>\n           \n            </div>\n        </form>\n     </div>\n    </div>\n  </div>\n\n  <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n  <p-toast></p-toast>","import { Component, OnInit} from '@angular/core';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { Pointvente } from 'src/app/models/pointvente';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Parampays } from 'src/app/models/parampays';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerModule, NgxSpinnerService } from \"ngx-spinner\";\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  contribuable: Contribuable;\n  pointVenteList: Array<Pointvente> = []\n  pointVente: Pointvente\n  pointVenteDialog: boolean;\n  confirmationDialog: boolean;\n  submittedd: boolean;\n  submitted: boolean;\n  password: string;\n  strongRegex: RegExp;\n  paramPaysList: Array<Parampays> = []\n  telmask=\"99-999-999\"\n  \n\n  constructor(private contribuableService: contribuableService, private router: Router, private messageService: MessageService,\n    private confirmationService: ConfirmationService, private paramPaysService: paramPaysService,private toastreService: ToastrService,\n     private spinner: NgxSpinnerService, private translateService: TranslateService) { }\n\n  ngOnInit(): void {\n    this.contribuable = {}\n    this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n      console.log(data)\n      this.paramPaysList = data\n    })\n  }\n\n  register() {\n    this.submitted = true\n     if (!this.contribuable.matriculeFiscale ||\n      !this.contribuable.raisonSocial ||\n      !this.contribuable.numRegistre ||\n      !this.contribuable.numtel ||\n      !this.contribuable.email\n    ) {\n      return;\n    }\n    this.contribuable.paramPays = this.paramPaysList[0];\n    //var testObject={'idValue':1,'viewValue':'coco'};\n    //this.router.navigate(['/user/verification'],{state:this.contribuable});\n    this.spinner.show();\n    this.contribuableService.postContribuable(this.contribuable).subscribe((data) => {\n      if(data!==null){\n        this.router.navigate(['/user/verification'],{state:data});\n        this.spinner.hide();\n      }else{\n        console.log('errooooooor'); \n      }\n      setTimeout(()=>{\n        this.spinner.hide();\n      },10000)\n    }, error => {\n      this.toastreService.error(error.error.message);\n      this.spinner.hide()\n      this.toastreService.error(\"problem d'envoi d'email!\");\n    } \n    )\n  }\n\n  hideDialog() {\n    this.pointVenteDialog = false;\n    this.submittedd = false;\n  }\n  hideDialog2() {\n    this.confirmationDialog = false;\n  }\n\n  ConfirmRegistration() {\n    this.submitted = true\n     if (!this.contribuable.matriculeFiscale ||\n      !this.contribuable.raisonSocial ||\n      !this.contribuable.numRegistre ||\n      !this.contribuable.numtel ||\n      !this.contribuable.email \n     \n    ) {\n      return;\n    }\n    this.confirmationDialog = true;\n\n  }\n\n\n  addNewPointVentes() {\n    this.pointVente = new Pointvente();\n    this.password=null\n    this.pointVenteDialog = true\n\n  }\n  deletepv(pv: Pointvente) {\n\n    this.confirmationService.confirm({\n      message: 'Etes-vous sûr de vouloir supprimer ' + pv.libellePoint + '?',\n      acceptLabel: 'Oui',\n      rejectLabel: 'Non',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.pointVenteList = this.pointVenteList.filter(val => val.id_list !== pv.id_list);\n        this.pointVente = {};\n        this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Point de vente supprimer', life: 3000 });\n      }\n    });\n\n  }\n  updatepv(pv: Pointvente) {\n\n    this.pointVente = { ...pv };\n    this.pointVenteDialog = true;\n\n  }\n\n  savepv() {\n    this.submittedd = true;\n    if (\n      !this.pointVente.codeAgent ||\n      !this.pointVente.libellePoint ||\n      !this.pointVente.motPasse ||\n      !this.pointVente.nomAgent ||\n      !this.pointVente.email ||\n      !this.pointVente.motPasse\n    ) {\n      return;\n    }\n    if(this.validateRegexMdp()){\n      return;\n    }\n    if (this.pointVente.id_list) {\n      this.pointVenteList[this.findIndexById(this.pointVente.id_list, this.pointVenteList)] = this.pointVente\n      this.messageService.add({ severity: 'success', summary: 'Succés', detail: 'Point de vente modifier', life: 3000 });\n    } else if(!this.pointVenteList.some((pv)=> pv.codeAgent == this.pointVente.codeAgent)){\n      this.pointVente.id_list = this.createId();\n    this.pointVenteList.push(this.pointVente);\n    this.pointVenteList = [...this.pointVenteList];\n    this.pointVenteDialog = false;\n    this.contribuable.pointVente = this.pointVenteList\n    this.pointVente = {};\n    this.toastreService.success(\"Point de vente ajouter!\");\n    this.submittedd = false;\n    }else{\n      this.toastreService.error(\"Code Agent déja existe!\");\n    }\n\n  }\n\n  findIndexById(id: string, list: Array<any>): number {\n    let index = -1;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  createId(): string {\n    let id = '';\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return id;\n  }\n\n  annuler() {   \n  if(confirm(this.translateService.instant('enregistrement.dialog-confirm-annuler'))){\n    this.router.navigate(['/user/login']);\n  }\n  }\n\n  validateRegexMdp(){\n    this.strongRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*+.-/])(?=.{8,})');\n    if(!this.strongRegex.test(this.pointVente.motPasse)){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n\n}\n","<div class=\"wrapped-div-register\">\n    <p-toolbar styleClass=\"p-mb-4\">\n        <ng-template pTemplate=\"left\">\n            <h5 style=\"margin-left: 20px;\">{{'enregistrement.lbl-inscription' | translate}}</h5>\n        </ng-template>\n        <ng-template pTemplate=\"right\">\n            <button pButton pRipple  icon=\"pi pi-times\" label=\" {{'enregistrement.btn-annuler' | translate}}\" class=\"p-button-danger p-buttoon-sm p-mr-2\"\n                (click)=\"annuler()\" pTooltip=\"{{'enregistrement.tt-btn-annuler' | translate}} \" tooltipPosition=\"top\"></button>\n            <button pButton pRipple  (click)=\"ConfirmRegistration()\" icon=\"pi pi-save\" label=\" {{'enregistrement.btn-enregistrer' | translate}}\"\n                class=\"p-button-success p-button-sm p-mr-2\" pTooltip=\"{{'enregistrement.tt-btn-enregistrer' | translate}}\" tooltipPosition=\"top\"></button>\n        </ng-template>\n    </p-toolbar>\n    <p-accordion header=\"Inscriptions\" [style]=\"{width: '100%',height:'470px'}\">\n        <div class=\"card \">\n            <div class=\"card-body \">\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"mf\" [(ngModel)]=\"contribuable.matriculeFiscale\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                            autofocus pInputText>\n                            <label for=\"mf\">{{'enregistrement.lbl-mf' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.matriculeFiscale\">Matricule Fiscale est obligatoire.</small>\n                        </div>\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"rs\" [(ngModel)]=\"contribuable.raisonSocial\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"rs\">{{'enregistrement.lbl-rc' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.raisonSocial\">Raison Sociale est obligatoire.</small>                        \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"rc\" [(ngModel)]=\"contribuable.numRegistre\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"rc\">{{'enregistrement.lbl-regcom' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.numRegistre\">Registre de commerce est obligatoire.</small>  \n                    </div>\n                \n                \n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <p-inputMask id=\"tel\" mask=\"{{telmask}}\" [(ngModel)]=\"contribuable.numtel\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\"></p-inputMask>\n                            <label for=\"tel\"> {{'enregistrement.lbl-tel' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.numtel\">N°Téléphone est obligatoire.</small>                        \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"email\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"contribuable.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText type=\"email\" [email]=\"true\">\n                            <label for=\"email\">{{'enregistrement.lbl-email' | translate}}</label>\n                        </span>                         \n                            <small class=\"p-error\" *ngIf=\"submitted && !contribuable.email\">L'email est\n                                obligatoire.</small>\n                                <small class=\"p-error\" *ngIf=\"submitted && email.errors?.email\">email \n                                    invalide.</small>                       \n                    </div>\n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <input id=\"adresse\" [(ngModel)]=\"contribuable.adresse\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                            <label for=\"adresse\">{{'enregistrement.lbl-adresse' | translate}}</label>\n                        </span>                          \n                    </div>\n                </div>\n                <br>\n                <div class=\"form-row row\">                \n                    <div class=\"form-group col-lg-6\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown [style]=\"{'width':'100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"contribuable.paramPays\" \n                            optionLabel=\"libPays\" inputId=\"lastname1\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"false\"> </p-dropdown>                            \n                            <label for=\"lastname1\">{{'enregistrement.lbl-pays' | translate}} </label>\n                        </span>                          \n                    </div>\n                    <div class=\"col-lg-6\">\n                        <re-captcha siteKey=\"6LfTS1geAAAAAMLDCLmcu45hhV7nk4bzz_fPTYbRE\"></re-captcha>                        \n                    </div>\n                </div>\n            </div>\n        </div>\n        <p-accordionTab header=\"{{'enregistrement.tab-listepv' | translate}}\" [selected]=\"true\">\n            <div class=\"card\">\n                <p-table #dt [value]=\"pointVenteList\" [rows]=\"5\" [paginator]=\"true\" styleClass=\"p-datatable-sm\"\n                    responsiveLayout=\"scroll\" [rowHover]=\"true\" dataKey=\"id\"\n                    currentPageReportTemplate=\"Affichage de {first} à {last} parmis {totalRecords} enregistrement(s)\"\n                    [showCurrentPageReport]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            \n                            <th>{{'enregistrement.th-libpv' | translate}}</th>\n                            <th>{{'enregistrement.th-email' | translate}}</th>\n                            <th>{{'enregistrement.th-ca' | translate}}</th>\n                            <th>{{'enregistrement.th-na' | translate}}</th>\n                            <th>{{'th-action' | translate}}</th>\n                            <th>\n                                <p-button pTooltip=\"{{'enregistrement.tt-btn-ajoutpv' | translate}}\" tooltipPosition=\"top\"\n                                    (click)=\"addNewPointVentes()\" icon=\"pi pi-plus-circle\" class=\"p-button-info p-mr-2\">\n                                </p-button>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-pv>\n                        <tr>\n\n                            \n                            <td>{{pv.libellePoint}}</td>\n                            <td>{{pv.email}}</td>\n                            <td>{{pv.codeAgent}}</td>\n                            <td>{{pv.nomAgent}}</td>\n\n                            <td>\n                                <button pButton pRipple icon=\"pi pi-pencil\"\n                                    class=\"p-2 p-button-rounded p-button-success p-mr-2\"\n                                    (click)=\"updatepv(pv)\"></button>\n                                <button pButton pRipple icon=\"pi pi-trash\"\n                                    class=\"p-button-rounded p-button-warning p-mr-2\" (click)=\"deletepv(pv)\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n\n                </p-table>\n            </div>\n        </p-accordionTab>\n    </p-accordion>\n</div>\n\n\n<p-dialog [(visible)]=\"pointVenteDialog\" [style]=\"{width: '700px'}\" header=\"Ajout point de ventes\" [modal]=\"true\"\n    styleClass=\"p-fluid\">\n    <ng-template pTemplate=\"content\">\n        <hr>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6 md-lg-4\">               \n                    <span class=\"p-float-label\">\n                        <input type=\"text\" pInputText id=\"libellePoint\" [(ngModel)]=\"pointVente.libellePoint\" required\n                        autofocus class=\"p-inputtext-lg\" #libpoint=\"ngModel\" [ngClass]=\"{'ng-dirty': (libpoint.invalid && submittedd) || (libpoint.dirty && libpoint.invalid)}\" />\n                        <label for=\"libellePoint\">{{'enregistrement.th-libpv' | translate}}*</label>\n                    </span>         \n                        <small class=\"p-error\" *ngIf=\"(libpoint.invalid && submittedd) || (libpoint.dirty && libpoint.invalid)\">Libellé de point est obligatoire.</small>\n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"codeAgent\" [(ngModel)]=\"pointVente.codeAgent\" class=\"p-inputtext-lg\" required/>\n                    <label for=\"codeAgent\">{{'enregistrement.th-ca' | translate}}* </label>\n                </span>         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.codeAgent\">Code d'agent est obligatoire.</small>\n            </div>\n           \n        </div> \n        <br>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"text\" pInputText id=\"nomAgent\" [(ngModel)]=\"pointVente.nomAgent\" class=\"p-inputtext-lg\" required />                    \n                    <label for=\"nomAgent\">{{'enregistrement.th-na' | translate}}* </label>\n                </span>         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.nomAgent\">Nom d'agent est obligatoire.</small>                \n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input id=\"emaila\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"pointVente.email\" class=\"p-inputtext-lg\"  pInputText type=\"email\" [email]=\"true\">\n                    <label for=\"emaila\">{{'enregistrement.lbl-email' | translate}}*</label>\n                </span>                         \n                    <small class=\"p-error\" *ngIf=\"submittedd && !pointVente.email\">L'email est\n                        obligatoire.</small>\n                        <small class=\"p-error\" *ngIf=\"submittedd && email.errors?.email\">email \n                            invalide.</small>                       \n            </div>\n           \n        </div>\n        <br>\n        <div class=\"form-row row\">\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"password\" pPassword id=\"password1\" #pass=\"ngModel\" [(ngModel)]=\"pointVente.motPasse\" class=\"p-inputtext-lg\" \n                     required  [ngClass]=\"{'ng-dirty': (pass.invalid && submittedd) || (pass.dirty && pass.invalid)}\" />\n                    <label for=\"password1\">{{'enregistrement.lbl-password' | translate}}*</label>\n                </span>\n                    <small class=\"p-error\" *ngIf=\"(pass.invalid && submittedd) || (pass.dirty && pass.invalid)\">mot de passe obligatoire.</small>\n                    <small class=\"p-error\" *ngIf=\"submittedd && validateRegexMdp()\">{{'error.msg-mdp-rgx' | translate}}</small>\n            </div>\n            <div class=\"form-group col-lg-6\">\n                <span class=\"p-float-label\">\n                    <input type=\"password\" pInputText id=\"motPasseConfirm\" [(ngModel)]=\"this.password\" class=\"p-inputtext-lg\" required />\n                    <label for=\"motPasseConfirm\">{{'enregistrement.lbl-confpassword' | translate}}*</label>\n                </span> \n                    <small class=\"p-error\" *ngIf=\"this.password!=pointVente.motPasse\">les mots de passe ne sont pas conforme.</small>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row\" style=\"float: right;\">\n            <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger \"\n                (click)=\"hideDialog()\"></button> &nbsp;\n            <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-rounded p-button-success\"\n                (click)=\"savepv()\"></button>\n        </div>\n    </ng-template>\n</p-dialog>\n\n<!--confirm registration dialog-->\n\n<p-dialog [(visible)]=\"confirmationDialog\" [style]=\"{width: '700px'}\" header=\"{{'enregistrement.dialog-header-mail' | translate}}\" [modal]=\"true\"\n    styleClass=\"p-fluid\" >\n    <div style=\"text-align: center;\">\n        <i class=\"pi pi-inbox\" style=\"font-size: 4rem;\"></i>\n    </div>\n        <p>{{'enregistrement.dialog-p-mail' | translate}}</p>\n        <ng-template pTemplate=\"footer\">\n        <div class=\"row\" style=\"float: right;\">\n            \n            <button pButton  icon=\"pi pi-check\" label=\"OK\" styleClass=\"p-button-text\"\n                (click)=\"register()\"></button>\n        </div>\n    </ng-template>\n    \n</p-dialog>\n\n<!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n\n","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Router } from '@angular/router';\nimport { Parampays } from 'src/app/models/parampays';\nimport { paramPaysService } from 'src/app/services/paramPays.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  submitted=true;\n  pointVente:any;\n  cont:Contribuable;\n  password: string;\n  paramPaysList: Array<Parampays> = []\n  constructor(private storage:LocalStorageService,\n    private router:Router,private paramPaysService: paramPaysService,\n    private messageService: MessageService, private contribuableService: contribuableService, \n    private spinner: NgxSpinnerService,private confirmationService: ConfirmationService,\n    private toastreService: ToastrService) { }\n\n  ngOnInit(): void {\n  this.pointVente=this.storage.retrieve(\"userConnect\");\n  this.cont=this.pointVente.contribuable;\n  this.paramPaysService.getParamPays().subscribe((data: Parampays[]) => {\n    console.log(data)\n    this.paramPaysList = data\n  })\n  console.log(this.pointVente)\n  console.log(this.cont)\n\n  }\n\n  updateUser(){\n    \n      this.confirmationService.confirm({    \n        message: 'Are you sure you want to update ' + this.pointVente.libellePoint + '?',\n        header: 'Confirm',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          debugger\n          this.spinner.show();\n          this.updatePv()\n          this.contribuableService.updateContribuable(this.cont.id,this.pointVente.contribuable).subscribe((data) => { \n            console.log(data)\n            this.spinner.hide();\n            this.messageService.add({severity:'success', summary: 'Succés', detail: 'Paramètres de compte changer', life: 3000});   \n            this.storage.clear\n            this.storage.store(\"userConnect\",data)\n            console.log(this.storage)\n          }, error => {\n            this.messageService.add({severity:'error', summary: 'Erreur', detail: 'Un erreur apparu', life: 3000});  \n            this.spinner.hide();  \n          } \n          )\n        } \n          });\n          \n    }\n    updatePv(){\n      this.contribuableService.updatePointvente(this.pointVente.id,this.pointVente).subscribe()\n    }\n    \n\n\n\n}\n","<p-toast [baseZIndex]=\"5000\"></p-toast>\n<div class=\"card\" >\n    <p-accordion [style]=\"{'height':'100%'}\">\n        <p-toolbar styleClass=\"p-mb-4\">\n            <ng-template pTemplate=\"left\">\n                <h6 Class=\"titles\">Paramétre de compte</h6>\n            </ng-template>\n\n            <ng-template pTemplate=\"right\">\n                <button pButton pRipple (click)=\"updateUser()\" label=\"Enregistrer\" icon=\"pi pi-save\"\n                class=\"p-button-success p-button-sm p-mr-2\" ></button>\n            </ng-template>\n        </p-toolbar>     \n        <p-tabView>\n            <p-tabPanel header=\"Contribuable\" >\n                <div class=\"card \">\n                    <p-accordion [style]=\"{'height':'100%'}\">\n                        <p-toolbar [style]=\"{'background-color':'rgb(67, 125, 161)','color':'white'}\">\n                            <ng-template pTemplate=\"left\">\n                                <h6 Class=\"titles\">Paramétre de contibuable</h6>\n                            </ng-template>\n                        </p-toolbar>   \n                        <hr>\n                    <div class=\"card-body \">\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"mf\" [(ngModel)]=\"pointVente.contribuable.matriculeFiscale\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                                     pInputText >\n                                    <label for=\"mf\">Matricule Fiscale </label>\n                                </span>  \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.matriculeFiscale\">Matricule Fiscale est obligatoire.</small>\n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"rc\" [(ngModel)]=\"pointVente.contribuable.raisonSocial\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"rc\">Raison Sociale</label>\n                                </span>       \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.raisonSocial\">Raison Sociale est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"regc\" [(ngModel)]=\"pointVente.contribuable.numRegistre\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"regc\">R. commerce</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.numRegistre\">Registre de commerce est obligatoire.</small>  \n                            </div>\n                        \n                        \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <p-inputMask id=\"tel\" mask=\"99-999-999\" [(ngModel)]=\"pointVente.contribuable.numtel\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\"></p-inputMask>\n                                    <label for=\"tel\">N°telephone</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.numtel\">N°Téléphone est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"emailc\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"pointVente.contribuable.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText type=\"email\" [email]=\"true\">\n                                    <label for=\"emailc\">Email</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.contribuable.email\">L'email est\n                                        obligatoire.</small>\n                                        <small class=\"p-error\" *ngIf=\"submitted && email.errors?.email\">email \n                                            invalide.</small>                       \n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"adresse\" [(ngModel)]=\"pointVente.contribuable.adresse\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"adresse\">Adresse</label>\n                                </span>                          \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">                \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <p-dropdown [style]=\"{'width':'100%'}\" [options]=\"paramPaysList\" [(ngModel)]=\"pointVente.contribuable.paramPays\" \n                                    optionLabel=\"libPays\" inputId=\"pays\" class=\"p-inputtext-sm\" [autoDisplayFirst]=\"true\"> </p-dropdown>                            \n                                    <label for=\"pays\">Pays </label>\n                                </span>                          \n                            </div>\n                        </div>\n                    </div>\n                </p-accordion>\n                </div>\n            </p-tabPanel>\n            <p-tabPanel header=\"Agent\">\n\n                <div class=\"card \">\n                    <p-accordion [style]=\"{'height':'100%'}\">\n                    <p-toolbar  [style]=\"{'background-color':'rgb(67, 125, 161)','color':'white'}\">\n                    <ng-template pTemplate=\"left\">\n                        <h6 Class=\"titles\">Paramètre de point de vente</h6>\n                    </ng-template>\n                    </p-toolbar>\n                    <hr>\n                    <div class=\"card-body \">\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"ca\" [(ngModel)]=\"pointVente.codeAgent\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\"\n                                     pInputText>\n                                    <label for=\"ca\">Code agent </label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.codeAgent\">Code agent est obligatoire.</small>\n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"na\" [(ngModel)]=\"pointVente.nomAgent\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"na\">Nom agent</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.nomAgent\">Nom agent est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"libpv\" [(ngModel)]=\"pointVente.libellePoint\" type=\"text\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"libpv\">Libelle point de vente</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.libellePoint\">Libelle est obligatoire.</small>  \n                            </div>\n                        \n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input id=\"emailpv\" type=\"text\" [(ngModel)]=\"pointVente.email\" class=\"p-inputtext-lg\" style=\"width: 100%;\" pInputText>\n                                    <label for=\"emailpv\">Email</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"submitted && !pointVente.email\">Email est obligatoire.</small>                        \n                            </div>\n                        </div>\n                        <br>\n                        <div  class=\"form-group col-lg-6 p-2\"> \n                            <u [routerLink]=\"['/user/forgetsPwd']\"  style=\" color: #155fa8;\"  > Changer le mot de passe</u>\n                          </div>\n                        \n                        <!-- <div class=\"form-row row\">\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input type=\"password\" pPassword id=\"password\" [(ngModel)]=\"pointVente.motPasse\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\" required />\n                                    <label for=\"password\">Mot de passe*</label>\n                                </span>        \n                            </div>\n                            <div class=\"form-group col-lg-6 p-2\">\n                                <span class=\"p-float-label\">\n                                    <input type=\"password\" pInputText id=\"motPasseConfirm\" [(ngModel)]=\"this.password\" class=\"p-inputtext-lg\" [style]=\"{'width':'100%'}\" required />\n                                    <label for=\"motPasseConfirm\">Confirmation mot de passe*</label>\n                                </span>   \n                                    <small class=\"p-error\" *ngIf=\"this.password!=pointVente.motPasse\">les mots de passe ne sont pas conforme.</small>\n                            </div>\n                        </div>\n                        <br> -->\n                        \n                    </div>\n                    </p-accordion>\n                </div>\n            </p-tabPanel>\n        </p-tabView>\n       \n    \n\n</p-accordion>\n</div>\n<p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\n\n<!--spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { factureService } from 'src/app/services/facture.service';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Facture } from 'src/app/models/facture';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label, SingleDataSet, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip } from 'ng2-charts';\nimport { paramProduitService } from 'src/app/services/paramProduit.service';\nimport { ParamProduit } from 'src/app/models/paramProduit';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n  pv:any;\n  factureList:Array<Facture>=[]\n  TotalFacts:Number;\n  TotalProduits:Number;\n  factByState: any;\n  factByType: any;\n  factByMonth: any;\n  prodByGt: any;\n  constructor(private factureService:factureService,private ParamProduitService:paramProduitService, private storage:LocalStorageService, \n    private spinner: NgxSpinnerService) {\n      monkeyPatchChartJsLegend();\n      monkeyPatchChartJsTooltip();\n     }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.pv=this.storage.retrieve((\"userConnect\"));\n    this.factureByState();\n    this.factureByMonth();\n    this.produitsByGt();\n  }\n \n  factureByState(){  \n    this.factureService.getAllFactures(this.pv.codeAgent).subscribe((data:Facture[])=>{     \n       this.factureList=data\n       this.TotalFacts = data.length\n       this.factByState = {\n        labels:['Enregister','Valider','EN_ATTENTE','ENVOYER'],\n        datasets:[\n          { data: [this.factureList.filter(f => f.state == \"ENREGISTRER\").length,this.factureList.filter(f => f.state == \"VALIDER\").length,this.factureList.filter(f => f.state == \"EN_ATTENTE\").length,this.factureList.filter(f => f.state == \"ENVOYER\").length],\n            backgroundColor: [\"#B9FFC8\", \"#9CCDFC\", \"#FD968A\"],\n            hoverBackgroundColor: [\"#B9FFC8\", \"#9CCDFC\", \"#FD968A\"]\n          }]}\n          this.factByType = {\n            labels:['Vente','Avoir','Acompte'],\n            datasets:[\n              { data: [this.factureList.filter(f => f.typFact == \"Vente\").length,this.factureList.filter(f => f.typFact == \"Avoir\").length,this.factureList.filter(f => f.typFact == \"Acompte\").length],\n                backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n                hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n              }]}\n       this.spinner.hide();\n       setTimeout(() => {\n        this.spinner.hide();\n       },4000);\n    })\n \n    }\n\n factureByMonth(){\n   this.factureService.getFactByMonth().subscribe(monthlyfacts => {\n    this.factByMonth ={\n      labels:['Jan','Fev','Mar','Avr','Mai','Jua','Jui','Aou','sep','oct','nov','dec'],\n      datasets:[\n        { label: 'factures par mois',\n          data: monthlyfacts,\n          fill:true,\n          borderColor: [\"#36A2EB\"],\n          backgroundColor: 'rgba(54,162,235,0.2)',\n          tension: .4,\n        }]}\n  });\n }\n\n produitsByGt(){\n   this.ParamProduitService.getMyProduits(this.pv.contribuable.id).subscribe((data : ParamProduit[]) => {\n    this.TotalProduits = data.length\n    let gtlabels = new Set();\n    data.forEach(e => {\n      gtlabels.add(e.groupeTaxation.libGrp)\n    });\n    let uniquegtlabelss = [...new Set(gtlabels)];\n    let prodNbList:Array<Number>=[]\n    for(let i = 0; i < uniquegtlabelss.length;i++){\n    prodNbList.push(data.filter(p => p.groupeTaxation.libGrp == uniquegtlabelss[i]).length)\n    };\n    console.log(gtlabels)\n       this.prodByGt = {\n        labels:uniquegtlabelss,\n        datasets:[\n          { label:'produit par tax', \n            data: prodNbList,\n            backgroundColor: [\"#B9FFC8\", \"#9CCDFC\",\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n            hoverBackgroundColor: [\"#B9FFC8\", \"#9CCDFC\",\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n          }]}\n       })\n   \n }\n\n\n\n\n\n}\n\n\n","<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n        <h5 class=\"p-m-0\">Statistiques des factures</h5>\n    </ng-template>\n</p-toolbar>\n\n\n<h6>&nbsp;Nombres des factures total = {{TotalFacts}}</h6>\n<div class=\"row\">\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"doughnut\" [data]=\"factByState\" width=\"550px\" [responsive]=\"true\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"doughnut\" [data]=\"factByType\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"line\" [data]=\"factByMonth\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col\" style=\"display: flex;\">\n        <div class=\"card m-9\">\n            <p-chart type=\"bar\" [data]=\"factByMonth\" width=\"550px\" responsive=\"true\"></p-chart>\n        </div>\n    </div>\n</div>\n\n\n<p-toolbar styleClass=\"p-mb-4\">\n    <ng-template pTemplate=\"left\">\n        <h5 class=\"p-m-0\">Statistiques des produits</h5>\n    </ng-template>\n</p-toolbar>\n<h6>&nbsp;Nombres des produits total = {{TotalProduits}}</h6>\n\n<div class=\"col\" style=\"display: flex;\">\n    <div class=\"card m-9\">\n        <p-chart type=\"polarArea\" [data]=\"prodByGt\" width=\"500px\" responsive=\"true\"></p-chart>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Contribuable } from 'src/app/models/contribuable';\nimport { contribuableService } from 'src/app/services/contribuable.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n\n@Component({\n  selector: 'app-user-verification',\n  templateUrl: './user-verification.component.html',\n  styleUrls: ['./user-verification.component.scss']\n})\nexport class UserVerificationComponent implements OnInit {\n\n  constructor(private contribuableService: contribuableService, private router: Router,\n    private activatedRouter:ActivatedRoute, private messageService: MessageService,\n    private toastreService: ToastrService, private spinner: NgxSpinnerService) {\n     \n       console.log(this.router.getCurrentNavigation().extras.state);\n      }\n  contribuable: Contribuable;\n  submitted: boolean;\n\n  ngOnInit(): void {\n    this.contribuable = history.state;\n  }\n\n  validate() {\n    this.submitted = true\n    if (!this.contribuable.verificationCode) {\n      return;\n    }\n    this.spinner.show();\n    this.contribuableService.userVerification(this.contribuable).subscribe((data) => {\n      setTimeout(()=>{\n        this.toastreService.success(\"Compte validé avec succée!\");\n      },20000);\n      this.router.navigate(['/user/login']).then(()=>{\n        this.toastreService.success(\"Compte validé avec succée!\");\n      });\n    }, error => {\n      this.spinner.hide()\n      console.log(error);\n      this.toastreService.error(error.error.message);\n    }\n    )\n  }\n\n\n}\n","<div class=\"wrapped-div\">\n    \n    <div class=\"tab-header\">\n        <h2>{{'validation.titre' | translate}}</h2>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n\n            <div class=\"login-logo\">\n                <i class=\"fa fa-envelope fa-3x\" style=\"color: white;\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"login-logo\">\n                <a href=\"\" class=\"cls-text-color\"><b class=\"cls-text-color\">{{'validation.lbl-code' | translate}}</b></a>\n            </div>\n            \n                <div class=\"form-group \">\n                    <input class=\"form-control\" id=\"codepin\" [(ngModel)]=\"contribuable.verificationCode\" type=\"text\" pInputText>\n                    <small class=\"p-error\" *ngIf=\"submitted && !contribuable.verificationCode\">\n                        <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> &nbsp; codepin est obligatoire.</small>\n                    \n                </div>\n                <div style=\"text-align: center; margin-bottom: 20px;\">\n                    <button (click)=\"validate()\" class=\"btn\">{{'validation.btn-valider' | translate}}</button>\n                </div>\n            \n        </div>\n    </div>\n\n\n</div>\n\n<!-- Spinner-->\n<ngx-spinner bdColor=\"rgba(51,51,51,0.3)\" type=\"ball-clip-rotate-pulse\" color=\"#ec9a01\" size=\"large\">\n    <img style=\"width: 50px; height: 50px; margin-top: -180px;\" src=\"/assets/img/AS.png\" >\n</ngx-spinner>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlServer: 'http://localhost:8059/',\r\n  defaultLang: 'fr'\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}